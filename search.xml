<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>聚类算法</title>
    <url>/2019/12/17/%E8%81%9A%E7%B1%BB%E7%AE%97%E6%B3%95/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>向量旋转平移</title>
    <url>/2019/11/27/%E5%90%91%E9%87%8F%E6%97%8B%E8%BD%AC%E5%B9%B3%E7%A7%BB/</url>
    <content><![CDATA[<h1 id="已知旋转角度和旋转点和旋转后向量的模"><a href="#已知旋转角度和旋转点和旋转后向量的模" class="headerlink" title="已知旋转角度和旋转点和旋转后向量的模"></a>已知旋转角度和旋转点和旋转后向量的模</h1><ol>
<li>计算向量的方向；</li>
<li>计算旋转后的角；</li>
<li>将已知的旋转后向量的模向x和y两个方向投影</li>
<li>旋转点分别加上投影后的长度即可得到旋转后另一端点坐标</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">def vectorTransform(p1, p2, p, angle, l):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    Function:</span><br><span class="line">        get the point by vector transform</span><br><span class="line">    Parameters:</span><br><span class="line">        p1: [x, y], the start point of vector</span><br><span class="line">        p2: [x, y], the end point of vector</span><br><span class="line">        p: [x, y], the start point of tansform</span><br><span class="line">        angle: radian , +:Counterclockwise, -:Clockwise</span><br><span class="line">        l: distance</span><br><span class="line">    Return:</span><br><span class="line">        transformed point</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    d_l2 = math.sqrt((p2[1]-p1[1])**2+(p2[0]-p1[0])**2)</span><br><span class="line">    unit_vector = [(p2[0]-p1[0])/d_l2, (p2[1]-p1[1])/d_l2]</span><br><span class="line">    vector_angle = math.atan(unit_vector[1]/(unit_vector[0]+1e-20))</span><br><span class="line">    lx = l*math.cos(vector_angle+angle)</span><br><span class="line">    ly = l*math.sin(vector_angle+angle)</span><br><span class="line"></span><br><span class="line">    return [int(p[0]+lx), int(p[1]+ly)]</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>图像处理</category>
      </categories>
      <tags>
        <tag>图像处理</tag>
      </tags>
  </entry>
  <entry>
    <title>AI Model Optimization</title>
    <url>/2019/11/26/AI-Model-Optimization/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>AI</category>
      </categories>
      <tags>
        <tag>AI</tag>
      </tags>
  </entry>
  <entry>
    <title>TensorRT Custom Plugin</title>
    <url>/2019/11/26/TensorRT-Custom-Plugin/</url>
    <content><![CDATA[<p><strong>NVIDIA</strong>官方关于<strong>TensorRT</strong>所有的文档: <a href="https://docs.nvidia.com/deeplearning/sdk/tensorrt-archived/index.html" target="_blank" rel="noopener">NVIDIA Deep Learning SDK TensorRT Archives</a></p>
<h1 id="TensorRT介绍"><a href="#TensorRT介绍" class="headerlink" title="TensorRT介绍"></a>TensorRT介绍</h1><h1 id="TensorRT安装"><a href="#TensorRT安装" class="headerlink" title="TensorRT安装"></a>TensorRT安装</h1><h1 id="TensorRT应用"><a href="#TensorRT应用" class="headerlink" title="TensorRT应用"></a>TensorRT应用</h1><h1 id="TensorRT自定义层"><a href="#TensorRT自定义层" class="headerlink" title="TensorRT自定义层"></a>TensorRT自定义层</h1>]]></content>
      <categories>
        <category>AI</category>
      </categories>
      <tags>
        <tag>AI</tag>
      </tags>
  </entry>
  <entry>
    <title>手撕图像仿射变换</title>
    <url>/2019/11/25/%E6%89%8B%E6%92%95%E5%9B%BE%E5%83%8F%E4%BB%BF%E5%B0%84%E5%8F%98%E6%8D%A2/</url>
    <content><![CDATA[<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 功能: 采用双线性插值对图像进行尺寸变换</span></span><br><span class="line"><span class="comment">// 参数: </span></span><br><span class="line"><span class="comment">//      Eigen::Matrix&lt;int, 3, 2&gt; srcPoint 原始图像中的三个不共面的点</span></span><br><span class="line"><span class="comment">//      Eigen::Matrix&lt;int, 3, 2&gt; dstPoint 目标图像中的三个不共面的点</span></span><br><span class="line"><span class="comment">//      cv::Mat srcImg 输入图像</span></span><br><span class="line"><span class="comment">//      cv::Mat dstImg  输出图像</span></span><br><span class="line"><span class="comment">// 说明:</span></span><br><span class="line"><span class="comment">//     这里需要借助opencv读图像，所以函数的两个参数是opencv的格式</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">warpAffine</span><span class="params">(Eigen::Matrix&lt;<span class="keyword">int</span>, <span class="number">3</span>, <span class="number">2</span>&gt; srcPoint, Eigen::Matrix&lt;<span class="keyword">int</span>, <span class="number">3</span>, <span class="number">2</span>&gt; dstPoint, cv::Mat srcImg, cv::Mat dstImg)</span></span>&#123;</span><br><span class="line">    <span class="comment">// Y = M x X</span></span><br><span class="line">    Eigen::Matrix&lt;<span class="keyword">float</span>, <span class="number">3</span>, <span class="number">3</span>&gt; Y;</span><br><span class="line">    Eigen::Matrix&lt;<span class="keyword">float</span>, <span class="number">3</span>, <span class="number">3</span>&gt; M;</span><br><span class="line">    Eigen::Matrix&lt;<span class="keyword">float</span>, <span class="number">3</span>, <span class="number">3</span>&gt; X;</span><br><span class="line"></span><br><span class="line">    Y &lt;&lt; dstPoint(<span class="number">0</span>,<span class="number">0</span>), dstPoint(<span class="number">1</span>,<span class="number">0</span>), dstPoint(<span class="number">2</span>,<span class="number">0</span>),</span><br><span class="line">         dstPoint(<span class="number">0</span>,<span class="number">1</span>), dstPoint(<span class="number">1</span>,<span class="number">1</span>), dstPoint(<span class="number">2</span>,<span class="number">1</span>),</span><br><span class="line">         <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    X &lt;&lt; srcPoint(<span class="number">0</span>,<span class="number">0</span>), srcPoint(<span class="number">1</span>,<span class="number">0</span>), srcPoint(<span class="number">2</span>,<span class="number">0</span>),</span><br><span class="line">         srcPoint(<span class="number">0</span>,<span class="number">1</span>), srcPoint(<span class="number">1</span>,<span class="number">1</span>), srcPoint(<span class="number">2</span>,<span class="number">1</span>),</span><br><span class="line">         <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    M = Y * X.inverse(); <span class="comment">// src -&gt; dst</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// apply transform</span></span><br><span class="line">    Eigen::Matrix&lt;<span class="keyword">float</span>, <span class="number">3</span>, <span class="number">1</span>&gt; srcP;</span><br><span class="line">    Eigen::Matrix&lt;<span class="keyword">float</span>, <span class="number">3</span>, <span class="number">1</span>&gt; dstP;</span><br><span class="line">    <span class="keyword">float</span> x, y, tl, tr, dl, dr;</span><br><span class="line">    <span class="keyword">int</span> x_, y_;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> row=<span class="number">0</span>; row&lt;dstImg.rows; row++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> col=<span class="number">0</span>; col&lt;dstImg.cols; col++)&#123;</span><br><span class="line">            dstP &lt;&lt; row, col, <span class="number">1</span>;</span><br><span class="line">            srcP = M * dstP;</span><br><span class="line">            x = srcP[<span class="number">0</span>];</span><br><span class="line">            y = srcP[<span class="number">1</span>];</span><br><span class="line">            x_ = <span class="keyword">int</span>(x);</span><br><span class="line">            y_ = <span class="keyword">int</span>(y);</span><br><span class="line"></span><br><span class="line">            cv::Vec3b val = (<span class="number">1</span>-(x-x_))*(<span class="number">1</span>-(y-y_))*srcImg.at&lt;cv::Vec3b&gt;(row, col) + </span><br><span class="line">                            (<span class="number">1</span>-(x-x_))*(y-y_)*srcImg.at&lt;cv::Vec3b&gt;(row, col+<span class="number">1</span>) + </span><br><span class="line">                            (x-x_)*(<span class="number">1</span>-(y-y_))*srcImg.at&lt;cv::Vec3b&gt;(row+<span class="number">1</span>, col) + </span><br><span class="line">                            (x-x_)*(y-y_)*srcImg.at&lt;cv::Vec3b&gt;(row+<span class="number">1</span>, col+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">            dstImg.at&lt;cv::Vec3b&gt;(row, col) = val;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>图像处理</category>
      </categories>
      <tags>
        <tag>图像处理</tag>
      </tags>
  </entry>
  <entry>
    <title>手撕image resize</title>
    <url>/2019/11/25/%E6%89%8B%E6%92%95image-resize/</url>
    <content><![CDATA[<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 功能: 采用双线性插值对图像进行尺寸变换</span></span><br><span class="line"><span class="comment">// 参数: cv::Mat srcImg 输入图像</span></span><br><span class="line"><span class="comment">//      cv::Mat dstImg  输出图像</span></span><br><span class="line"><span class="comment">// 说明:</span></span><br><span class="line"><span class="comment">//     这里需要借助opencv读图像，所以函数的两个参数是opencv的格式</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">warpAffine</span><span class="params">(cv::Mat srcImg, cv::Mat dstImg)</span></span>&#123;</span><br><span class="line">    <span class="comment">// apply transform</span></span><br><span class="line">    Eigen::Matrix&lt;<span class="keyword">float</span>, <span class="number">3</span>, <span class="number">1</span>&gt; srcP;</span><br><span class="line">    Eigen::Matrix&lt;<span class="keyword">float</span>, <span class="number">3</span>, <span class="number">1</span>&gt; dstP;</span><br><span class="line">    <span class="keyword">float</span> x, y, tl, tr, dl, dr;</span><br><span class="line">    <span class="keyword">int</span> x_, y_;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> row=<span class="number">0</span>; row&lt;dstImg.rows; row++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> col=<span class="number">0</span>; col&lt;dstImg.cols; col++)&#123;</span><br><span class="line">            dstP &lt;&lt; row, col, <span class="number">1</span>;</span><br><span class="line">            srcP = translation * dstP;</span><br><span class="line">            x = srcP[<span class="number">0</span>];</span><br><span class="line">            y = srcP[<span class="number">1</span>];</span><br><span class="line">            x_ = <span class="keyword">int</span>(x);</span><br><span class="line">            y_ = <span class="keyword">int</span>(y);</span><br><span class="line"></span><br><span class="line">            cv::Vec3b val = (<span class="number">1</span>-(x-x_))*(<span class="number">1</span>-(y-y_))*srcImg.at&lt;cv::Vec3b&gt;(row, col) + </span><br><span class="line">                            (<span class="number">1</span>-(x-x_))*(y-y_)*srcImg.at&lt;cv::Vec3b&gt;(row, col+<span class="number">1</span>) + </span><br><span class="line">                            (x-x_)*(<span class="number">1</span>-(y-y_))*srcImg.at&lt;cv::Vec3b&gt;(row+<span class="number">1</span>, col) + </span><br><span class="line">                            (x-x_)*(y-y_)*srcImg.at&lt;cv::Vec3b&gt;(row+<span class="number">1</span>, col+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">            dstImg.at&lt;cv::Vec3b&gt;(row, col) = val;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>图像处理</category>
      </categories>
      <tags>
        <tag>图像处理</tag>
      </tags>
  </entry>
  <entry>
    <title>NanoPi-R1烧写lede固件到eMMC</title>
    <url>/2019/11/19/NanoPi-R1%E7%83%A7%E5%86%99lede%E5%9B%BA%E4%BB%B6%E5%88%B0eMMC/</url>
    <content><![CDATA[<p><em>这里着重介绍烧写至eMMC方式</em>   </p>
<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><ul>
<li>NanoPi R1（以下简称R1）是友善之臂团队面向创客、嵌入式爱好者，电子艺术家、发烧友等群体推出的又一款完全开源的掌上创客神器。   </li>
<li>NanoPi R1有<strong>两个网口</strong>，一个千兆网络，一个百兆网络，并支持2.4G Wi-Fi，友善之臂团队为NanoPi R1专门移植了OpenWRT系统，只需要简单的设置，就可打造一款完全属于你自己的路由器。    </li>
<li>有两个版本主要差别在:<ul>
<li>DDR3 RAM: 512MB/1GB</li>
<li>Storage： NC/8GB eMMC</li>
</ul>
</li>
</ul>
<p><img src="/2019/11/19/NanoPi-R1烧写lede固件到eMMC/NanoPi_R1-layout.jpg" alt="接口布局">     </p>
<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ul>
<li>NanoPi R1主板</li>
<li>友善USB转TTL串口线USB2UART(eMMC版本刷系统需要)</li>
<li>MicroSD卡/TF卡: Class10或以上的 8GB SDHC卡</li>
<li>一个MicroUSB接口的外接电源，要求输出为5V/2A（可使用同规格的手机充电器）</li>
<li>一台电脑，需要联网，建议使用Ubuntu 16.04 64位系统</li>
<li>下载<a href="http://download.friendlyarm.com/nanopir1" target="_blank" rel="noopener">官方提供的系统</a></li>
</ul>
<h1 id="烧写Linux系统"><a href="#烧写Linux系统" class="headerlink" title="烧写Linux系统"></a>烧写Linux系统</h1><h2 id="烧写到TF卡"><a href="#烧写到TF卡" class="headerlink" title="烧写到TF卡"></a>烧写到TF卡</h2><ul>
<li><p>FriendlyCore / Debian / Ubuntu / OpenWrt / DietPi 等系统本质上都属于 Linux 系统的发行版，所以它们的烧写方法是一样。</p>
</li>
<li><p>将 Linux 系统固件和烧写工具 win32diskimager.rar 分别解压，在 Windows 下插入TF卡（限4G及以上的卡)，以管理员身份运行烧写工具 win32diskimager，在烧写工具 win32diskimager 的界面上，选择你的TF卡盘符，选择Linux 系统固件，点击 Write 按钮烧写。</p>
</li>
<li><p>这里以nanopi-r1_sd_friendlycore-xenial_4.14_armhf_YYYYMMDD.img为例，其他系统的烧写操作是类似的，烧写时的界面如下：<br>  <img src="/2019/11/19/NanoPi-R1烧写lede固件到eMMC/Win32disk-h3.png" alt="烧写时的界面">     </p>
<p>  成功烧写后，会看到如下界面：<br>  <img src="/2019/11/19/NanoPi-R1烧写lede固件到eMMC/Win32disk-finish.png" alt="成功烧写">    </p>
</li>
<li><p>当制作完成TF卡后，拔出TF卡插入 BOOT 卡槽，上电启动（注意，这里需要5V/2A的供电），你可以看到STAT灯闪烁，这时你已经成功启动系统。    </p>
</li>
</ul>
<h2 id="烧写到eMMC"><a href="#烧写到eMMC" class="headerlink" title="烧写到eMMC"></a>烧写到eMMC</h2><h3 id="烧写官方eflasher版本到eMMC"><a href="#烧写官方eflasher版本到eMMC" class="headerlink" title="烧写官方eflasher版本到eMMC"></a>烧写官方eflasher版本到eMMC</h3><ul>
<li><p>按照<a href="#烧写到TF卡">烧写到TF卡</a>的方法先将<code>nanopi-r1_eflasher_friendlycore-xenial_4.14_armhf_YYYYMMDD.img</code>烧写到TF卡上；</p>
</li>
<li><p>用<strong>友善USB转TTL串口线USB2UART</strong>连接到NanoPi R1主板的debug串口, 在电脑<strong>设备管理器</strong>中查看USB设备警告设备，右键更新驱动以后可以在<strong>端口(COM和LPT)</strong>中看到已经连上的设备，注意需要使用5V/2A电源给开发板MicroUSB供电:<br>  <img src="/2019/11/19/NanoPi-R1烧写lede固件到eMMC/Matrix-USB2UART_nanopi_R1.jpg" alt="USB转串口调试模块连接主板"></p>
</li>
<li><p>用<code>MobaXterm</code>或者<code>Putty</code>的串口链接上述对应的<strong>COM端口</strong>，晶振频率设为<code>115200</code>：<br><img src="/2019/11/19/NanoPi-R1烧写lede固件到eMMC/nanopi-r1-serial.png" alt="MobaXterm串口设置界面"></p>
</li>
<li><p>在命令行终端中通过执行下列命令进行烧写:</p>
  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">su root # 密码fa</span><br><span class="line">eflasher</span><br></pre></td></tr></table></figure>

<p>  <img src="/2019/11/19/NanoPi-R1烧写lede固件到eMMC/Eflasher_friendlycore1.png" alt="输入eflasher后的界面"><br>  输入“１”，选择烧写friendlycore系统到eMMC上后，会提示如下信息：<br>  <img src="/2019/11/19/NanoPi-R1烧写lede固件到eMMC/Eflasher_friendlycore2.png" alt="输入“１”"><br>  输入“yes”，确定进行烧写：<br>  <img src="/2019/11/19/NanoPi-R1烧写lede固件到eMMC/Eflasher_friendlycore3.png" alt="输入“yes”">    </p>
</li>
<li><p>等待烧写完毕后，断电并从BOOT卡槽中取出TF卡，此时再上电就会从 eMMC 启动系统了。</p>
</li>
</ul>
<h3 id="烧写非eflasher-SD版本-到eMMC"><a href="#烧写非eflasher-SD版本-到eMMC" class="headerlink" title="烧写非eflasher(SD版本)到eMMC"></a>烧写非eflasher(SD版本)到eMMC</h3><p>这一块官方只有一句 *”如果想烧写其他系统映像到 eMMC ，请下载光盘里images-for-eflasher目录，将目录内的压缩包解压到 SD 卡的 FRIENDLYARM 分区。”*<br><img src="/2019/11/19/NanoPi-R1烧写lede固件到eMMC/Eflasher_friendlyarm.png" alt="官方安装其他系统">   </p>
<p>这里介绍我烧写成功的<a href="nanopi-h3_sd_lede_4.14_armhf_20190425.img.zip">nanopi-h3_sd_lede_4.14_armhf_20190425.img</a>版本:    </p>
<ul>
<li><p>按照<a href="#烧写到TF卡">烧写到TF卡</a>的方法先将<code>nanopi-r1_eflasher_friendlycore-xenial_4.14_armhf_YYYYMMDD.img</code>烧写到TF卡上，在这里的作用是引导将lede系统刷到emmc上；</p>
</li>
<li><p>用 <strong>DiskGenius</strong> 将<strong>FriendlyArm</strong>的<code>exFAT分区</code>扩充以放下更多的安装镜像:<br><img src="/2019/11/19/NanoPi-R1烧写lede固件到eMMC/nanopi-r1-resize.png" alt="扩充FriendlyArm分区"></p>
</li>
<li><p>在Windows下的<strong>磁盘管理</strong>中给<strong>FriendlyArm</strong>分区分配一个磁盘编号。</p>
</li>
<li><p>将<code>nanopi-h3_sd_lede_4.14_armhf_20190425.img</code>文件放到<strong>friendlyarm</strong>文件夹下:<br>  <img src="/2019/11/19/NanoPi-R1烧写lede固件到eMMC/nanopi-h3_sd_lede_4.14_armhf_20190425.png" alt="nanopi-h3_sd_lede_4.14_armhf_20190425">    </p>
</li>
<li><p>用<strong>友善USB转TTL串口线USB2UART</strong>连接到NanoPi R1主板的debug串口，在电脑<strong>设备管理器</strong>中查看USB设备警告设备，右键更新驱动以后可以在<strong>端口(COM和LPT)</strong>中看到已经连上的设备,注意需要使用5V/2A电源给开发板MicroUSB供电:<br>  <img src="/2019/11/19/NanoPi-R1烧写lede固件到eMMC/Matrix-USB2UART_nanopi_R1.jpg" alt="USB转串口调试模块连接主板"></p>
</li>
<li><p>用<code>MobaXterm</code>或者<code>Putty</code>的串口链接上述对应的<strong>COM端口</strong>，晶振频率设为<code>115200</code>：<br><img src="/2019/11/19/NanoPi-R1烧写lede固件到eMMC/nanopi-r1-serial.png" alt="MobaXterm串口设置界面"></p>
</li>
</ul>
<ul>
<li><p>在命令行终端中通过执行下列命令进行烧写:</p>
  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">su root # 密码fa</span><br></pre></td></tr></table></figure>

<p>  到刚刚存放<code>nanopi-h3_sd_lede_4.14_armhf_20190425.img</code>目录下:   </p>
  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /mnt/sdcard</span><br></pre></td></tr></table></figure>

<p>  查看所有磁盘情况，找到系统的eMMC磁盘：</p>
  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo fdick -l</span><br></pre></td></tr></table></figure>

<p>  可以看到<strong>eMMC</strong>的盘符是<code>/dev/mmcblk1</code><br>  用<code>dd</code>命令将<code>nanopi-h3_sd_lede_4.14_armhf_20190425.img</code>写到eMMC上:</p>
  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo dd if=nanopi-h3_sd_lede_4.14_armhf_20190425.img of=/dev/mmcblk1 bs=10MB</span><br></pre></td></tr></table></figure>
</li>
<li><p>烧写完成后，拔下SD卡，重启即可</p>
</li>
<li><p>开启ssr服务：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">echo 0xDEADBEEF &gt; /etc/config/google_fu_mode</span><br></pre></td></tr></table></figure>
</li>
<li><p>进入路由器web页面，成功烧写：<br>  <img src="/2019/11/19/NanoPi-R1烧写lede固件到eMMC/lede_finish.png" alt="finish"></p>
</li>
</ul>
<h1 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h1><blockquote>
<p><a href="http://wiki.friendlyarm.com/wiki/index.php/NanoPi_R1/zh#.E4.BB.8B.E7.BB.8D" target="_blank" rel="noopener">友善之臂官方文档</a></p>
</blockquote>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>openwrt</tag>
      </tags>
  </entry>
  <entry>
    <title>Caffe模型训练数据可视化</title>
    <url>/2019/11/12/Caffe%E6%A8%A1%E5%9E%8B%E8%AE%AD%E7%BB%83%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/</url>
    <content><![CDATA[<h1 id="记录训练日志"><a href="#记录训练日志" class="headerlink" title="记录训练日志"></a>记录训练日志</h1><p>训练阶段需要加上<code>-log_dir ./log/</code>, 其中<code>./log/</code>为log文件存放文件文件夹：    </p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">~/caffe/build/tools/caffe train --solver=~/caffe/examples/mydata/slot_classifier/solver.prototxt -log_dir ./<span class="built_in">log</span>/</span><br></pre></td></tr></table></figure>

<h1 id="解析训练日志"><a href="#解析训练日志" class="headerlink" title="解析训练日志"></a>解析训练日志</h1><p>将<code>caffe/tools/extra</code>文件夹下的<code>extract_seconds.py</code>, <code>parse_log.py</code>, <code>parse_log.sh</code>, <code>plot_training_log.py.example</code>拷贝到上述的<code>./log/</code>文件夹下.</p>
<h2 id="分步法"><a href="#分步法" class="headerlink" title="分步法"></a>分步法</h2><ol>
<li><p><del>修改日志文件名删除<code>caffe.hostname.username.log</code>之后的<code>.INFO.XXXX</code>，保存为<code>caffe.hostname.username.log</code>文件</del> 创建软连接<code>ln -s caffe.hostname.username.log</code>(<code>hostname</code>和<code>username</code>具体根据个人电脑, 下面依然)；    </p>
</li>
<li><p>执行: <code>/parse_log.sh caffe.hostname.username.log</code> , 这样就会在当前文件夹下生成一个<code>.train</code>文件和一个<code>.test</code>文件;    </p>
</li>
<li><p>执行:    </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./plot_training_log.py.example 0  save.png caffe.hostname.username.log</span><br></pre></td></tr></table></figure>

<p>就可以生成训练过程中的<code>Test accuracy  vs. Iters</code> 曲线,其中<code>0</code>代表曲线类型， <code>save.png</code> 代表保存的图片名称, caffe中支持很多种曲线绘制，通过指定不同的类型参数即可，具体参数如下:    </p>
 <figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">Note<span class="variable">s:</span></span><br><span class="line">   <span class="number">1</span>. Supporting multiple logs.</span><br><span class="line">   <span class="number">2</span>. Log <span class="keyword">file</span> name must end with the lower-cased <span class="string">".log"</span>.</span><br><span class="line">Supported chart <span class="built_in">type</span><span class="variable">s:</span></span><br><span class="line">    <span class="number">0</span>: Test accuracy  <span class="keyword">vs</span>. Iters</span><br><span class="line">    <span class="number">1</span>: Test accuracy  <span class="keyword">vs</span>. Seconds</span><br><span class="line">    <span class="number">2</span>: Test loss  <span class="keyword">vs</span>. Iters</span><br><span class="line">    <span class="number">3</span>: Test loss  <span class="keyword">vs</span>. Seconds</span><br><span class="line">    <span class="number">4</span>: Train learning rate  <span class="keyword">vs</span>. Iters</span><br><span class="line">    <span class="number">5</span>: Train learning rate  <span class="keyword">vs</span>. Seconds</span><br><span class="line">    <span class="number">6</span>: Train loss  <span class="keyword">vs</span>. Iters</span><br><span class="line">    <span class="number">7</span>: Train loss  <span class="keyword">vs</span>. Seconds</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h2 id="一步法"><a href="#一步法" class="headerlink" title="一步法"></a>一步法</h2><ol>
<li><p>创建软连接 <code>ln -s caffe.hostname.username.log</code> ( <code>hostname</code> 和 <code>username</code> 具体根据个人电脑, 下面依然)；</p>
</li>
<li><p>运行:   </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./plot_training_log.py  [数字选项] 图片名.png ./caffe.log</span><br></pre></td></tr></table></figure>

<p>其中<strong>数字选项如下:</strong>   </p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">Note<span class="variable">s:</span></span><br><span class="line">   <span class="number">1</span>. Supporting multiple logs.</span><br><span class="line">   <span class="number">2</span>. Log <span class="keyword">file</span> name must end with the lower-cased <span class="string">".log"</span>.</span><br><span class="line">Supported chart <span class="built_in">type</span><span class="variable">s:</span></span><br><span class="line">    <span class="number">0</span>: Test accuracy  <span class="keyword">vs</span>. Iters</span><br><span class="line">    <span class="number">1</span>: Test accuracy  <span class="keyword">vs</span>. Seconds</span><br><span class="line">    <span class="number">2</span>: Test loss  <span class="keyword">vs</span>. Iters</span><br><span class="line">    <span class="number">3</span>: Test loss  <span class="keyword">vs</span>. Seconds</span><br><span class="line">    <span class="number">4</span>: Train learning rate  <span class="keyword">vs</span>. Iters</span><br><span class="line">    <span class="number">5</span>: Train learning rate  <span class="keyword">vs</span>. Seconds</span><br><span class="line">    <span class="number">6</span>: Train loss  <span class="keyword">vs</span>. Iters</span><br><span class="line">    <span class="number">7</span>: Train loss  <span class="keyword">vs</span>. Seconds</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>AI</category>
      </categories>
      <tags>
        <tag>AI</tag>
      </tags>
  </entry>
  <entry>
    <title>GL-iNet AR750 官方固件安装SSR Plus 插件</title>
    <url>/2019/10/12/GL-iNet-AR750-%E5%AE%98%E6%96%B9%E5%9B%BA%E4%BB%B6%E5%AE%89%E8%A3%85SSR-Plus-%E6%8F%92%E4%BB%B6/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>GLiNet 他家路由系统采用的是开源 <strong>OpenWrt</strong> 系统并在 <em>github</em> 上开源并提供 <em>sdk</em> 和很多插件。</p>
<p>GLiNet 有自家刷不死的 uboot 可玩性很高。这里没有直接去刷第三方固件是因为喜欢他们家定制的UI可以比较方便的启用ap模式加入网络。所以就想着自建编译ipk插件在开源的openwrt固件内安装插件。</p>
<h2 id="需要准备的环境和工具"><a href="#需要准备的环境和工具" class="headerlink" title="需要准备的环境和工具"></a>需要准备的环境和工具</h2><ul>
<li>一台出国留学的Linux(这里用了ubuntu16.04 LTS)</li>
<li>L大开源的插件 <a href="https://github.com/coolsnowwolf/lede" target="_blank" rel="noopener">Git-Lede</a></li>
<li>GLiNet 官方 <a href="https://github.com/gl-inet/sdk" target="_blank" rel="noopener">SDK</a></li>
<li>还有一台 AR750 (官方openwrt-ar750-3.010.bin固件)</li>
<li>SSH客户端这里用了<strong>MobaXterm</strong></li>
</ul>
<h2 id="ipk-编译过程"><a href="#ipk-编译过程" class="headerlink" title="ipk 编译过程"></a>ipk 编译过程</h2><p><strong>不要用 root 用户 git 和编译！！！</strong></p>
<h3 id="下载源码"><a href="#下载源码" class="headerlink" title="下载源码"></a>下载源码</h3><p>分别clone官方 sdk 和 lede 到本地, 把<code>lede/package</code>插件目录覆盖至官方<code>sdk/ar71xx/package</code>目录中,然后切换到官方sdk主目录下<code>sdk/ar71xx/</code></p>
<h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><p>安装依赖命令行输入 <code>sudo apt-get update</code> ，然后输入:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint</span><br></pre></td></tr></table></figure>

<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./scripts/feeds update -a</span><br><span class="line">./scripts/feeds install -a</span><br><span class="line">make menuconfig</span><br></pre></td></tr></table></figure>

<p>选中luCI–&gt;Applictions–&gt;luci-app-ssr-plus</p>
<h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><p>ssrplus依赖于luci中的一些工具，所以要先编译luci-base组件，不编译此组件直接编译ssrplus会出现类似”bash: po2lmo: command not found“的错误提示</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make package/feeds/luci/luci-base/compile V=99</span><br></pre></td></tr></table></figure>

<p>编译ssrplus:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make package/lean/luci-app-ssr-plus/compile V=99</span><br></pre></td></tr></table></figure>

<p>喝杯咖啡去吧，等会编译完bin目录下就会有相应编译完的ipk包了</p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>ssh 登陆路由器<br>复制 ipk 到 <code>/tmp</code> 目录下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">opkg install xxx.ipk</span><br></pre></td></tr></table></figure>

<p>如果提示缺少某些底层依赖ipk可以通过更新openwrt官方源获取安装<code>/etc/opkg/customfeeds.conf</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">src/gz glinet_core http://download.gl-inet.com/releases/kmod-3.0/ar71xx/generic</span><br><span class="line">src/gz glinet_base http://download.gl-inet.com/releases/packages-3.x/ar71xx/base</span><br><span class="line">src/gz glinet_gli_pub http://download.gl-inet.com/releases/packages-3.x/ar71xx/gli_pub</span><br><span class="line">src/gz glinet_packages http://download.gl-inet.com/releases/packages-3.x/ar71xx/packages</span><br><span class="line">src/gz glinet_luci http://download.gl-inet.com/releases/packages-3.x/ar71xx/luci</span><br><span class="line">src/gz glinet_routing http://download.gl-inet.com/releases/packages-3.x/ar71xx/routing</span><br><span class="line">src/gz glinet_telephony http://download.gl-inet.com/releases/packages-3.x/ar71xx/telephony</span><br><span class="line">src/gz glinet_glinet http://download.gl-inet.com/releases/packages-3.x/ar71xx/glinet</span><br></pre></td></tr></table></figure>

<p>然后更新源:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">opkg update</span><br></pre></td></tr></table></figure>

<h3 id="芝麻开门"><a href="#芝麻开门" class="headerlink" title="芝麻开门"></a>芝麻开门</h3><p>SSR-PLLUS被隐藏了，编译好后装好机，输入以下命令即可出来</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> 0xDEADBEEF &gt; /etc/config/google_fu_mode</span><br></pre></td></tr></table></figure>

<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><blockquote>
<ol>
<li><a href="http://download.gl-inet.com/firmware/ar750/v1/" target="_blank" rel="noopener">http://download.gl-inet.com/firmware/ar750/v1/</a></li>
<li><a href="https://gist.github.com/sitsh/4afd4f7d4b18083c9ebad25adef48599" target="_blank" rel="noopener">https://gist.github.com/sitsh/4afd4f7d4b18083c9ebad25adef48599</a></li>
<li><a href="https://www.qiqisvm.life/archives/102" target="_blank" rel="noopener">https://www.qiqisvm.life/archives/102</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>OpenWRT</tag>
      </tags>
  </entry>
  <entry>
    <title>特征尺寸(Feature Map)和感受野(Receptive Field)计算</title>
    <url>/2019/08/05/%E7%89%B9%E5%BE%81%E5%B0%BA%E5%AF%B8-Feature-Map-%E5%92%8C%E6%84%9F%E5%8F%97%E9%87%8E-Receptive-Field-%E8%AE%A1%E7%AE%97/</url>
    <content><![CDATA[<p>什么是<strong>感受野</strong>(<strong>Receptive Field</strong>)？</p>
<blockquote>
<p>The receptive field is defined as the region in the input space that a particular CNN’s feature is looking at (i.e. be affected by).</p>
</blockquote>
<p>理论上定义，卷积神经网络中每层的<strong>特征图</strong>(<strong>Feature Map</strong>)上的像素点在原始图像中映射的区域大小，也就相当于高层的特征图中的像素点受原图多大区域的影响！</p>
<p>一个特征点的感受野可以用其所在的<strong>中心点位置(center location)</strong>和<strong>大小(size)</strong>来描述。然而，某卷积特征点所对应的感受野上并不是所有像素都是同等重要的，就好比人的眼睛所在的有限视野范围内，总有要 focus 的焦点。对于感受野来说，距离中心点越近的像素肯定对未来输出特征图的贡献就越大。换句话说，一个特征点在输入图像(Input) 上所关注的特定区域(也就是其对应的感受野)会在该区域的中心处聚焦，并以指数变化向周边扩展(need more explanation)。</p>
<p>在<strong>目标检测</strong>任务中，我们一般<strong>在高层的<code>Feature Map</code>上检测大物体，在底层的<code>Feature Map</code>上检测小物体</strong>。</p>
<h1 id="特征图-Feature-Map"><a href="#特征图-Feature-Map" class="headerlink" title="特征图(Feature Map)"></a>特征图(Feature Map)</h1><!-- ![图1 CNN特征图可视化的两种方式](feature_map.jpg) -->
<p><img src="/2019/08/05/特征尺寸-Feature-Map-和感受野-Receptive-Field-计算/way1.png" alt="图1 CNN特征图可视化的两种方式"><br>如图1所示，我们采用卷积核C的核大小(kernel size) k=3x3，填充大小(padding size) p=1x1，步长(stride) s=2x2。(图中上面一行)对5x5的输入特征图进行卷积生成3x3的绿色特征图。(图中下面一行)对上面绿色的特征图采用相同的卷积操作生成2x2的橙色特征图。(图中左边一列)按列可视化CNN特征图，如果只看特征图，我们无法得知特征的位置(即感受野的中心位置)和区域大小(即感受野的大小)，而且无法深入了解CNN中的感受野信息。(图中右边一列)CNN特征图的大小固定，其特征位置即感受野的中心位置。</p>
<p>感受野表示输入空间中一个特定CNN特征的范围区域(<em>The receptive field is defined as the region in the input space that a particular CNN’s feature is looking at</em>)。一个特征的感受野可以采用区域的中心位置和特征大小进行描述。图1展示了一些感受野的例子，采用核大小(kernel size) k=3x3，填充大小(padding size) p=1x1，步长(stride)s=2x2的卷积核C对5x5大小的输入图进行卷积操作，将输出3x3大小的特征图(绿色图)。对3x3大小的特征图进行相同的卷积操作，将输出2x2的特征图(橙色)。<a href="https://arxiv.org/pdf/1603.07285.pdf" target="_blank" rel="noopener">输出特征图在每个维度上的大小可以采用下面的公式进行计算</a>：</p>
<p><img src="/2019/08/05/特征尺寸-Feature-Map-和感受野-Receptive-Field-计算/math1.png" alt=""></p>
<p>为了简单，本文假设CNN的架构是对称的，而且输入图像长宽比为1:1，因此所有维度上的变量值都相同。若CNN架构或者输入图像不是对称的，你也可以分别计算每个维度上的特征图大小。如<strong>图1左边</strong>所示一列展示了一种CNN特征图的常见可视化方式。这种可视化方式能够获取特征图的个数，但无法计算特征的位置(感受野的中心位置)和区域大小(感受野尺寸)。<strong>图1右边</strong>一列展示了一种固定大小的CNN特征图可视化方式，通过保持所有特征图大小和输入图大小相同来解决上述问题，接下来每个特征位于其感受野的中心。由于特征图中所有特征的感受野尺寸相同，我们就可以非常方便画出特征对应的包围盒(bounding box)来表示感受野的大小。因为特征图大小和输入图像相同，所以我们无需将包围盒映射到输入层。</p>
<!-- ![图2 另外一种固定大小的CNN特征图表示](feature_map1.png) -->
<p><img src="/2019/08/05/特征尺寸-Feature-Map-和感受野-Receptive-Field-计算/way2.png" alt="图2 另外一种固定大小的CNN特征图表示"><br>如图2所示，采用相同的卷积核C对7*7大小的输入图进行卷积操作，这里在特征中心周围画出了感受野的包围盒。为了表达更清楚，这里忽略了周围的填充像素。固定尺寸的CNN特征图可以采用3D(左图)或2D(右图)表示下的固定尺寸CNN特征图。注意：图2中感受野尺寸逐渐扩大，第二个特征层的中心特征感受野很快就会覆盖整个输入图。这一点对于CNN设计架构的性能提升非常重要。</p>
<h1 id="感受野的计算-Receptive-Field-Arithmetic"><a href="#感受野的计算-Receptive-Field-Arithmetic" class="headerlink" title="感受野的计算(Receptive Field Arithmetic)"></a>感受野的计算(Receptive Field Arithmetic)</h1><p>除了每个维度上特征图的个数，还需要计算每一层的感受野大小，因此我们需要了解每一层的额外信息，包括：当前感受野的尺寸<strong>r</strong>，相邻特征之间的距离(或者<em>jump</em>) <strong>j</strong>，左上角(起始) 特征的中心坐标<em>start</em>，其中特征的中心坐标定义为其感受野的中心坐标(如上述固定大小CNN特征图所述) 。假设卷积核大小<strong>k</strong>，填充大小<strong>p</strong>，步长大小<strong>s</strong>，则其输出层的相关属性计算如下：</p>
<p><img src="/2019/08/05/特征尺寸-Feature-Map-和感受野-Receptive-Field-计算/math2.png" alt=""></p>
<ul>
<li><strong>公式一</strong>: 基于输入特征个数和卷积相关属性计算输出特征的个数</li>
<li><strong>公式二</strong>: 计算输出特征图的<strong>jump</strong>，等于输入图的jump与输入特征个数(执行卷积操作时jump的个数，stride的大小)的乘积</li>
<li><strong>公式三</strong>: 计算输出特征图的<em>receptive field size</em>，等于<strong>k</strong>个输入特征覆盖区域<code>(k-1)*j_in</code>加上边界上输入特征的感受野覆盖的附加区域r_in。</li>
<li><strong>公式四</strong>: 计算第一个输出特征的感受野的中心位置，等于第一个输入特征的中心位置，加上第一个输入特征位置到第一个卷积核中心位置的距离<code>(k-1)/2*j_in</code>，再减去填充区域大小<code>p*j_in</code>。注意：这里都需要乘上输入特征图的<em>jump</em>，从而获取实际距离或间隔。</li>
<li><img src="/2019/08/05/特征尺寸-Feature-Map-和感受野-Receptive-Field-计算/receptive_field.png" alt="图3 对图1中的例子执行感受野计算"></li>
</ul>
<p>如图3所示，第一行给出一些符号和等式；第二行和最后一行说明给定输入层信息下输出层感受野的计算过程。<br>CNN的第一层是输入层，<strong>n = image size</strong>，<strong>r = 1</strong>，<strong>j = 1</strong>，<strong>start = 0.5</strong>。图3采用的坐标系中输入层的第一个特征中心位置在0.5。递归执行上述四个公式，就可以计算CNN中所有特征图中的感受野信息。图3给出这些公式计算的样例。</p>
<p><img src="/2019/08/05/特征尺寸-Feature-Map-和感受野-Receptive-Field-计算/result.png" alt=""></p>
<p>这里给出一个python小程序，用于计算给定CNN架构下所有层的感受野信息。程序允许输入任何特征图的名称和图中特征的索引号，输出相关感受野的尺寸和位置。图4给出AlexNet下的例子。</p>
<p><img src="/2019/08/05/特征尺寸-Feature-Map-和感受野-Receptive-Field-计算/AlexNet.png" alt="图4给出AlexNet下的例子"></p>
<p>图4 AlexNet下感受野计算样例:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># [filter size, stride, padding]</span></span><br><span class="line"><span class="comment">#Assume the two dimensions are the same</span></span><br><span class="line"><span class="comment">#Each kernel requires the following parameters:</span></span><br><span class="line"><span class="comment"># - k_i: kernel size</span></span><br><span class="line"><span class="comment"># - s_i: stride</span></span><br><span class="line"><span class="comment"># - p_i: padding (if padding is uneven, right padding will higher than left padding; "SAME" option in tensorflow)</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment">#Each layer i requires the following parameters to be fully represented: </span></span><br><span class="line"><span class="comment"># - n_i: number of feature (data layer has n_1 = imagesize )</span></span><br><span class="line"><span class="comment"># - j_i: distance (projected to image pixel distance) between center of two adjacent features</span></span><br><span class="line"><span class="comment"># - r_i: receptive field of a feature in layer i</span></span><br><span class="line"><span class="comment"># - start_i: position of the first feature's receptive field in layer i (idx start from 0, negative means the center fall into padding)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line">convnet =   [[<span class="number">11</span>,<span class="number">4</span>,<span class="number">0</span>],[<span class="number">3</span>,<span class="number">2</span>,<span class="number">0</span>],[<span class="number">5</span>,<span class="number">1</span>,<span class="number">2</span>],[<span class="number">3</span>,<span class="number">2</span>,<span class="number">0</span>],[<span class="number">3</span>,<span class="number">1</span>,<span class="number">1</span>],[<span class="number">3</span>,<span class="number">1</span>,<span class="number">1</span>],[<span class="number">3</span>,<span class="number">1</span>,<span class="number">1</span>],[<span class="number">3</span>,<span class="number">2</span>,<span class="number">0</span>],[<span class="number">6</span>,<span class="number">1</span>,<span class="number">0</span>], [<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>]]</span><br><span class="line">layer_names = [<span class="string">'conv1'</span>,<span class="string">'pool1'</span>,<span class="string">'conv2'</span>,<span class="string">'pool2'</span>,<span class="string">'conv3'</span>,<span class="string">'conv4'</span>,<span class="string">'conv5'</span>,<span class="string">'pool5'</span>,<span class="string">'fc6-conv'</span>, <span class="string">'fc7-conv'</span>]</span><br><span class="line">imsize = <span class="number">227</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">outFromIn</span><span class="params">(conv, layerIn)</span>:</span></span><br><span class="line">  n_in = layerIn[<span class="number">0</span>]</span><br><span class="line">  j_in = layerIn[<span class="number">1</span>]</span><br><span class="line">  r_in = layerIn[<span class="number">2</span>]</span><br><span class="line">  start_in = layerIn[<span class="number">3</span>]</span><br><span class="line">  k = conv[<span class="number">0</span>]</span><br><span class="line">  s = conv[<span class="number">1</span>]</span><br><span class="line">  p = conv[<span class="number">2</span>]</span><br><span class="line">  </span><br><span class="line">  n_out = math.floor((n_in - k + <span class="number">2</span>*p)/s) + <span class="number">1</span></span><br><span class="line">  actualP = (n_out<span class="number">-1</span>)*s - n_in + k </span><br><span class="line">  pR = math.ceil(actualP/<span class="number">2</span>)</span><br><span class="line">  pL = math.floor(actualP/<span class="number">2</span>)</span><br><span class="line">  </span><br><span class="line">  j_out = j_in * s</span><br><span class="line">  r_out = r_in + (k - <span class="number">1</span>)*j_in</span><br><span class="line">  start_out = start_in + ((k<span class="number">-1</span>)/<span class="number">2</span> - pL)*j_in</span><br><span class="line">  <span class="keyword">return</span> n_out, j_out, r_out, start_out</span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printLayer</span><span class="params">(layer, layer_name)</span>:</span></span><br><span class="line">  print(layer_name + <span class="string">":"</span>)</span><br><span class="line">  print(<span class="string">"\t n features: %s \n \t jump: %s \n \t receptive size: %s \t start: %s "</span> % (layer[<span class="number">0</span>], layer[<span class="number">1</span>], layer[<span class="number">2</span>], layer[<span class="number">3</span>]))</span><br><span class="line"> </span><br><span class="line">layerInfos = []</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line"><span class="comment">#first layer is the data layer (image) with n_0 = image size; j_0 = 1; r_0 = 1; and start_0 = 0.5</span></span><br><span class="line">  <span class="keyword">print</span> (<span class="string">"-------Net summary------"</span>)</span><br><span class="line">  currentLayer = [imsize, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0.5</span>]</span><br><span class="line">  printLayer(currentLayer, <span class="string">"input image"</span>)</span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> range(len(convnet)):</span><br><span class="line">    currentLayer = outFromIn(convnet[i], currentLayer)</span><br><span class="line">    layerInfos.append(currentLayer)</span><br><span class="line">    printLayer(currentLayer, layer_names[i])</span><br><span class="line">  <span class="keyword">print</span> (<span class="string">"------------------------"</span>)</span><br><span class="line">  layer_name = raw_input (<span class="string">"Layer name where the feature in: "</span>)</span><br><span class="line">  layer_idx = layer_names.index(layer_name)</span><br><span class="line">  idx_x = int(raw_input (<span class="string">"index of the feature in x dimension (from 0)"</span>))</span><br><span class="line">  idx_y = int(raw_input (<span class="string">"index of the feature in y dimension (from 0)"</span>))</span><br><span class="line">  </span><br><span class="line">  n = layerInfos[layer_idx][<span class="number">0</span>]</span><br><span class="line">  j = layerInfos[layer_idx][<span class="number">1</span>]</span><br><span class="line">  r = layerInfos[layer_idx][<span class="number">2</span>]</span><br><span class="line">  start = layerInfos[layer_idx][<span class="number">3</span>]</span><br><span class="line">  <span class="keyword">assert</span>(idx_x &lt; n)</span><br><span class="line">  <span class="keyword">assert</span>(idx_y &lt; n)</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">print</span> (<span class="string">"receptive field: (%s, %s)"</span> % (r, r))</span><br><span class="line">  <span class="keyword">print</span> (<span class="string">"center: (%s, %s)"</span> % (start+idx_x*j, start+idx_y*j))</span><br></pre></td></tr></table></figure>

<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><blockquote>
<p><a href="https://zhuanlan.zhihu.com/p/31004121" target="_blank" rel="noopener">如何计算感受野(Receptive Field)——原理</a><br><a href="https://medium.com/mlreview/a-guide-to-receptive-field-arithmetic-for-convolutional-neural-networks-e0f514068807" target="_blank" rel="noopener">A guide to receptive field arithmetic for Convolutional Neural Networks</a><br><a href="https://iphysresearch.github.io/posts/receptive_field.html" target="_blank" rel="noopener">关于感受野 (Receptive field) 你该知道的事</a><br><a href="https://zhuanlan.zhihu.com/p/56940729" target="_blank" rel="noopener">特征图尺寸和感受野计算详解</a><br><a href="https://zhuanlan.zhihu.com/p/26663577" target="_blank" rel="noopener">卷积神经网络中的感受野计算（译）</a></p>
</blockquote>
]]></content>
      <categories>
        <category>AI</category>
      </categories>
      <tags>
        <tag>AI</tag>
      </tags>
  </entry>
  <entry>
    <title>神经网络参数量(weights)计算</title>
    <url>/2019/08/03/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E5%8F%82%E6%95%B0%E9%87%8F-weights-%E8%AE%A1%E7%AE%97/</url>
    <content><![CDATA[<!-- <script type="text/javascript"
   src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML">
</script> -->

<p>最近在估计往TDA4上移植模型的大小，ResNet18实际模型大小大概为44M，而我自己计算的只有11M左右？ 所以就想写一篇文章来讲一下如何计算网络的参数量。为了搞清楚参数量的计算，首先我们先搞清楚参数量的定义。</p>
<p><strong>参数量</strong>就是指，模型所有带参数的层的权重参数总量。视觉类网络组件中带参数的层，主要有: <strong>卷积层</strong>、<strong>BN层</strong>、<strong>全连接层</strong>等。（注意: 激活函数层(relu等)和Maxpooling层、Upsample层是没有参数的，不需要学习，他们只是提供了一种非线性的变换）</p>
<h1 id="理论公式部分"><a href="#理论公式部分" class="headerlink" title="理论公式部分"></a>理论公式部分</h1><h2 id="存储单位转换"><a href="#存储单位转换" class="headerlink" title="存储单位转换"></a>存储单位转换</h2><p>   1 bit = 2^8<br>   1 Byte = 8 bits = 2^8<br>   1 word = 2 Byte = 2x2^8<br>   1 char = 1 Byte = 2^8<br>   1 int  = 4 Byte = 4x2^8<br>   <strong>1 float = 4 Byte = 4x2^8</strong></p>
<h2 id="网络知识储备"><a href="#网络知识储备" class="headerlink" title="网络知识储备"></a>网络知识储备</h2><ol>
<li><p><strong>卷积层</strong>: <!-- \\(K^2 \times C_i \times C_o + C_o\\) --> <img src="/2019/08/03/神经网络参数量-weights-计算/math1.svg" alt=""></p>
<p>其中 <code>K</code> 为卷积核大小， <code>Ci</code> 为输入channel数， <code>Co</code> 为输出的channel数(也是filter的数量)，算式第二项是偏置项的参数量 。(虽然一般不写偏置项，因为不会影响总参数量的数量级，但是我们为了准确起见，把偏置项的参数量也考虑进来）</p>
</li>
<li><p><strong>BN层</strong>:  <!-- \\(2 \times C_i\\) --> <img src="/2019/08/03/神经网络参数量-weights-计算/math2.svg" alt=""> </p>
<p>其中 <code>Ci</code> 为输入的channel数（BN层有两个需要学习的参数，<strong>平移因子</strong>和<strong>缩放因子</strong>）</p>
</li>
<li><p><strong>全连接层</strong>:  <!-- \\(T_i \times T_o + T_o\\) -->  <img src="/2019/08/03/神经网络参数量-weights-计算/math3.svg" alt=""></p>
<p>其中 <code>Ti</code> 为输入向量的长度， <code>To</code> 为输出向量的长度，其中第二项为偏置项参数量。 (不过目前全连接层已经逐渐被Global Average Pooling层取代了)</p>
</li>
</ol>
<p>有了公式，下面将以<strong>AlexNet</strong>为例，来实践一下参数量的计算。</p>
<h1 id="以AlexNet为例"><a href="#以AlexNet为例" class="headerlink" title="以AlexNet为例"></a>以AlexNet为例</h1><p>得到的结果为：</p>
<p><img src="/2019/08/03/神经网络参数量-weights-计算/AlexNet.png" alt="AlexNet"></p>
<p><img src="/2019/08/03/神经网络参数量-weights-计算/AlexNet_60M.png" alt="AlexNet 60M"></p>
<p>根据上表计算得到的参数量大概为60M, <strong>每个参数按每个<code>4 bytes</code>算</strong>，总共有60 x 4 = 240M, 这与实际上训练产生的model大小一致。</p>
<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><blockquote>
<p><a href="https://zhuanlan.zhihu.com/p/57437131" target="_blank" rel="noopener">神经网络参数量的计算: 以UNet为例</a><br><a href="https://blog.csdn.net/chaipp0607/article/details/72847422" target="_blank" rel="noopener">从AlexNet理解卷积神经网络的一般结构</a><br><a href="https://zhuanlan.zhihu.com/p/49842046" target="_blank" rel="noopener">经典神经网络参数的计算</a></p>
</blockquote>
]]></content>
      <categories>
        <category>AI</category>
      </categories>
      <tags>
        <tag>AI</tag>
      </tags>
  </entry>
  <entry>
    <title>Gimbal lock(万向锁)</title>
    <url>/2019/08/03/Gimbal-lock-%E4%B8%87%E5%90%91%E9%94%81/</url>
    <content><![CDATA[<h1 id="roll-pich-yaw角介绍"><a href="#roll-pich-yaw角介绍" class="headerlink" title="roll,pich,yaw角介绍"></a>roll,pich,yaw角介绍</h1><ul>
<li><strong>x</strong>: roll</li>
<li><strong>y</strong>: pich</li>
<li><strong>z</strong>: yaw</li>
</ul>
<p><video src="Airplane control.mkv" controls="controls"></video></p>
<h1 id="万向锁"><a href="#万向锁" class="headerlink" title="万向锁"></a>万向锁</h1><p>万向锁通俗点讲就是有两个轴重合了。<br><video src="Gimbal lock.mkv" controls="controls"></video></p>
<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><blockquote>
<ol>
<li><a href="https://www.youtube.com/watch?v=zc8b2Jo7mno&t=34s" target="_blank" rel="noopener">Gimbal lock YouTube</a></li>
<li><a href="https://www.youtube.com/watch?v=pQ24NtnaLl8" target="_blank" rel="noopener">Airplane control - Roll, Pitch, Yaw</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>图像处理</category>
      </categories>
      <tags>
        <tag>图像处理</tag>
      </tags>
  </entry>
  <entry>
    <title>ELF File</title>
    <url>/2019/07/28/elf-file/</url>
    <content><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><ol>
<li>可重定位文件(Relocatable File) .o)包含适合于与其他目标文件链接来创建可执行文件或者共享目标文件的代码和数据。</li>
<li>可执行文件(Executable File) .exe) 包含适合于执行的一个程序，此文件规定了 <code>exec()</code> 如何创建一个程序的进程映像。</li>
<li>共享目标文件(Shared Object File) .so) 包含可在两种上下文中链接的代码和数据。<ul>
<li>首先链接编辑器可以将它和其它可重定位文件和共享目标文件一起处理， 生成另外一个目标文件。</li>
<li>其次动态链接器(Dynamic Linker)可能将它与某 个可执行文件以及其它共享目标一起组合，创建进程映像。</li>
</ul>
</li>
</ol>
<h2 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h2><p>ELF文件参与程序的连接(建立一个程序)和程序的执行(运行一个程序)，所以可以从不同的角度来看待elf格式的文件：</p>
<ol>
<li>如果用于编译和链接（可重定位文件），则编译器和链接器将把elf文件看作是节头表描述的节的集合,程序头表可选。</li>
<li>如果用于加载执行（可执行文件），则加载器则将把elf文件看作是程序头表描述的段的集合，一个段可能包含多个节，节头表可选。</li>
<li>如果是共享文件，则两者都含有。</li>
</ol>
<h1 id="ELF头文件"><a href="#ELF头文件" class="headerlink" title="ELF头文件"></a>ELF头文件</h1><p>ELF头文件在<code>/usr/include/elf.h</code>中，内容如下:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* This file defines standard ELF types, structures, and macros.</span></span><br><span class="line"><span class="comment">   Copyright (C) 1995-2016 Free Software Foundation, Inc.</span></span><br><span class="line"><span class="comment">   This file is part of the GNU C Library.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">   The GNU C Library is free software; you can redistribute it and/or</span></span><br><span class="line"><span class="comment">   modify it under the terms of the GNU Lesser General Public</span></span><br><span class="line"><span class="comment">   License as published by the Free Software Foundation; either</span></span><br><span class="line"><span class="comment">   version 2.1 of the License, or (at your option) any later version.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">   The GNU C Library is distributed in the hope that it will be useful,</span></span><br><span class="line"><span class="comment">   but WITHOUT ANY WARRANTY; without even the implied warranty of</span></span><br><span class="line"><span class="comment">   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span></span><br><span class="line"><span class="comment">   Lesser General Public License for more details.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">   You should have received a copy of the GNU Lesser General Public</span></span><br><span class="line"><span class="comment">   License along with the GNU C Library; if not, see</span></span><br><span class="line"><span class="comment">   &lt;http://www.gnu.org/licenses/&gt;.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> _ELF_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	_ELF_H 1</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;features.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">__BEGIN_DECLS</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Standard ELF types.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdint.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Type for a 16-bit quantity.  */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">uint16_t</span> Elf32_Half;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">uint16_t</span> Elf64_Half;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Types for signed and unsigned 32-bit quantities.  */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">uint32_t</span> Elf32_Word;</span><br><span class="line"><span class="keyword">typedef</span>	<span class="keyword">int32_t</span>  Elf32_Sword;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">uint32_t</span> Elf64_Word;</span><br><span class="line"><span class="keyword">typedef</span>	<span class="keyword">int32_t</span>  Elf64_Sword;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Types for signed and unsigned 64-bit quantities.  */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">uint64_t</span> Elf32_Xword;</span><br><span class="line"><span class="keyword">typedef</span>	<span class="keyword">int64_t</span>  Elf32_Sxword;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">uint64_t</span> Elf64_Xword;</span><br><span class="line"><span class="keyword">typedef</span>	<span class="keyword">int64_t</span>  Elf64_Sxword;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Type of addresses.  */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">uint32_t</span> Elf32_Addr;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">uint64_t</span> Elf64_Addr;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Type of file offsets.  */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">uint32_t</span> Elf32_Off;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">uint64_t</span> Elf64_Off;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Type for section indices, which are 16-bit quantities.  */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">uint16_t</span> Elf32_Section;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">uint16_t</span> Elf64_Section;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Type for version symbol information.  */</span></span><br><span class="line"><span class="keyword">typedef</span> Elf32_Half Elf32_Versym;</span><br><span class="line"><span class="keyword">typedef</span> Elf64_Half Elf64_Versym;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* The ELF file header.  This appears at the start of every ELF file.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EI_NIDENT (16)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">char</span>	e_ident[EI_NIDENT];	<span class="comment">/* Magic number and other info */</span></span><br><span class="line">  Elf32_Half	e_type;			<span class="comment">/* Object file type */</span></span><br><span class="line">  Elf32_Half	e_machine;		<span class="comment">/* Architecture */</span></span><br><span class="line">  Elf32_Word	e_version;		<span class="comment">/* Object file version */</span></span><br><span class="line">  Elf32_Addr	e_entry;		<span class="comment">/* Entry point virtual address */</span></span><br><span class="line">  Elf32_Off	e_phoff;		<span class="comment">/* Program header table file offset */</span></span><br><span class="line">  Elf32_Off	e_shoff;		<span class="comment">/* Section header table file offset */</span></span><br><span class="line">  Elf32_Word	e_flags;		<span class="comment">/* Processor-specific flags */</span></span><br><span class="line">  Elf32_Half	e_ehsize;		<span class="comment">/* ELF header size in bytes */</span></span><br><span class="line">  Elf32_Half	e_phentsize;		<span class="comment">/* Program header table entry size */</span></span><br><span class="line">  Elf32_Half	e_phnum;		<span class="comment">/* Program header table entry count */</span></span><br><span class="line">  Elf32_Half	e_shentsize;		<span class="comment">/* Section header table entry size */</span></span><br><span class="line">  Elf32_Half	e_shnum;		<span class="comment">/* Section header table entry count */</span></span><br><span class="line">  Elf32_Half	e_shstrndx;		<span class="comment">/* Section header string table index */</span></span><br><span class="line">&#125; Elf32_Ehdr;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">char</span>	e_ident[EI_NIDENT];	<span class="comment">/* Magic number and other info */</span></span><br><span class="line">  Elf64_Half	e_type;			<span class="comment">/* Object file type */</span></span><br><span class="line">  Elf64_Half	e_machine;		<span class="comment">/* Architecture */</span></span><br><span class="line">  Elf64_Word	e_version;		<span class="comment">/* Object file version */</span></span><br><span class="line">  Elf64_Addr	e_entry;		<span class="comment">/* Entry point virtual address */</span></span><br><span class="line">  Elf64_Off	e_phoff;		<span class="comment">/* Program header table file offset */</span></span><br><span class="line">  Elf64_Off	e_shoff;		<span class="comment">/* Section header table file offset */</span></span><br><span class="line">  Elf64_Word	e_flags;		<span class="comment">/* Processor-specific flags */</span></span><br><span class="line">  Elf64_Half	e_ehsize;		<span class="comment">/* ELF header size in bytes */</span></span><br><span class="line">  Elf64_Half	e_phentsize;		<span class="comment">/* Program header table entry size */</span></span><br><span class="line">  Elf64_Half	e_phnum;		<span class="comment">/* Program header table entry count */</span></span><br><span class="line">  Elf64_Half	e_shentsize;		<span class="comment">/* Section header table entry size */</span></span><br><span class="line">  Elf64_Half	e_shnum;		<span class="comment">/* Section header table entry count */</span></span><br><span class="line">  Elf64_Half	e_shstrndx;		<span class="comment">/* Section header string table index */</span></span><br><span class="line">&#125; Elf64_Ehdr;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Fields in the e_ident array.  The EI_* macros are indices into the</span></span><br><span class="line"><span class="comment">   array.  The macros under each EI_* macro are the values the byte</span></span><br><span class="line"><span class="comment">   may have.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EI_MAG0		0		<span class="comment">/* File identification byte 0 index */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFMAG0		0x7f		<span class="comment">/* Magic number byte 0 */</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EI_MAG1		1		<span class="comment">/* File identification byte 1 index */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFMAG1		<span class="meta-string">'E'</span>		<span class="comment">/* Magic number byte 1 */</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EI_MAG2		2		<span class="comment">/* File identification byte 2 index */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFMAG2		<span class="meta-string">'L'</span>		<span class="comment">/* Magic number byte 2 */</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EI_MAG3		3		<span class="comment">/* File identification byte 3 index */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFMAG3		<span class="meta-string">'F'</span>		<span class="comment">/* Magic number byte 3 */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Conglomeration of the identification bytes, for easy testing as a word.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	ELFMAG		<span class="meta-string">"\177ELF"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	SELFMAG		4</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EI_CLASS	4		<span class="comment">/* File class byte index */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFCLASSNONE	0		<span class="comment">/* Invalid class */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFCLASS32	1		<span class="comment">/* 32-bit objects */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFCLASS64	2		<span class="comment">/* 64-bit objects */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFCLASSNUM	3</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EI_DATA		5		<span class="comment">/* Data encoding byte index */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFDATANONE	0		<span class="comment">/* Invalid data encoding */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFDATA2LSB	1		<span class="comment">/* 2's complement, little endian */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFDATA2MSB	2		<span class="comment">/* 2's complement, big endian */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFDATANUM	3</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EI_VERSION	6		<span class="comment">/* File version byte index */</span></span></span><br><span class="line">truetruetruetruetrue<span class="comment">/* Value must be EV_CURRENT */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EI_OSABI	7		<span class="comment">/* OS ABI identification */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFOSABI_NONE		0	<span class="comment">/* UNIX System V ABI */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFOSABI_SYSV		0	<span class="comment">/* Alias.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFOSABI_HPUX		1	<span class="comment">/* HP-UX */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFOSABI_NETBSD		2	<span class="comment">/* NetBSD.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFOSABI_GNU		3	<span class="comment">/* Object uses GNU ELF extensions.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFOSABI_LINUX		ELFOSABI_GNU <span class="comment">/* Compatibility alias.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFOSABI_SOLARIS	6	<span class="comment">/* Sun Solaris.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFOSABI_AIX		7	<span class="comment">/* IBM AIX.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFOSABI_IRIX		8	<span class="comment">/* SGI Irix.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFOSABI_FREEBSD	9	<span class="comment">/* FreeBSD.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFOSABI_TRU64		10	<span class="comment">/* Compaq TRU64 UNIX.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFOSABI_MODESTO	11	<span class="comment">/* Novell Modesto.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFOSABI_OPENBSD	12	<span class="comment">/* OpenBSD.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFOSABI_ARM_AEABI	64	<span class="comment">/* ARM EABI */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFOSABI_ARM		97	<span class="comment">/* ARM */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFOSABI_STANDALONE	255	<span class="comment">/* Standalone (embedded) application */</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EI_ABIVERSION	8		<span class="comment">/* ABI version */</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EI_PAD		9		<span class="comment">/* Byte index of padding bytes */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Legal values for e_type (object file type).  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ET_NONE		0		<span class="comment">/* No file type */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ET_REL		1		<span class="comment">/* Relocatable file */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ET_EXEC		2		<span class="comment">/* Executable file */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ET_DYN		3		<span class="comment">/* Shared object file */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ET_CORE		4		<span class="comment">/* Core file */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	ET_NUM		5		<span class="comment">/* Number of defined types */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ET_LOOS		0xfe00		<span class="comment">/* OS-specific range start */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ET_HIOS		0xfeff		<span class="comment">/* OS-specific range end */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ET_LOPROC	0xff00		<span class="comment">/* Processor-specific range start */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ET_HIPROC	0xffff		<span class="comment">/* Processor-specific range end */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Legal values for e_machine (architecture).  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_NONE		 0		<span class="comment">/* No machine */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_M32		 1		<span class="comment">/* AT&amp;T WE 32100 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_SPARC	 2		<span class="comment">/* SUN SPARC */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_386		 3		<span class="comment">/* Intel 80386 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_68K		 4		<span class="comment">/* Motorola m68k family */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_88K		 5		<span class="comment">/* Motorola m88k family */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_860		 7		<span class="comment">/* Intel 80860 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_MIPS		 8		<span class="comment">/* MIPS R3000 big-endian */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_S370		 9		<span class="comment">/* IBM System/370 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_MIPS_RS3_LE	10		<span class="comment">/* MIPS R3000 little-endian */</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_PARISC	15		<span class="comment">/* HPPA */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_VPP500	17		<span class="comment">/* Fujitsu VPP500 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_SPARC32PLUS	18		<span class="comment">/* Sun's "v8plus" */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_960		19		<span class="comment">/* Intel 80960 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_PPC		20		<span class="comment">/* PowerPC */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_PPC64	21		<span class="comment">/* PowerPC 64-bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_S390		22		<span class="comment">/* IBM S390 */</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_V800		36		<span class="comment">/* NEC V800 series */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_FR20		37		<span class="comment">/* Fujitsu FR20 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_RH32		38		<span class="comment">/* TRW RH-32 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_RCE		39		<span class="comment">/* Motorola RCE */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_ARM		40		<span class="comment">/* ARM */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_FAKE_ALPHA	41		<span class="comment">/* Digital Alpha */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_SH		42		<span class="comment">/* Hitachi SH */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_SPARCV9	43		<span class="comment">/* SPARC v9 64-bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_TRICORE	44		<span class="comment">/* Siemens Tricore */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_ARC		45		<span class="comment">/* Argonaut RISC Core */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_H8_300	46		<span class="comment">/* Hitachi H8/300 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_H8_300H	47		<span class="comment">/* Hitachi H8/300H */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_H8S		48		<span class="comment">/* Hitachi H8S */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_H8_500	49		<span class="comment">/* Hitachi H8/500 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_IA_64	50		<span class="comment">/* Intel Merced */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_MIPS_X	51		<span class="comment">/* Stanford MIPS-X */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_COLDFIRE	52		<span class="comment">/* Motorola Coldfire */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_68HC12	53		<span class="comment">/* Motorola M68HC12 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_MMA		54		<span class="comment">/* Fujitsu MMA Multimedia Accelerator*/</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_PCP		55		<span class="comment">/* Siemens PCP */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_NCPU		56		<span class="comment">/* Sony nCPU embeeded RISC */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_NDR1		57		<span class="comment">/* Denso NDR1 microprocessor */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_STARCORE	58		<span class="comment">/* Motorola Start*Core processor */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_ME16		59		<span class="comment">/* Toyota ME16 processor */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_ST100	60		<span class="comment">/* STMicroelectronic ST100 processor */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_TINYJ	61		<span class="comment">/* Advanced Logic Corp. Tinyj emb.fam*/</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_X86_64	62		<span class="comment">/* AMD x86-64 architecture */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_PDSP		63		<span class="comment">/* Sony DSP Processor */</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_FX66		66		<span class="comment">/* Siemens FX66 microcontroller */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_ST9PLUS	67		<span class="comment">/* STMicroelectronics ST9+ 8/16 mc */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_ST7		68		<span class="comment">/* STmicroelectronics ST7 8 bit mc */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_68HC16	69		<span class="comment">/* Motorola MC68HC16 microcontroller */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_68HC11	70		<span class="comment">/* Motorola MC68HC11 microcontroller */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_68HC08	71		<span class="comment">/* Motorola MC68HC08 microcontroller */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_68HC05	72		<span class="comment">/* Motorola MC68HC05 microcontroller */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_SVX		73		<span class="comment">/* Silicon Graphics SVx */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_ST19		74		<span class="comment">/* STMicroelectronics ST19 8 bit mc */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_VAX		75		<span class="comment">/* Digital VAX */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_CRIS		76		<span class="comment">/* Axis Communications 32-bit embedded processor */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_JAVELIN	77		<span class="comment">/* Infineon Technologies 32-bit embedded processor */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_FIREPATH	78		<span class="comment">/* Element 14 64-bit DSP Processor */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_ZSP		79		<span class="comment">/* LSI Logic 16-bit DSP Processor */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_MMIX		80		<span class="comment">/* Donald Knuth's educational 64-bit processor */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_HUANY	81		<span class="comment">/* Harvard University machine-independent object files */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_PRISM	82		<span class="comment">/* SiTera Prism */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_AVR		83		<span class="comment">/* Atmel AVR 8-bit microcontroller */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_FR30		84		<span class="comment">/* Fujitsu FR30 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_D10V		85		<span class="comment">/* Mitsubishi D10V */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_D30V		86		<span class="comment">/* Mitsubishi D30V */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_V850		87		<span class="comment">/* NEC v850 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_M32R		88		<span class="comment">/* Mitsubishi M32R */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_MN10300	89		<span class="comment">/* Matsushita MN10300 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_MN10200	90		<span class="comment">/* Matsushita MN10200 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_PJ		91		<span class="comment">/* picoJava */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_OPENRISC	92		<span class="comment">/* OpenRISC 32-bit embedded processor */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_ARC_A5	93		<span class="comment">/* ARC Cores Tangent-A5 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_XTENSA	94		<span class="comment">/* Tensilica Xtensa Architecture */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_ALTERA_NIOS2 113		<span class="comment">/* Altera Nios II */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_AARCH64	183		<span class="comment">/* ARM AARCH64 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_TILEPRO	188		<span class="comment">/* Tilera TILEPro */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_MICROBLAZE	189		<span class="comment">/* Xilinx MicroBlaze */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_TILEGX	191		<span class="comment">/* Tilera TILE-Gx */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_NUM		192</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* If it is necessary to assign new unofficial EM_* values, please</span></span><br><span class="line"><span class="comment">   pick large random numbers (0x8523, 0xa7f2, etc.) to minimize the</span></span><br><span class="line"><span class="comment">   chances of collision with official or non-GNU unofficial values.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EM_ALPHA	0x9026</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Legal values for e_version (version).  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EV_NONE		0		<span class="comment">/* Invalid ELF version */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EV_CURRENT	1		<span class="comment">/* Current version */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EV_NUM		2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Section header.  */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  Elf32_Word	sh_name;		<span class="comment">/* Section name (string tbl index) */</span></span><br><span class="line">  Elf32_Word	sh_type;		<span class="comment">/* Section type */</span></span><br><span class="line">  Elf32_Word	sh_flags;		<span class="comment">/* Section flags */</span></span><br><span class="line">  Elf32_Addr	sh_addr;		<span class="comment">/* Section virtual addr at execution */</span></span><br><span class="line">  Elf32_Off	sh_offset;		<span class="comment">/* Section file offset */</span></span><br><span class="line">  Elf32_Word	sh_size;		<span class="comment">/* Section size in bytes */</span></span><br><span class="line">  Elf32_Word	sh_link;		<span class="comment">/* Link to another section */</span></span><br><span class="line">  Elf32_Word	sh_info;		<span class="comment">/* Additional section information */</span></span><br><span class="line">  Elf32_Word	sh_addralign;		<span class="comment">/* Section alignment */</span></span><br><span class="line">  Elf32_Word	sh_entsize;		<span class="comment">/* Entry size if section holds table */</span></span><br><span class="line">&#125; Elf32_Shdr;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  Elf64_Word	sh_name;		<span class="comment">/* Section name (string tbl index) */</span></span><br><span class="line">  Elf64_Word	sh_type;		<span class="comment">/* Section type */</span></span><br><span class="line">  Elf64_Xword	sh_flags;		<span class="comment">/* Section flags */</span></span><br><span class="line">  Elf64_Addr	sh_addr;		<span class="comment">/* Section virtual addr at execution */</span></span><br><span class="line">  Elf64_Off	sh_offset;		<span class="comment">/* Section file offset */</span></span><br><span class="line">  Elf64_Xword	sh_size;		<span class="comment">/* Section size in bytes */</span></span><br><span class="line">  Elf64_Word	sh_link;		<span class="comment">/* Link to another section */</span></span><br><span class="line">  Elf64_Word	sh_info;		<span class="comment">/* Additional section information */</span></span><br><span class="line">  Elf64_Xword	sh_addralign;		<span class="comment">/* Section alignment */</span></span><br><span class="line">  Elf64_Xword	sh_entsize;		<span class="comment">/* Entry size if section holds table */</span></span><br><span class="line">&#125; Elf64_Shdr;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Special section indices.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHN_UNDEF	0		<span class="comment">/* Undefined section */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHN_LORESERVE	0xff00		<span class="comment">/* Start of reserved indices */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHN_LOPROC	0xff00		<span class="comment">/* Start of processor-specific */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHN_BEFORE	0xff00		<span class="comment">/* Order section before all others</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   (Solaris).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHN_AFTER	0xff01		<span class="comment">/* Order section after all others</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   (Solaris).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHN_HIPROC	0xff1f		<span class="comment">/* End of processor-specific */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHN_LOOS	0xff20		<span class="comment">/* Start of OS-specific */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHN_HIOS	0xff3f		<span class="comment">/* End of OS-specific */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHN_ABS		0xfff1		<span class="comment">/* Associated symbol is absolute */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHN_COMMON	0xfff2		<span class="comment">/* Associated symbol is common */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHN_XINDEX	0xffff		<span class="comment">/* Index is in extra table.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHN_HIRESERVE	0xffff		<span class="comment">/* End of reserved indices */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Legal values for sh_type (section type).  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_NULL	  0		<span class="comment">/* Section header table entry unused */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_PROGBITS	  1		<span class="comment">/* Program data */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_SYMTAB	  2		<span class="comment">/* Symbol table */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_STRTAB	  3		<span class="comment">/* String table */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_RELA	  4		<span class="comment">/* Relocation entries with addends */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_HASH	  5		<span class="comment">/* Symbol hash table */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_DYNAMIC	  6		<span class="comment">/* Dynamic linking information */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_NOTE	  7		<span class="comment">/* Notes */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_NOBITS	  8		<span class="comment">/* Program space with no data (bss) */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_REL		  9		<span class="comment">/* Relocation entries, no addends */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_SHLIB	  10		<span class="comment">/* Reserved */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_DYNSYM	  11		<span class="comment">/* Dynamic linker symbol table */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_INIT_ARRAY	  14		<span class="comment">/* Array of constructors */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_FINI_ARRAY	  15		<span class="comment">/* Array of destructors */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_PREINIT_ARRAY 16		<span class="comment">/* Array of pre-constructors */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_GROUP	  17		<span class="comment">/* Section group */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_SYMTAB_SHNDX  18		<span class="comment">/* Extended section indeces */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	SHT_NUM		  19		<span class="comment">/* Number of defined types.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_LOOS	  0x60000000	<span class="comment">/* Start OS-specific.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_GNU_ATTRIBUTES 0x6ffffff5	<span class="comment">/* Object attributes.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_GNU_HASH	  0x6ffffff6	<span class="comment">/* GNU-style hash table.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_GNU_LIBLIST	  0x6ffffff7	<span class="comment">/* Prelink library list */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_CHECKSUM	  0x6ffffff8	<span class="comment">/* Checksum for DSO content.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_LOSUNW	  0x6ffffffa	<span class="comment">/* Sun-specific low bound.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_SUNW_move	  0x6ffffffa</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_SUNW_COMDAT   0x6ffffffb</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_SUNW_syminfo  0x6ffffffc</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_GNU_verdef	  0x6ffffffd	<span class="comment">/* Version definition section.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_GNU_verneed	  0x6ffffffe	<span class="comment">/* Version needs section.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_GNU_versym	  0x6fffffff	<span class="comment">/* Version symbol table.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_HISUNW	  0x6fffffff	<span class="comment">/* Sun-specific high bound.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_HIOS	  0x6fffffff	<span class="comment">/* End OS-specific type */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_LOPROC	  0x70000000	<span class="comment">/* Start of processor-specific */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_HIPROC	  0x7fffffff	<span class="comment">/* End of processor-specific */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_LOUSER	  0x80000000	<span class="comment">/* Start of application-specific */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_HIUSER	  0x8fffffff	<span class="comment">/* End of application-specific */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Legal values for sh_flags (section flags).  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_WRITE	     (1 &lt;&lt; 0)	<span class="comment">/* Writable */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_ALLOC	     (1 &lt;&lt; 1)	<span class="comment">/* Occupies memory during execution */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_EXECINSTR	     (1 &lt;&lt; 2)	<span class="comment">/* Executable */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_MERGE	     (1 &lt;&lt; 4)	<span class="comment">/* Might be merged */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_STRINGS	     (1 &lt;&lt; 5)	<span class="comment">/* Contains nul-terminated strings */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_INFO_LINK	     (1 &lt;&lt; 6)	<span class="comment">/* `sh_info' contains SHT index */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_LINK_ORDER	     (1 &lt;&lt; 7)	<span class="comment">/* Preserve order after combining */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_OS_NONCONFORMING (1 &lt;&lt; 8)	<span class="comment">/* Non-standard OS specific handling</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   required */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_GROUP	     (1 &lt;&lt; 9)	<span class="comment">/* Section is member of a group.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_TLS		     (1 &lt;&lt; 10)	<span class="comment">/* Section hold thread-local data.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_COMPRESSED	     (1 &lt;&lt; 11)	<span class="comment">/* Section with compressed data. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_MASKOS	     0x0ff00000	<span class="comment">/* OS-specific.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_MASKPROC	     0xf0000000	<span class="comment">/* Processor-specific */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_ORDERED	     (1 &lt;&lt; 30)	<span class="comment">/* Special ordering requirement</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   (Solaris).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_EXCLUDE	     (1U &lt;&lt; 31)	<span class="comment">/* Section is excluded unless</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   referenced or allocated (Solaris).*/</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Section compression header.  Used when SHF_COMPRESSED is set.  */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  Elf32_Word	ch_type;	<span class="comment">/* Compression format.  */</span></span><br><span class="line">  Elf32_Word	ch_size;	<span class="comment">/* Uncompressed data size.  */</span></span><br><span class="line">  Elf32_Word	ch_addralign;	<span class="comment">/* Uncompressed data alignment.  */</span></span><br><span class="line">&#125; Elf32_Chdr;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  Elf64_Word	ch_type;	<span class="comment">/* Compression format.  */</span></span><br><span class="line">  Elf64_Word	ch_reserved;</span><br><span class="line">  Elf64_Xword	ch_size;	<span class="comment">/* Uncompressed data size.  */</span></span><br><span class="line">  Elf64_Xword	ch_addralign;	<span class="comment">/* Uncompressed data alignment.  */</span></span><br><span class="line">&#125; Elf64_Chdr;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Legal values for ch_type (compression algorithm).  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFCOMPRESS_ZLIB	1	   <span class="comment">/* ZLIB/DEFLATE algorithm.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFCOMPRESS_LOOS	0x60000000 <span class="comment">/* Start of OS-specific.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFCOMPRESS_HIOS	0x6fffffff <span class="comment">/* End of OS-specific.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFCOMPRESS_LOPROC	0x70000000 <span class="comment">/* Start of processor-specific.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELFCOMPRESS_HIPROC	0x7fffffff <span class="comment">/* End of processor-specific.  */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Section group handling.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GRP_COMDAT	0x1		<span class="comment">/* Mark group as COMDAT.  */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Symbol table entry.  */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  Elf32_Word	st_name;		<span class="comment">/* Symbol name (string tbl index) */</span></span><br><span class="line">  Elf32_Addr	st_value;		<span class="comment">/* Symbol value */</span></span><br><span class="line">  Elf32_Word	st_size;		<span class="comment">/* Symbol size */</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">char</span>	st_info;		<span class="comment">/* Symbol type and binding */</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">char</span>	st_other;		<span class="comment">/* Symbol visibility */</span></span><br><span class="line">  Elf32_Section	st_shndx;		<span class="comment">/* Section index */</span></span><br><span class="line">&#125; Elf32_Sym;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  Elf64_Word	st_name;		<span class="comment">/* Symbol name (string tbl index) */</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">char</span>	st_info;		<span class="comment">/* Symbol type and binding */</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">char</span> st_other;		<span class="comment">/* Symbol visibility */</span></span><br><span class="line">  Elf64_Section	st_shndx;		<span class="comment">/* Section index */</span></span><br><span class="line">  Elf64_Addr	st_value;		<span class="comment">/* Symbol value */</span></span><br><span class="line">  Elf64_Xword	st_size;		<span class="comment">/* Symbol size */</span></span><br><span class="line">&#125; Elf64_Sym;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* The syminfo section if available contains additional information about</span></span><br><span class="line"><span class="comment">   every dynamic symbol.  */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  Elf32_Half si_boundto;		<span class="comment">/* Direct bindings, symbol bound to */</span></span><br><span class="line">  Elf32_Half si_flags;			<span class="comment">/* Per symbol flags */</span></span><br><span class="line">&#125; Elf32_Syminfo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  Elf64_Half si_boundto;		<span class="comment">/* Direct bindings, symbol bound to */</span></span><br><span class="line">  Elf64_Half si_flags;			<span class="comment">/* Per symbol flags */</span></span><br><span class="line">&#125; Elf64_Syminfo;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Possible values for si_boundto.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SYMINFO_BT_SELF		0xffff	<span class="comment">/* Symbol bound to self */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SYMINFO_BT_PARENT	0xfffe	<span class="comment">/* Symbol bound to parent */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SYMINFO_BT_LOWRESERVE	0xff00	<span class="comment">/* Beginning of reserved entries */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Possible bitmasks for si_flags.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SYMINFO_FLG_DIRECT	0x0001	<span class="comment">/* Direct bound symbol */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SYMINFO_FLG_PASSTHRU	0x0002	<span class="comment">/* Pass-thru symbol for translator */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SYMINFO_FLG_COPY	0x0004	<span class="comment">/* Symbol is a copy-reloc */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SYMINFO_FLG_LAZYLOAD	0x0008	<span class="comment">/* Symbol bound to object to be lazy</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   loaded */</span></span></span><br><span class="line"><span class="comment">/* Syminfo version values.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SYMINFO_NONE		0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SYMINFO_CURRENT		1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SYMINFO_NUM		2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* How to extract and insert information held in the st_info field.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF32_ST_BIND(val)		(((unsigned char) (val)) &gt;&gt; 4)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF32_ST_TYPE(val)		((val) &amp; 0xf)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF32_ST_INFO(bind, type)	(((bind) &lt;&lt; 4) + ((type) &amp; 0xf))</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Both Elf32_Sym and Elf64_Sym use the same one-byte st_info field.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF64_ST_BIND(val)		ELF32_ST_BIND (val)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF64_ST_TYPE(val)		ELF32_ST_TYPE (val)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF64_ST_INFO(bind, type)	ELF32_ST_INFO ((bind), (type))</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Legal values for ST_BIND subfield of st_info (symbol binding).  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STB_LOCAL	0		<span class="comment">/* Local symbol */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STB_GLOBAL	1		<span class="comment">/* Global symbol */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STB_WEAK	2		<span class="comment">/* Weak symbol */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	STB_NUM		3		<span class="comment">/* Number of defined types.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STB_LOOS	10		<span class="comment">/* Start of OS-specific */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STB_GNU_UNIQUE	10		<span class="comment">/* Unique symbol.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STB_HIOS	12		<span class="comment">/* End of OS-specific */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STB_LOPROC	13		<span class="comment">/* Start of processor-specific */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STB_HIPROC	15		<span class="comment">/* End of processor-specific */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Legal values for ST_TYPE subfield of st_info (symbol type).  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STT_NOTYPE	0		<span class="comment">/* Symbol type is unspecified */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STT_OBJECT	1		<span class="comment">/* Symbol is a data object */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STT_FUNC	2		<span class="comment">/* Symbol is a code object */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STT_SECTION	3		<span class="comment">/* Symbol associated with a section */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STT_FILE	4		<span class="comment">/* Symbol's name is file name */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STT_COMMON	5		<span class="comment">/* Symbol is a common data object */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STT_TLS		6		<span class="comment">/* Symbol is thread-local data object*/</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	STT_NUM		7		<span class="comment">/* Number of defined types.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STT_LOOS	10		<span class="comment">/* Start of OS-specific */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STT_GNU_IFUNC	10		<span class="comment">/* Symbol is indirect code object */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STT_HIOS	12		<span class="comment">/* End of OS-specific */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STT_LOPROC	13		<span class="comment">/* Start of processor-specific */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STT_HIPROC	15		<span class="comment">/* End of processor-specific */</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Symbol table indices are found in the hash buckets and chain table</span></span><br><span class="line"><span class="comment">   of a symbol hash table section.  This special index value indicates</span></span><br><span class="line"><span class="comment">   the end of a chain, meaning no further symbols are found in that bucket.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STN_UNDEF	0		<span class="comment">/* End of a chain.  */</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* How to extract and insert information held in the st_other field.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF32_ST_VISIBILITY(o)	((o) &amp; 0x03)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* For ELF64 the definitions are the same.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF64_ST_VISIBILITY(o)	ELF32_ST_VISIBILITY (o)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Symbol visibility specification encoded in the st_other field.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STV_DEFAULT	0		<span class="comment">/* Default symbol visibility rules */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STV_INTERNAL	1		<span class="comment">/* Processor specific hidden class */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STV_HIDDEN	2		<span class="comment">/* Sym unavailable in other modules */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STV_PROTECTED	3		<span class="comment">/* Not preemptible, not exported */</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Relocation table entry without addend (in section of type SHT_REL).  */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  Elf32_Addr	r_offset;		<span class="comment">/* Address */</span></span><br><span class="line">  Elf32_Word	r_info;			<span class="comment">/* Relocation type and symbol index */</span></span><br><span class="line">&#125; Elf32_Rel;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* I have seen two different definitions of the Elf64_Rel and</span></span><br><span class="line"><span class="comment">   Elf64_Rela structures, so we'll leave them out until Novell (or</span></span><br><span class="line"><span class="comment">   whoever) gets their act together.  */</span></span><br><span class="line"><span class="comment">/* The following, at least, is used on Sparc v9, MIPS, and Alpha.  */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  Elf64_Addr	r_offset;		<span class="comment">/* Address */</span></span><br><span class="line">  Elf64_Xword	r_info;			<span class="comment">/* Relocation type and symbol index */</span></span><br><span class="line">&#125; Elf64_Rel;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Relocation table entry with addend (in section of type SHT_RELA).  */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  Elf32_Addr	r_offset;		<span class="comment">/* Address */</span></span><br><span class="line">  Elf32_Word	r_info;			<span class="comment">/* Relocation type and symbol index */</span></span><br><span class="line">  Elf32_Sword	r_addend;		<span class="comment">/* Addend */</span></span><br><span class="line">&#125; Elf32_Rela;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  Elf64_Addr	r_offset;		<span class="comment">/* Address */</span></span><br><span class="line">  Elf64_Xword	r_info;			<span class="comment">/* Relocation type and symbol index */</span></span><br><span class="line">  Elf64_Sxword	r_addend;		<span class="comment">/* Addend */</span></span><br><span class="line">&#125; Elf64_Rela;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* How to extract and insert information held in the r_info field.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF32_R_SYM(val)		((val) &gt;&gt; 8)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF32_R_TYPE(val)		((val) &amp; 0xff)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF32_R_INFO(sym, type)		(((sym) &lt;&lt; 8) + ((type) &amp; 0xff))</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF64_R_SYM(i)			((i) &gt;&gt; 32)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF64_R_TYPE(i)			((i) &amp; 0xffffffff)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF64_R_INFO(sym,type)		((((Elf64_Xword) (sym)) &lt;&lt; 32) + (type))</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Program segment header.  */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  Elf32_Word	p_type;			<span class="comment">/* Segment type */</span></span><br><span class="line">  Elf32_Off	p_offset;		<span class="comment">/* Segment file offset */</span></span><br><span class="line">  Elf32_Addr	p_vaddr;		<span class="comment">/* Segment virtual address */</span></span><br><span class="line">  Elf32_Addr	p_paddr;		<span class="comment">/* Segment physical address */</span></span><br><span class="line">  Elf32_Word	p_filesz;		<span class="comment">/* Segment size in file */</span></span><br><span class="line">  Elf32_Word	p_memsz;		<span class="comment">/* Segment size in memory */</span></span><br><span class="line">  Elf32_Word	p_flags;		<span class="comment">/* Segment flags */</span></span><br><span class="line">  Elf32_Word	p_align;		<span class="comment">/* Segment alignment */</span></span><br><span class="line">&#125; Elf32_Phdr;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  Elf64_Word	p_type;			<span class="comment">/* Segment type */</span></span><br><span class="line">  Elf64_Word	p_flags;		<span class="comment">/* Segment flags */</span></span><br><span class="line">  Elf64_Off	p_offset;		<span class="comment">/* Segment file offset */</span></span><br><span class="line">  Elf64_Addr	p_vaddr;		<span class="comment">/* Segment virtual address */</span></span><br><span class="line">  Elf64_Addr	p_paddr;		<span class="comment">/* Segment physical address */</span></span><br><span class="line">  Elf64_Xword	p_filesz;		<span class="comment">/* Segment size in file */</span></span><br><span class="line">  Elf64_Xword	p_memsz;		<span class="comment">/* Segment size in memory */</span></span><br><span class="line">  Elf64_Xword	p_align;		<span class="comment">/* Segment alignment */</span></span><br><span class="line">&#125; Elf64_Phdr;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Special value for e_phnum.  This indicates that the real number of</span></span><br><span class="line"><span class="comment">   program headers is too large to fit into e_phnum.  Instead the real</span></span><br><span class="line"><span class="comment">   value is in the field sh_info of section 0.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PN_XNUM		0xffff</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Legal values for p_type (segment type).  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	PT_NULL		0		<span class="comment">/* Program header table entry unused */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_LOAD		1		<span class="comment">/* Loadable program segment */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_DYNAMIC	2		<span class="comment">/* Dynamic linking information */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_INTERP	3		<span class="comment">/* Program interpreter */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_NOTE		4		<span class="comment">/* Auxiliary information */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_SHLIB	5		<span class="comment">/* Reserved */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_PHDR		6		<span class="comment">/* Entry for header table itself */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_TLS		7		<span class="comment">/* Thread-local storage segment */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	PT_NUM		8		<span class="comment">/* Number of defined types */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_LOOS		0x60000000	<span class="comment">/* Start of OS-specific */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_GNU_EH_FRAME	0x6474e550	<span class="comment">/* GCC .eh_frame_hdr segment */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_GNU_STACK	0x6474e551	<span class="comment">/* Indicates stack executability */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_GNU_RELRO	0x6474e552	<span class="comment">/* Read-only after relocation */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_LOSUNW	0x6ffffffa</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_SUNWBSS	0x6ffffffa	<span class="comment">/* Sun Specific segment */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_SUNWSTACK	0x6ffffffb	<span class="comment">/* Stack segment */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_HISUNW	0x6fffffff</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_HIOS		0x6fffffff	<span class="comment">/* End of OS-specific */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_LOPROC	0x70000000	<span class="comment">/* Start of processor-specific */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_HIPROC	0x7fffffff	<span class="comment">/* End of processor-specific */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Legal values for p_flags (segment flags).  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PF_X		(1 &lt;&lt; 0)	<span class="comment">/* Segment is executable */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PF_W		(1 &lt;&lt; 1)	<span class="comment">/* Segment is writable */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PF_R		(1 &lt;&lt; 2)	<span class="comment">/* Segment is readable */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PF_MASKOS	0x0ff00000	<span class="comment">/* OS-specific */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PF_MASKPROC	0xf0000000	<span class="comment">/* Processor-specific */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Legal values for note segment descriptor types for core files. */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_PRSTATUS	1		<span class="comment">/* Contains copy of prstatus struct */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_FPREGSET	2		<span class="comment">/* Contains copy of fpregset struct */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_PRPSINFO	3		<span class="comment">/* Contains copy of prpsinfo struct */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_PRXREG	4		<span class="comment">/* Contains copy of prxregset struct */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_TASKSTRUCT	4		<span class="comment">/* Contains copy of task structure */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_PLATFORM	5		<span class="comment">/* String from sysinfo(SI_PLATFORM) */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_AUXV		6		<span class="comment">/* Contains copy of auxv array */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_GWINDOWS	7		<span class="comment">/* Contains copy of gwindows struct */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_ASRS		8		<span class="comment">/* Contains copy of asrset struct */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_PSTATUS	10		<span class="comment">/* Contains copy of pstatus struct */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_PSINFO	13		<span class="comment">/* Contains copy of psinfo struct */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_PRCRED	14		<span class="comment">/* Contains copy of prcred struct */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_UTSNAME	15		<span class="comment">/* Contains copy of utsname struct */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_LWPSTATUS	16		<span class="comment">/* Contains copy of lwpstatus struct */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_LWPSINFO	17		<span class="comment">/* Contains copy of lwpinfo struct */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_PRFPXREG	20		<span class="comment">/* Contains copy of fprxregset struct */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_SIGINFO	0x53494749	<span class="comment">/* Contains copy of siginfo_t,</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   size might increase */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_FILE		0x46494c45	<span class="comment">/* Contains information about mapped</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   files */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_PRXFPREG	0x46e62b7f	<span class="comment">/* Contains copy of user_fxsr_struct */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_PPC_VMX	0x100		<span class="comment">/* PowerPC Altivec/VMX registers */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_PPC_SPE	0x101		<span class="comment">/* PowerPC SPE/EVR registers */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_PPC_VSX	0x102		<span class="comment">/* PowerPC VSX registers */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_386_TLS	0x200		<span class="comment">/* i386 TLS slots (struct user_desc) */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_386_IOPERM	0x201		<span class="comment">/* x86 io permission bitmap (1=deny) */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_X86_XSTATE	0x202		<span class="comment">/* x86 extended state using xsave */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_S390_HIGH_GPRS	0x300	<span class="comment">/* s390 upper register halves */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_S390_TIMER	0x301		<span class="comment">/* s390 timer register */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_S390_TODCMP	0x302		<span class="comment">/* s390 TOD clock comparator register */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_S390_TODPREG	0x303		<span class="comment">/* s390 TOD programmable register */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_S390_CTRS	0x304		<span class="comment">/* s390 control registers */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_S390_PREFIX	0x305		<span class="comment">/* s390 prefix register */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_S390_LAST_BREAK	0x306	<span class="comment">/* s390 breaking event address */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_S390_SYSTEM_CALL	0x307	<span class="comment">/* s390 system call restart data */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_S390_TDB	0x308		<span class="comment">/* s390 transaction diagnostic block */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_ARM_VFP	0x400		<span class="comment">/* ARM VFP/NEON registers */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_ARM_TLS	0x401		<span class="comment">/* ARM TLS register */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_ARM_HW_BREAK	0x402		<span class="comment">/* ARM hardware breakpoint registers */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_ARM_HW_WATCH	0x403		<span class="comment">/* ARM hardware watchpoint registers */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Legal values for the note segment descriptor types for object files.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_VERSION	1		<span class="comment">/* Contains a version string.  */</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Dynamic section entry.  */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  Elf32_Sword	d_tag;			<span class="comment">/* Dynamic entry type */</span></span><br><span class="line">  <span class="keyword">union</span></span><br><span class="line">    &#123;</span><br><span class="line">      Elf32_Word d_val;			<span class="comment">/* Integer value */</span></span><br><span class="line">      Elf32_Addr d_ptr;			<span class="comment">/* Address value */</span></span><br><span class="line">    &#125; d_un;</span><br><span class="line">&#125; Elf32_Dyn;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  Elf64_Sxword	d_tag;			<span class="comment">/* Dynamic entry type */</span></span><br><span class="line">  <span class="keyword">union</span></span><br><span class="line">    &#123;</span><br><span class="line">      Elf64_Xword d_val;		<span class="comment">/* Integer value */</span></span><br><span class="line">      Elf64_Addr d_ptr;			<span class="comment">/* Address value */</span></span><br><span class="line">    &#125; d_un;</span><br><span class="line">&#125; Elf64_Dyn;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Legal values for d_tag (dynamic entry type).  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_NULL		0		<span class="comment">/* Marks end of dynamic section */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_NEEDED	1		<span class="comment">/* Name of needed library */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_PLTRELSZ	2		<span class="comment">/* Size in bytes of PLT relocs */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_PLTGOT	3		<span class="comment">/* Processor defined value */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_HASH		4		<span class="comment">/* Address of symbol hash table */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_STRTAB	5		<span class="comment">/* Address of string table */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_SYMTAB	6		<span class="comment">/* Address of symbol table */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_RELA		7		<span class="comment">/* Address of Rela relocs */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_RELASZ	8		<span class="comment">/* Total size of Rela relocs */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_RELAENT	9		<span class="comment">/* Size of one Rela reloc */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_STRSZ	10		<span class="comment">/* Size of string table */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_SYMENT	11		<span class="comment">/* Size of one symbol table entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_INIT		12		<span class="comment">/* Address of init function */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_FINI		13		<span class="comment">/* Address of termination function */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_SONAME	14		<span class="comment">/* Name of shared object */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_RPATH	15		<span class="comment">/* Library search path (deprecated) */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_SYMBOLIC	16		<span class="comment">/* Start symbol search here */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_REL		17		<span class="comment">/* Address of Rel relocs */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_RELSZ	18		<span class="comment">/* Total size of Rel relocs */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_RELENT	19		<span class="comment">/* Size of one Rel reloc */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_PLTREL	20		<span class="comment">/* Type of reloc in PLT */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_DEBUG	21		<span class="comment">/* For debugging; unspecified */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_TEXTREL	22		<span class="comment">/* Reloc might modify .text */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_JMPREL	23		<span class="comment">/* Address of PLT relocs */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	DT_BIND_NOW	24		<span class="comment">/* Process relocations of object */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	DT_INIT_ARRAY	25		<span class="comment">/* Array with addresses of init fct */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	DT_FINI_ARRAY	26		<span class="comment">/* Array with addresses of fini fct */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	DT_INIT_ARRAYSZ	27		<span class="comment">/* Size in bytes of DT_INIT_ARRAY */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	DT_FINI_ARRAYSZ	28		<span class="comment">/* Size in bytes of DT_FINI_ARRAY */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_RUNPATH	29		<span class="comment">/* Library search path */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_FLAGS	30		<span class="comment">/* Flags for the object being loaded */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_ENCODING	32		<span class="comment">/* Start of encoded range */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_PREINIT_ARRAY 32		<span class="comment">/* Array with addresses of preinit fct*/</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_PREINIT_ARRAYSZ 33		<span class="comment">/* size in bytes of DT_PREINIT_ARRAY */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	DT_NUM		34		<span class="comment">/* Number used */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_LOOS		0x6000000d	<span class="comment">/* Start of OS-specific */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_HIOS		0x6ffff000	<span class="comment">/* End of OS-specific */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_LOPROC	0x70000000	<span class="comment">/* Start of processor-specific */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_HIPROC	0x7fffffff	<span class="comment">/* End of processor-specific */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	DT_PROCNUM	DT_MIPS_NUM	<span class="comment">/* Most used by any processor */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* DT_* entries which fall between DT_VALRNGHI &amp; DT_VALRNGLO use the</span></span><br><span class="line"><span class="comment">   Dyn.d_un.d_val field of the Elf*_Dyn structure.  This follows Sun's</span></span><br><span class="line"><span class="comment">   approach.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_VALRNGLO	0x6ffffd00</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_GNU_PRELINKED 0x6ffffdf5	<span class="comment">/* Prelinking timestamp */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_GNU_CONFLICTSZ 0x6ffffdf6	<span class="comment">/* Size of conflict section */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_GNU_LIBLISTSZ 0x6ffffdf7	<span class="comment">/* Size of library list */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_CHECKSUM	0x6ffffdf8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_PLTPADSZ	0x6ffffdf9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MOVEENT	0x6ffffdfa</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MOVESZ	0x6ffffdfb</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_FEATURE_1	0x6ffffdfc	<span class="comment">/* Feature selection (DTF_*).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_POSFLAG_1	0x6ffffdfd	<span class="comment">/* Flags for DT_* entries, effecting</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   the following DT_* entry.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_SYMINSZ	0x6ffffdfe	<span class="comment">/* Size of syminfo table (in bytes) */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_SYMINENT	0x6ffffdff	<span class="comment">/* Entry size of syminfo */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_VALRNGHI	0x6ffffdff</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_VALTAGIDX(tag)	(DT_VALRNGHI - (tag))	<span class="comment">/* Reverse order! */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_VALNUM 12</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* DT_* entries which fall between DT_ADDRRNGHI &amp; DT_ADDRRNGLO use the</span></span><br><span class="line"><span class="comment">   Dyn.d_un.d_ptr field of the Elf*_Dyn structure.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">   If any adjustment is made to the ELF object after it has been</span></span><br><span class="line"><span class="comment">   built these entries will need to be adjusted.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_ADDRRNGLO	0x6ffffe00</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_GNU_HASH	0x6ffffef5	<span class="comment">/* GNU-style hash table.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_TLSDESC_PLT	0x6ffffef6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_TLSDESC_GOT	0x6ffffef7</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_GNU_CONFLICT	0x6ffffef8	<span class="comment">/* Start of conflict section */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_GNU_LIBLIST	0x6ffffef9	<span class="comment">/* Library list */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_CONFIG	0x6ffffefa	<span class="comment">/* Configuration information.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_DEPAUDIT	0x6ffffefb	<span class="comment">/* Dependency auditing.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_AUDIT	0x6ffffefc	<span class="comment">/* Object auditing.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	DT_PLTPAD	0x6ffffefd	<span class="comment">/* PLT padding.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	DT_MOVETAB	0x6ffffefe	<span class="comment">/* Move table.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_SYMINFO	0x6ffffeff	<span class="comment">/* Syminfo table.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_ADDRRNGHI	0x6ffffeff</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_ADDRTAGIDX(tag)	(DT_ADDRRNGHI - (tag))	<span class="comment">/* Reverse order! */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_ADDRNUM 11</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* The versioning entry types.  The next are defined as part of the</span></span><br><span class="line"><span class="comment">   GNU extension.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_VERSYM	0x6ffffff0</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_RELACOUNT	0x6ffffff9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_RELCOUNT	0x6ffffffa</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* These were chosen by Sun.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_FLAGS_1	0x6ffffffb	<span class="comment">/* State flags, see DF_1_* below.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	DT_VERDEF	0x6ffffffc	<span class="comment">/* Address of version definition</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   table */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	DT_VERDEFNUM	0x6ffffffd	<span class="comment">/* Number of version definitions */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	DT_VERNEED	0x6ffffffe	<span class="comment">/* Address of table with needed</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   versions */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	DT_VERNEEDNUM	0x6fffffff	<span class="comment">/* Number of needed versions */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_VERSIONTAGIDX(tag)	(DT_VERNEEDNUM - (tag))	<span class="comment">/* Reverse order! */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_VERSIONTAGNUM 16</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Sun added these machine-independent extensions in the "processor-specific"</span></span><br><span class="line"><span class="comment">   range.  Be compatible.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_AUXILIARY    0x7ffffffd      <span class="comment">/* Shared object to load before self */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_FILTER       0x7fffffff      <span class="comment">/* Shared object to get values from */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_EXTRATAGIDX(tag)	((Elf32_Word)-((Elf32_Sword) (tag) <span class="meta-string">&lt;&lt;1&gt;&gt;1)-1)</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_EXTRANUM	3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Values of `d_un.d_val' in the DT_FLAGS entry.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DF_ORIGIN	0x00000001	<span class="comment">/* Object may use DF_ORIGIN */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DF_SYMBOLIC	0x00000002	<span class="comment">/* Symbol resolutions starts here */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DF_TEXTREL	0x00000004	<span class="comment">/* Object contains text relocations */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DF_BIND_NOW	0x00000008	<span class="comment">/* No lazy binding for this object */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DF_STATIC_TLS	0x00000010	<span class="comment">/* Module uses the static TLS model */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* State flags selectable in the `d_un.d_val' element of the DT_FLAGS_1</span></span><br><span class="line"><span class="comment">   entry in the dynamic section.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DF_1_NOW	0x00000001	<span class="comment">/* Set RTLD_NOW for this object.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DF_1_GLOBAL	0x00000002	<span class="comment">/* Set RTLD_GLOBAL for this object.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DF_1_GROUP	0x00000004	<span class="comment">/* Set RTLD_GROUP for this object.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DF_1_NODELETE	0x00000008	<span class="comment">/* Set RTLD_NODELETE for this object.*/</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DF_1_LOADFLTR	0x00000010	<span class="comment">/* Trigger filtee loading at runtime.*/</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DF_1_INITFIRST	0x00000020	<span class="comment">/* Set RTLD_INITFIRST for this object*/</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DF_1_NOOPEN	0x00000040	<span class="comment">/* Set RTLD_NOOPEN for this object.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DF_1_ORIGIN	0x00000080	<span class="comment">/* $ORIGIN must be handled.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DF_1_DIRECT	0x00000100	<span class="comment">/* Direct binding enabled.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DF_1_TRANS	0x00000200</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DF_1_INTERPOSE	0x00000400	<span class="comment">/* Object is used to interpose.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DF_1_NODEFLIB	0x00000800	<span class="comment">/* Ignore default lib search path.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DF_1_NODUMP	0x00001000	<span class="comment">/* Object can't be dldump'ed.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DF_1_CONFALT	0x00002000	<span class="comment">/* Configuration alternative created.*/</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DF_1_ENDFILTEE	0x00004000	<span class="comment">/* Filtee terminates filters search. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	DF_1_DISPRELDNE	0x00008000	<span class="comment">/* Disp reloc applied at build time. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	DF_1_DISPRELPND	0x00010000	<span class="comment">/* Disp reloc applied at run-time.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	DF_1_NODIRECT	0x00020000	<span class="comment">/* Object has no-direct binding. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	DF_1_IGNMULDEF	0x00040000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	DF_1_NOKSYMS	0x00080000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	DF_1_NOHDR	0x00100000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	DF_1_EDITED	0x00200000	<span class="comment">/* Object is modified after built.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	DF_1_NORELOC	0x00400000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	DF_1_SYMINTPOSE	0x00800000	<span class="comment">/* Object has individual interposers.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	DF_1_GLOBAUDIT	0x01000000	<span class="comment">/* Global auditing required.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	DF_1_SINGLETON	0x02000000	<span class="comment">/* Singleton symbols are used.  */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Flags for the feature selection in DT_FEATURE_1.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DTF_1_PARINIT	0x00000001</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DTF_1_CONFEXP	0x00000002</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Flags in the DT_POSFLAG_1 entry effecting only the next DT_* entry.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DF_P1_LAZYLOAD	0x00000001	<span class="comment">/* Lazyload following object.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DF_P1_GROUPPERM	0x00000002	<span class="comment">/* Symbols from next object are not</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   generally available.  */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Version definition sections.  */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  Elf32_Half	vd_version;		<span class="comment">/* Version revision */</span></span><br><span class="line">  Elf32_Half	vd_flags;		<span class="comment">/* Version information */</span></span><br><span class="line">  Elf32_Half	vd_ndx;			<span class="comment">/* Version Index */</span></span><br><span class="line">  Elf32_Half	vd_cnt;			<span class="comment">/* Number of associated aux entries */</span></span><br><span class="line">  Elf32_Word	vd_hash;		<span class="comment">/* Version name hash value */</span></span><br><span class="line">  Elf32_Word	vd_aux;			<span class="comment">/* Offset in bytes to verdaux array */</span></span><br><span class="line">  Elf32_Word	vd_next;		<span class="comment">/* Offset in bytes to next verdef</span></span><br><span class="line"><span class="comment">					   entry */</span></span><br><span class="line">&#125; Elf32_Verdef;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  Elf64_Half	vd_version;		<span class="comment">/* Version revision */</span></span><br><span class="line">  Elf64_Half	vd_flags;		<span class="comment">/* Version information */</span></span><br><span class="line">  Elf64_Half	vd_ndx;			<span class="comment">/* Version Index */</span></span><br><span class="line">  Elf64_Half	vd_cnt;			<span class="comment">/* Number of associated aux entries */</span></span><br><span class="line">  Elf64_Word	vd_hash;		<span class="comment">/* Version name hash value */</span></span><br><span class="line">  Elf64_Word	vd_aux;			<span class="comment">/* Offset in bytes to verdaux array */</span></span><br><span class="line">  Elf64_Word	vd_next;		<span class="comment">/* Offset in bytes to next verdef</span></span><br><span class="line"><span class="comment">					   entry */</span></span><br><span class="line">&#125; Elf64_Verdef;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Legal values for vd_version (version revision).  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> VER_DEF_NONE	0		<span class="comment">/* No version */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> VER_DEF_CURRENT	1		<span class="comment">/* Current version */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> VER_DEF_NUM	2		<span class="comment">/* Given version number */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Legal values for vd_flags (version information flags).  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> VER_FLG_BASE	0x1		<span class="comment">/* Version definition of file itself */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> VER_FLG_WEAK	0x2		<span class="comment">/* Weak version identifier */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Versym symbol index values.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	VER_NDX_LOCAL		0	<span class="comment">/* Symbol is local.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	VER_NDX_GLOBAL		1	<span class="comment">/* Symbol is global.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	VER_NDX_LORESERVE	0xff00	<span class="comment">/* Beginning of reserved entries.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	VER_NDX_ELIMINATE	0xff01	<span class="comment">/* Symbol is to be eliminated.  */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Auxialiary version information.  */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  Elf32_Word	vda_name;		<span class="comment">/* Version or dependency names */</span></span><br><span class="line">  Elf32_Word	vda_next;		<span class="comment">/* Offset in bytes to next verdaux</span></span><br><span class="line"><span class="comment">					   entry */</span></span><br><span class="line">&#125; Elf32_Verdaux;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  Elf64_Word	vda_name;		<span class="comment">/* Version or dependency names */</span></span><br><span class="line">  Elf64_Word	vda_next;		<span class="comment">/* Offset in bytes to next verdaux</span></span><br><span class="line"><span class="comment">					   entry */</span></span><br><span class="line">&#125; Elf64_Verdaux;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Version dependency section.  */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  Elf32_Half	vn_version;		<span class="comment">/* Version of structure */</span></span><br><span class="line">  Elf32_Half	vn_cnt;			<span class="comment">/* Number of associated aux entries */</span></span><br><span class="line">  Elf32_Word	vn_file;		<span class="comment">/* Offset of filename for this</span></span><br><span class="line"><span class="comment">					   dependency */</span></span><br><span class="line">  Elf32_Word	vn_aux;			<span class="comment">/* Offset in bytes to vernaux array */</span></span><br><span class="line">  Elf32_Word	vn_next;		<span class="comment">/* Offset in bytes to next verneed</span></span><br><span class="line"><span class="comment">					   entry */</span></span><br><span class="line">&#125; Elf32_Verneed;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  Elf64_Half	vn_version;		<span class="comment">/* Version of structure */</span></span><br><span class="line">  Elf64_Half	vn_cnt;			<span class="comment">/* Number of associated aux entries */</span></span><br><span class="line">  Elf64_Word	vn_file;		<span class="comment">/* Offset of filename for this</span></span><br><span class="line"><span class="comment">					   dependency */</span></span><br><span class="line">  Elf64_Word	vn_aux;			<span class="comment">/* Offset in bytes to vernaux array */</span></span><br><span class="line">  Elf64_Word	vn_next;		<span class="comment">/* Offset in bytes to next verneed</span></span><br><span class="line"><span class="comment">					   entry */</span></span><br><span class="line">&#125; Elf64_Verneed;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Legal values for vn_version (version revision).  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> VER_NEED_NONE	 0		<span class="comment">/* No version */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> VER_NEED_CURRENT 1		<span class="comment">/* Current version */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> VER_NEED_NUM	 2		<span class="comment">/* Given version number */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Auxiliary needed version information.  */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  Elf32_Word	vna_hash;		<span class="comment">/* Hash value of dependency name */</span></span><br><span class="line">  Elf32_Half	vna_flags;		<span class="comment">/* Dependency specific information */</span></span><br><span class="line">  Elf32_Half	vna_other;		<span class="comment">/* Unused */</span></span><br><span class="line">  Elf32_Word	vna_name;		<span class="comment">/* Dependency name string offset */</span></span><br><span class="line">  Elf32_Word	vna_next;		<span class="comment">/* Offset in bytes to next vernaux</span></span><br><span class="line"><span class="comment">					   entry */</span></span><br><span class="line">&#125; Elf32_Vernaux;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  Elf64_Word	vna_hash;		<span class="comment">/* Hash value of dependency name */</span></span><br><span class="line">  Elf64_Half	vna_flags;		<span class="comment">/* Dependency specific information */</span></span><br><span class="line">  Elf64_Half	vna_other;		<span class="comment">/* Unused */</span></span><br><span class="line">  Elf64_Word	vna_name;		<span class="comment">/* Dependency name string offset */</span></span><br><span class="line">  Elf64_Word	vna_next;		<span class="comment">/* Offset in bytes to next vernaux</span></span><br><span class="line"><span class="comment">					   entry */</span></span><br><span class="line">&#125; Elf64_Vernaux;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Legal values for vna_flags.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> VER_FLG_WEAK	0x2		<span class="comment">/* Weak version identifier */</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Auxiliary vector.  */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* This vector is normally only used by the program interpreter.  The</span></span><br><span class="line"><span class="comment">   usual definition in an ABI supplement uses the name auxv_t.  The</span></span><br><span class="line"><span class="comment">   vector is not usually defined in a standard &lt;elf.h&gt; file, but it</span></span><br><span class="line"><span class="comment">   can't hurt.  We rename it to avoid conflicts.  The sizes of these</span></span><br><span class="line"><span class="comment">   types are an arrangement between the exec server and the program</span></span><br><span class="line"><span class="comment">   interpreter, so we don't fully specify them here.  */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="keyword">uint32_t</span> a_type;		<span class="comment">/* Entry type */</span></span><br><span class="line">  <span class="keyword">union</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">uint32_t</span> a_val;		<span class="comment">/* Integer value */</span></span><br><span class="line">      <span class="comment">/* We use to have pointer elements added here.  We cannot do that,</span></span><br><span class="line"><span class="comment">	 though, since it does not work when using 32-bit definitions</span></span><br><span class="line"><span class="comment">	 on 64-bit platforms and vice versa.  */</span></span><br><span class="line">    &#125; a_un;</span><br><span class="line">&#125; Elf32_auxv_t;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="keyword">uint64_t</span> a_type;		<span class="comment">/* Entry type */</span></span><br><span class="line">  <span class="keyword">union</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">uint64_t</span> a_val;		<span class="comment">/* Integer value */</span></span><br><span class="line">      <span class="comment">/* We use to have pointer elements added here.  We cannot do that,</span></span><br><span class="line"><span class="comment">	 though, since it does not work when using 32-bit definitions</span></span><br><span class="line"><span class="comment">	 on 64-bit platforms and vice versa.  */</span></span><br><span class="line">    &#125; a_un;</span><br><span class="line">&#125; Elf64_auxv_t;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/auxv.h&gt;</span></span></span><br><span class="line"><span class="comment">/* Note section contents.  Each entry in the note section begins with</span></span><br><span class="line"><span class="comment">   a header of a fixed form.  */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  Elf32_Word n_namesz;			<span class="comment">/* Length of the note's name.  */</span></span><br><span class="line">  Elf32_Word n_descsz;			<span class="comment">/* Length of the note's descriptor.  */</span></span><br><span class="line">  Elf32_Word n_type;			<span class="comment">/* Type of the note.  */</span></span><br><span class="line">&#125; Elf32_Nhdr;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  Elf64_Word n_namesz;			<span class="comment">/* Length of the note's name.  */</span></span><br><span class="line">  Elf64_Word n_descsz;			<span class="comment">/* Length of the note's descriptor.  */</span></span><br><span class="line">  Elf64_Word n_type;			<span class="comment">/* Type of the note.  */</span></span><br><span class="line">&#125; Elf64_Nhdr;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Known names of notes.  */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Solaris entries in the note section have this name.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF_NOTE_SOLARIS	<span class="meta-string">"SUNW Solaris"</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Note entries for GNU systems have this name.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF_NOTE_GNU		<span class="meta-string">"GNU"</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Defined types of notes for Solaris.  */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Value of descriptor (one word) is desired pagesize for the binary.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF_NOTE_PAGESIZE_HINT	1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Defined note types for GNU systems.  */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* ABI information.  The descriptor consists of words:</span></span><br><span class="line"><span class="comment">   word 0: OS descriptor</span></span><br><span class="line"><span class="comment">   word 1: major version of the ABI</span></span><br><span class="line"><span class="comment">   word 2: minor version of the ABI</span></span><br><span class="line"><span class="comment">   word 3: subminor version of the ABI</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_GNU_ABI_TAG	1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF_NOTE_ABI	NT_GNU_ABI_TAG <span class="comment">/* Old name.  */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Known OSes.  These values can appear in word 0 of an</span></span><br><span class="line"><span class="comment">   NT_GNU_ABI_TAG note section entry.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF_NOTE_OS_LINUX	0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF_NOTE_OS_GNU		1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF_NOTE_OS_SOLARIS2	2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF_NOTE_OS_FREEBSD	3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Synthetic hwcap information.  The descriptor begins with two words:</span></span><br><span class="line"><span class="comment">   word 0: number of entries</span></span><br><span class="line"><span class="comment">   word 1: bitmask of enabled entries</span></span><br><span class="line"><span class="comment">   Then follow variable-length entries, one byte followed by a</span></span><br><span class="line"><span class="comment">   '\0'-terminated hwcap name string.  The byte gives the bit</span></span><br><span class="line"><span class="comment">   number to test if enabled, (1U &lt;&lt; bit) &amp; bitmask.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_GNU_HWCAP	2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Build ID bits as generated by ld --build-id.</span></span><br><span class="line"><span class="comment">   The descriptor consists of any nonzero number of bytes.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_GNU_BUILD_ID	3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Version note generated by GNU gold containing a version string.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NT_GNU_GOLD_VERSION	4</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Move records.  */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  Elf32_Xword m_value;		<span class="comment">/* Symbol value.  */</span></span><br><span class="line">  Elf32_Word m_info;		<span class="comment">/* Size and index.  */</span></span><br><span class="line">  Elf32_Word m_poffset;		<span class="comment">/* Symbol offset.  */</span></span><br><span class="line">  Elf32_Half m_repeat;		<span class="comment">/* Repeat count.  */</span></span><br><span class="line">  Elf32_Half m_stride;		<span class="comment">/* Stride info.  */</span></span><br><span class="line">&#125; Elf32_Move;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  Elf64_Xword m_value;		<span class="comment">/* Symbol value.  */</span></span><br><span class="line">  Elf64_Xword m_info;		<span class="comment">/* Size and index.  */</span></span><br><span class="line">  Elf64_Xword m_poffset;	<span class="comment">/* Symbol offset.  */</span></span><br><span class="line">  Elf64_Half m_repeat;		<span class="comment">/* Repeat count.  */</span></span><br><span class="line">  Elf64_Half m_stride;		<span class="comment">/* Stride info.  */</span></span><br><span class="line">&#125; Elf64_Move;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Macro to construct move records.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF32_M_SYM(info)	((info) &gt;&gt; 8)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF32_M_SIZE(info)	((unsigned char) (info))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF32_M_INFO(sym, size)	(((sym) &lt;&lt; 8) + (unsigned char) (size))</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF64_M_SYM(info)	ELF32_M_SYM (info)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF64_M_SIZE(info)	ELF32_M_SIZE (info)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF64_M_INFO(sym, size)	ELF32_M_INFO (sym, size)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Motorola 68k specific definitions.  */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Values for Elf32_Ehdr.e_flags.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_CPU32	0x00810000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* m68k relocs.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_NONE	0		<span class="comment">/* No reloc */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_32	1		<span class="comment">/* Direct 32 bit  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_16	2		<span class="comment">/* Direct 16 bit  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_8		3		<span class="comment">/* Direct 8 bit  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_PC32	4		<span class="comment">/* PC relative 32 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_PC16	5		<span class="comment">/* PC relative 16 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_PC8	6		<span class="comment">/* PC relative 8 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_GOT32	7		<span class="comment">/* 32 bit PC relative GOT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_GOT16	8		<span class="comment">/* 16 bit PC relative GOT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_GOT8	9		<span class="comment">/* 8 bit PC relative GOT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_GOT32O	10		<span class="comment">/* 32 bit GOT offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_GOT16O	11		<span class="comment">/* 16 bit GOT offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_GOT8O	12		<span class="comment">/* 8 bit GOT offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_PLT32	13		<span class="comment">/* 32 bit PC relative PLT address */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_PLT16	14		<span class="comment">/* 16 bit PC relative PLT address */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_PLT8	15		<span class="comment">/* 8 bit PC relative PLT address */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_PLT32O	16		<span class="comment">/* 32 bit PLT offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_PLT16O	17		<span class="comment">/* 16 bit PLT offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_PLT8O	18		<span class="comment">/* 8 bit PLT offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_COPY	19		<span class="comment">/* Copy symbol at runtime */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_GLOB_DAT	20		<span class="comment">/* Create GOT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_JMP_SLOT	21		<span class="comment">/* Create PLT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_RELATIVE	22		<span class="comment">/* Adjust by program base */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_TLS_GD32      25          <span class="comment">/* 32 bit GOT offset for GD */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_TLS_GD16      26          <span class="comment">/* 16 bit GOT offset for GD */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_TLS_GD8       27          <span class="comment">/* 8 bit GOT offset for GD */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_TLS_LDM32     28          <span class="comment">/* 32 bit GOT offset for LDM */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_TLS_LDM16     29          <span class="comment">/* 16 bit GOT offset for LDM */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_TLS_LDM8      30          <span class="comment">/* 8 bit GOT offset for LDM */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_TLS_LDO32     31          <span class="comment">/* 32 bit module-relative offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_TLS_LDO16     32          <span class="comment">/* 16 bit module-relative offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_TLS_LDO8      33          <span class="comment">/* 8 bit module-relative offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_TLS_IE32      34          <span class="comment">/* 32 bit GOT offset for IE */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_TLS_IE16      35          <span class="comment">/* 16 bit GOT offset for IE */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_TLS_IE8       36          <span class="comment">/* 8 bit GOT offset for IE */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_TLS_LE32      37          <span class="comment">/* 32 bit offset relative to</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   static TLS block */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_TLS_LE16      38          <span class="comment">/* 16 bit offset relative to</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   static TLS block */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_TLS_LE8       39          <span class="comment">/* 8 bit offset relative to</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   static TLS block */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_TLS_DTPMOD32  40          <span class="comment">/* 32 bit module number */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_TLS_DTPREL32  41          <span class="comment">/* 32 bit module-relative offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_TLS_TPREL32   42          <span class="comment">/* 32 bit TP-relative offset */</span></span></span><br><span class="line"><span class="comment">/* Keep this the last entry.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_68K_NUM	43</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Intel 80386 specific definitions.  */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* i386 relocs.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_NONE	   0		<span class="comment">/* No reloc */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_32	   1		<span class="comment">/* Direct 32 bit  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_PC32	   2		<span class="comment">/* PC relative 32 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_GOT32	   3		<span class="comment">/* 32 bit GOT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_PLT32	   4		<span class="comment">/* 32 bit PLT address */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_COPY	   5		<span class="comment">/* Copy symbol at runtime */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_GLOB_DAT	   6		<span class="comment">/* Create GOT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_JMP_SLOT	   7		<span class="comment">/* Create PLT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_RELATIVE	   8		<span class="comment">/* Adjust by program base */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_GOTOFF	   9		<span class="comment">/* 32 bit offset to GOT */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_GOTPC	   10		<span class="comment">/* 32 bit PC relative offset to GOT */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_32PLT	   11</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_TLS_TPOFF	   14		<span class="comment">/* Offset in static TLS block */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_TLS_IE	   15		<span class="comment">/* Address of GOT entry for static TLS</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   block offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_TLS_GOTIE	   16		<span class="comment">/* GOT entry for static TLS block</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_TLS_LE	   17		<span class="comment">/* Offset relative to static TLS</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   block */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_TLS_GD	   18		<span class="comment">/* Direct 32 bit for GNU version of</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   general dynamic thread local data */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_TLS_LDM	   19		<span class="comment">/* Direct 32 bit for GNU version of</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   local dynamic thread local data</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   in LE code */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_16	   20</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_PC16	   21</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_8		   22</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_PC8	   23</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_TLS_GD_32	   24		<span class="comment">/* Direct 32 bit for general dynamic</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   thread local data */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_TLS_GD_PUSH  25		<span class="comment">/* Tag for pushl in GD TLS code */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_TLS_GD_CALL  26		<span class="comment">/* Relocation for call to</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   __tls_get_addr() */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_TLS_GD_POP   27		<span class="comment">/* Tag for popl in GD TLS code */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_TLS_LDM_32   28		<span class="comment">/* Direct 32 bit for local dynamic</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   thread local data in LE code */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_TLS_LDM_PUSH 29		<span class="comment">/* Tag for pushl in LDM TLS code */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_TLS_LDM_CALL 30		<span class="comment">/* Relocation for call to</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   __tls_get_addr() in LDM code */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_TLS_LDM_POP  31		<span class="comment">/* Tag for popl in LDM TLS code */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_TLS_LDO_32   32		<span class="comment">/* Offset relative to TLS block */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_TLS_IE_32	   33		<span class="comment">/* GOT entry for negated static TLS</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   block offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_TLS_LE_32	   34		<span class="comment">/* Negated offset relative to static</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   TLS block */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_TLS_DTPMOD32 35		<span class="comment">/* ID of module containing symbol */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_TLS_DTPOFF32 36		<span class="comment">/* Offset in TLS block */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_TLS_TPOFF32  37		<span class="comment">/* Negated offset in static TLS block */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_SIZE32	   38 		<span class="comment">/* 32-bit symbol size */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_TLS_GOTDESC  39		<span class="comment">/* GOT offset for TLS descriptor.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_TLS_DESC_CALL 40		<span class="comment">/* Marker of call through TLS</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   descriptor for</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   relaxation.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_TLS_DESC     41		<span class="comment">/* TLS descriptor containing</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   pointer to code and to</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   argument, returning the TLS</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   offset for the symbol.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_IRELATIVE	   42		<span class="comment">/* Adjust indirectly by program base */</span></span></span><br><span class="line"><span class="comment">/* Keep this the last entry.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_386_NUM	   43</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* SUN SPARC specific definitions.  */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Legal values for ST_TYPE subfield of st_info (symbol type).  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STT_SPARC_REGISTER	13	<span class="comment">/* Global register reserved to app. */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Values for Elf64_Ehdr.e_flags.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_SPARCV9_MM		3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_SPARCV9_TSO		0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_SPARCV9_PSO		1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_SPARCV9_RMO		2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_SPARC_LEDATA		0x800000 <span class="comment">/* little endian data */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_SPARC_EXT_MASK	0xFFFF00</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_SPARC_32PLUS		0x000100 <span class="comment">/* generic V8+ features */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_SPARC_SUN_US1	0x000200 <span class="comment">/* Sun UltraSPARC1 extensions */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_SPARC_HAL_R1		0x000400 <span class="comment">/* HAL R1 extensions */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_SPARC_SUN_US3	0x000800 <span class="comment">/* Sun UltraSPARCIII extensions */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* SPARC relocs.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_NONE		0	<span class="comment">/* No reloc */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_8		1	<span class="comment">/* Direct 8 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_16		2	<span class="comment">/* Direct 16 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_32		3	<span class="comment">/* Direct 32 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_DISP8		4	<span class="comment">/* PC relative 8 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_DISP16		5	<span class="comment">/* PC relative 16 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_DISP32		6	<span class="comment">/* PC relative 32 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_WDISP30		7	<span class="comment">/* PC relative 30 bit shifted */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_WDISP22		8	<span class="comment">/* PC relative 22 bit shifted */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_HI22		9	<span class="comment">/* High 22 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_22		10	<span class="comment">/* Direct 22 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_13		11	<span class="comment">/* Direct 13 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_LO10		12	<span class="comment">/* Truncated 10 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_GOT10		13	<span class="comment">/* Truncated 10 bit GOT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_GOT13		14	<span class="comment">/* 13 bit GOT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_GOT22		15	<span class="comment">/* 22 bit GOT entry shifted */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_PC10		16	<span class="comment">/* PC relative 10 bit truncated */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_PC22		17	<span class="comment">/* PC relative 22 bit shifted */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_WPLT30		18	<span class="comment">/* 30 bit PC relative PLT address */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_COPY		19	<span class="comment">/* Copy symbol at runtime */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_GLOB_DAT	20	<span class="comment">/* Create GOT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_JMP_SLOT	21	<span class="comment">/* Create PLT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_RELATIVE	22	<span class="comment">/* Adjust by program base */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_UA32		23	<span class="comment">/* Direct 32 bit unaligned */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Additional Sparc64 relocs.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_PLT32		24	<span class="comment">/* Direct 32 bit ref to PLT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_HIPLT22		25	<span class="comment">/* High 22 bit PLT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_LOPLT10		26	<span class="comment">/* Truncated 10 bit PLT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_PCPLT32		27	<span class="comment">/* PC rel 32 bit ref to PLT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_PCPLT22		28	<span class="comment">/* PC rel high 22 bit PLT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_PCPLT10		29	<span class="comment">/* PC rel trunc 10 bit PLT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_10		30	<span class="comment">/* Direct 10 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_11		31	<span class="comment">/* Direct 11 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_64		32	<span class="comment">/* Direct 64 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_OLO10		33	<span class="comment">/* 10bit with secondary 13bit addend */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_HH22		34	<span class="comment">/* Top 22 bits of direct 64 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_HM10		35	<span class="comment">/* High middle 10 bits of ... */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_LM22		36	<span class="comment">/* Low middle 22 bits of ... */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_PC_HH22		37	<span class="comment">/* Top 22 bits of pc rel 64 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_PC_HM10		38	<span class="comment">/* High middle 10 bit of ... */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_PC_LM22		39	<span class="comment">/* Low miggle 22 bits of ... */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_WDISP16		40	<span class="comment">/* PC relative 16 bit shifted */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_WDISP19		41	<span class="comment">/* PC relative 19 bit shifted */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_GLOB_JMP	42	<span class="comment">/* was part of v9 ABI but was removed */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_7		43	<span class="comment">/* Direct 7 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_5		44	<span class="comment">/* Direct 5 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_6		45	<span class="comment">/* Direct 6 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_DISP64		46	<span class="comment">/* PC relative 64 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_PLT64		47	<span class="comment">/* Direct 64 bit ref to PLT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_HIX22		48	<span class="comment">/* High 22 bit complemented */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_LOX10		49	<span class="comment">/* Truncated 11 bit complemented */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_H44		50	<span class="comment">/* Direct high 12 of 44 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_M44		51	<span class="comment">/* Direct mid 22 of 44 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_L44		52	<span class="comment">/* Direct low 10 of 44 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_REGISTER	53	<span class="comment">/* Global register usage */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_UA64		54	<span class="comment">/* Direct 64 bit unaligned */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_UA16		55	<span class="comment">/* Direct 16 bit unaligned */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_TLS_GD_HI22	56</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_TLS_GD_LO10	57</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_TLS_GD_ADD	58</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_TLS_GD_CALL	59</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_TLS_LDM_HI22	60</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_TLS_LDM_LO10	61</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_TLS_LDM_ADD	62</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_TLS_LDM_CALL	63</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_TLS_LDO_HIX22	64</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_TLS_LDO_LOX10	65</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_TLS_LDO_ADD	66</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_TLS_IE_HI22	67</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_TLS_IE_LO10	68</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_TLS_IE_LD	69</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_TLS_IE_LDX	70</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_TLS_IE_ADD	71</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_TLS_LE_HIX22	72</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_TLS_LE_LOX10	73</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_TLS_DTPMOD32	74</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_TLS_DTPMOD64	75</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_TLS_DTPOFF32	76</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_TLS_DTPOFF64	77</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_TLS_TPOFF32	78</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_TLS_TPOFF64	79</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_GOTDATA_HIX22	80</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_GOTDATA_LOX10	81</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_GOTDATA_OP_HIX22	82</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_GOTDATA_OP_LOX10	83</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_GOTDATA_OP	84</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_H34		85</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_SIZE32		86</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_SIZE64		87</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_WDISP10		88</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_JMP_IREL	248</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_IRELATIVE	249</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_GNU_VTINHERIT	250</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_GNU_VTENTRY	251</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_REV32		252</span></span><br><span class="line"><span class="comment">/* Keep this the last entry.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_SPARC_NUM		253</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* For Sparc64, legal values for d_tag of Elf64_Dyn.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_SPARC_REGISTER	0x70000001</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_SPARC_NUM		2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* MIPS R3000 specific definitions.  */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Legal values for e_flags field of Elf32_Ehdr.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_MIPS_NOREORDER	1     <span class="comment">/* A .noreorder directive was used.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_MIPS_PIC		2     <span class="comment">/* Contains PIC code.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_MIPS_CPIC		4     <span class="comment">/* Uses PIC calling sequence.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_MIPS_XGOT		8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_MIPS_64BIT_WHIRL	16</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_MIPS_ABI2		32</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_MIPS_ABI_ON32	64</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_MIPS_FP64		512  <span class="comment">/* Uses FP64 (12 callee-saved).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_MIPS_NAN2008	1024  <span class="comment">/* Uses IEEE 754-2008 NaN encoding.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_MIPS_ARCH		0xf0000000 <span class="comment">/* MIPS architecture level.  */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Legal values for MIPS architecture level.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_MIPS_ARCH_1		0x00000000 <span class="comment">/* -mips1 code.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_MIPS_ARCH_2		0x10000000 <span class="comment">/* -mips2 code.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_MIPS_ARCH_3		0x20000000 <span class="comment">/* -mips3 code.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_MIPS_ARCH_4		0x30000000 <span class="comment">/* -mips4 code.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_MIPS_ARCH_5		0x40000000 <span class="comment">/* -mips5 code.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_MIPS_ARCH_32		0x50000000 <span class="comment">/* MIPS32 code.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_MIPS_ARCH_64		0x60000000 <span class="comment">/* MIPS64 code.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_MIPS_ARCH_32R2	0x70000000 <span class="comment">/* MIPS32r2 code.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_MIPS_ARCH_64R2	0x80000000 <span class="comment">/* MIPS64r2 code.  */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* The following are unofficial names and should not be used.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> E_MIPS_ARCH_1		EF_MIPS_ARCH_1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> E_MIPS_ARCH_2		EF_MIPS_ARCH_2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> E_MIPS_ARCH_3		EF_MIPS_ARCH_3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> E_MIPS_ARCH_4		EF_MIPS_ARCH_4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> E_MIPS_ARCH_5		EF_MIPS_ARCH_5</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> E_MIPS_ARCH_32		EF_MIPS_ARCH_32</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> E_MIPS_ARCH_64		EF_MIPS_ARCH_64</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Special section indices.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHN_MIPS_ACOMMON	0xff00	<span class="comment">/* Allocated common symbols.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHN_MIPS_TEXT		0xff01	<span class="comment">/* Allocated test symbols.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHN_MIPS_DATA		0xff02	<span class="comment">/* Allocated data symbols.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHN_MIPS_SCOMMON 	0xff03	<span class="comment">/* Small common symbols.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHN_MIPS_SUNDEFINED	0xff04	<span class="comment">/* Small undefined symbols.  */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Legal values for sh_type field of Elf32_Shdr.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_MIPS_LIBLIST	0x70000000 <span class="comment">/* Shared objects used in link.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_MIPS_MSYM		0x70000001</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_MIPS_CONFLICT	0x70000002 <span class="comment">/* Conflicting symbols.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_MIPS_GPTAB		0x70000003 <span class="comment">/* Global data area sizes.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_MIPS_UCODE		0x70000004 <span class="comment">/* Reserved for SGI/MIPS compilers */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_MIPS_DEBUG		0x70000005 <span class="comment">/* MIPS ECOFF debugging info.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_MIPS_REGINFO	0x70000006 <span class="comment">/* Register usage information.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_MIPS_PACKAGE	0x70000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_MIPS_PACKSYM	0x70000008</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_MIPS_RELD		0x70000009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_MIPS_IFACE		0x7000000b</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_MIPS_CONTENT	0x7000000c</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_MIPS_OPTIONS	0x7000000d <span class="comment">/* Miscellaneous options.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_MIPS_SHDR		0x70000010</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_MIPS_FDESC		0x70000011</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_MIPS_EXTSYM		0x70000012</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_MIPS_DENSE		0x70000013</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_MIPS_PDESC		0x70000014</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_MIPS_LOCSYM		0x70000015</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_MIPS_AUXSYM		0x70000016</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_MIPS_OPTSYM		0x70000017</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_MIPS_LOCSTR		0x70000018</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_MIPS_LINE		0x70000019</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_MIPS_RFDESC		0x7000001a</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_MIPS_DELTASYM	0x7000001b</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_MIPS_DELTAINST	0x7000001c</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_MIPS_DELTACLASS	0x7000001d</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_MIPS_DWARF		0x7000001e <span class="comment">/* DWARF debugging information.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_MIPS_DELTADECL	0x7000001f</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_MIPS_SYMBOL_LIB	0x70000020</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_MIPS_EVENTS		0x70000021 <span class="comment">/* Event section.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_MIPS_TRANSLATE	0x70000022</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_MIPS_PIXIE		0x70000023</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_MIPS_XLATE		0x70000024</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_MIPS_XLATE_DEBUG	0x70000025</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_MIPS_WHIRL		0x70000026</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_MIPS_EH_REGION	0x70000027</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_MIPS_XLATE_OLD	0x70000028</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_MIPS_PDR_EXCEPTION	0x70000029</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Legal values for sh_flags field of Elf32_Shdr.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_MIPS_GPREL		0x10000000 <span class="comment">/* Must be in global data area.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_MIPS_MERGE		0x20000000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_MIPS_ADDR		0x40000000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_MIPS_STRINGS	0x80000000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_MIPS_NOSTRIP	0x08000000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_MIPS_LOCAL		0x04000000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_MIPS_NAMES		0x02000000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_MIPS_NODUPE		0x01000000</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Symbol tables.  */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* MIPS specific values for `st_other'.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STO_MIPS_DEFAULT		0x0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STO_MIPS_INTERNAL		0x1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STO_MIPS_HIDDEN			0x2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STO_MIPS_PROTECTED		0x3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STO_MIPS_PLT			0x8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STO_MIPS_SC_ALIGN_UNUSED	0xff</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* MIPS specific values for `st_info'.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STB_MIPS_SPLIT_COMMON		13</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Entries found in sections of type SHT_MIPS_GPTAB.  */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">union</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">    &#123;</span></span><br><span class="line">      Elf32_Word gt_current_g_value;	<span class="comment">/* -G value used for compilation.  */</span></span><br><span class="line">      Elf32_Word gt_unused;		<span class="comment">/* Not used.  */</span></span><br><span class="line">    &#125; gt_header;			<span class="comment">/* First entry in section.  */</span></span><br><span class="line">  <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">    &#123;</span></span><br><span class="line">      Elf32_Word gt_g_value;		<span class="comment">/* If this value were used for -G.  */</span></span><br><span class="line">      Elf32_Word gt_bytes;		<span class="comment">/* This many bytes would be used.  */</span></span><br><span class="line">    &#125; gt_entry;				<span class="comment">/* Subsequent entries in section.  */</span></span><br><span class="line">&#125; Elf32_gptab;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Entry found in sections of type SHT_MIPS_REGINFO.  */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  Elf32_Word ri_gprmask;		<span class="comment">/* General registers used.  */</span></span><br><span class="line">  Elf32_Word ri_cprmask[<span class="number">4</span>];		<span class="comment">/* Coprocessor registers used.  */</span></span><br><span class="line">  Elf32_Sword ri_gp_value;		<span class="comment">/* $gp register value.  */</span></span><br><span class="line">&#125; Elf32_RegInfo;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Entries found in sections of type SHT_MIPS_OPTIONS.  */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">char</span> kind;		<span class="comment">/* Determines interpretation of the</span></span><br><span class="line"><span class="comment">				   variable part of descriptor.  */</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">char</span> size;		<span class="comment">/* Size of descriptor, including header.  */</span></span><br><span class="line">  Elf32_Section section;	<span class="comment">/* Section header index of section affected,</span></span><br><span class="line"><span class="comment">				   0 for global options.  */</span></span><br><span class="line">  Elf32_Word info;		<span class="comment">/* Kind-specific information.  */</span></span><br><span class="line">&#125; Elf_Options;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Values for `kind' field in Elf_Options.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ODK_NULL	0	<span class="comment">/* Undefined.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ODK_REGINFO	1	<span class="comment">/* Register usage information.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ODK_EXCEPTIONS	2	<span class="comment">/* Exception processing options.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ODK_PAD		3	<span class="comment">/* Section padding options.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ODK_HWPATCH	4	<span class="comment">/* Hardware workarounds performed */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ODK_FILL	5	<span class="comment">/* record the fill value used by the linker. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ODK_TAGS	6	<span class="comment">/* reserve space for desktop tools to write. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ODK_HWAND	7	<span class="comment">/* HW workarounds.  'AND' bits when merging. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ODK_HWOR	8	<span class="comment">/* HW workarounds.  'OR' bits when merging.  */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Values for `info' in Elf_Options for ODK_EXCEPTIONS entries.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OEX_FPU_MIN	0x1f	<span class="comment">/* FPE's which MUST be enabled.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OEX_FPU_MAX	0x1f00	<span class="comment">/* FPE's which MAY be enabled.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OEX_PAGE0	0x10000	<span class="comment">/* page zero must be mapped.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OEX_SMM		0x20000	<span class="comment">/* Force sequential memory mode?  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OEX_FPDBUG	0x40000	<span class="comment">/* Force floating point debug mode?  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OEX_PRECISEFP	OEX_FPDBUG</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OEX_DISMISS	0x80000	<span class="comment">/* Dismiss invalid address faults?  */</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OEX_FPU_INVAL	0x10</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OEX_FPU_DIV0	0x08</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OEX_FPU_OFLO	0x04</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OEX_FPU_UFLO	0x02</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OEX_FPU_INEX	0x01</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Masks for `info' in Elf_Options for an ODK_HWPATCH entry.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OHW_R4KEOP	0x1	<span class="comment">/* R4000 end-of-page patch.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OHW_R8KPFETCH	0x2	<span class="comment">/* may need R8000 prefetch patch.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OHW_R5KEOP	0x4	<span class="comment">/* R5000 end-of-page patch.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OHW_R5KCVTL	0x8	<span class="comment">/* R5000 cvt.[ds].l bug.  clean=1.  */</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OPAD_PREFIX	0x1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OPAD_POSTFIX	0x2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OPAD_SYMBOL	0x4</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Entry found in `.options' section.  */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  Elf32_Word hwp_flags1;	<span class="comment">/* Extra flags.  */</span></span><br><span class="line">  Elf32_Word hwp_flags2;	<span class="comment">/* Extra flags.  */</span></span><br><span class="line">&#125; Elf_Options_Hw;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Masks for `info' in ElfOptions for ODK_HWAND and ODK_HWOR entries.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OHWA0_R4KEOP_CHECKED	0x00000001</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OHWA1_R4KEOP_CLEAN	0x00000002</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* MIPS relocs.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_NONE		0	<span class="comment">/* No reloc */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_16		1	<span class="comment">/* Direct 16 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_32		2	<span class="comment">/* Direct 32 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_REL32		3	<span class="comment">/* PC relative 32 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_26		4	<span class="comment">/* Direct 26 bit shifted */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_HI16		5	<span class="comment">/* High 16 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_LO16		6	<span class="comment">/* Low 16 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_GPREL16		7	<span class="comment">/* GP relative 16 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_LITERAL		8	<span class="comment">/* 16 bit literal entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_GOT16		9	<span class="comment">/* 16 bit GOT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_PC16		10	<span class="comment">/* PC relative 16 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_CALL16		11	<span class="comment">/* 16 bit GOT entry for function */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_GPREL32		12	<span class="comment">/* GP relative 32 bit */</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_SHIFT5		16</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_SHIFT6		17</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_64		18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_GOT_DISP		19</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_GOT_PAGE		20</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_GOT_OFST		21</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_GOT_HI16		22</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_GOT_LO16		23</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_SUB		24</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_INSERT_A		25</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_INSERT_B		26</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_DELETE		27</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_HIGHER		28</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_HIGHEST		29</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_CALL_HI16	30</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_CALL_LO16	31</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_SCN_DISP		32</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_REL16		33</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_ADD_IMMEDIATE	34</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_PJUMP		35</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_RELGOT		36</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_JALR		37</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_TLS_DTPMOD32	38	<span class="comment">/* Module number 32 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_TLS_DTPREL32	39	<span class="comment">/* Module-relative offset 32 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_TLS_DTPMOD64	40	<span class="comment">/* Module number 64 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_TLS_DTPREL64	41	<span class="comment">/* Module-relative offset 64 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_TLS_GD		42	<span class="comment">/* 16 bit GOT offset for GD */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_TLS_LDM		43	<span class="comment">/* 16 bit GOT offset for LDM */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_TLS_DTPREL_HI16	44	<span class="comment">/* Module-relative offset, high 16 bits */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_TLS_DTPREL_LO16	45	<span class="comment">/* Module-relative offset, low 16 bits */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_TLS_GOTTPREL	46	<span class="comment">/* 16 bit GOT offset for IE */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_TLS_TPREL32	47	<span class="comment">/* TP-relative offset, 32 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_TLS_TPREL64	48	<span class="comment">/* TP-relative offset, 64 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_TLS_TPREL_HI16	49	<span class="comment">/* TP-relative offset, high 16 bits */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_TLS_TPREL_LO16	50	<span class="comment">/* TP-relative offset, low 16 bits */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_GLOB_DAT		51</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_COPY		126</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_JUMP_SLOT        127</span></span><br><span class="line"><span class="comment">/* Keep this the last entry.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MIPS_NUM		128</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Legal values for p_type field of Elf32_Phdr.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_MIPS_REGINFO	  0x70000000	<span class="comment">/* Register usage information. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_MIPS_RTPROC	  0x70000001	<span class="comment">/* Runtime procedure table. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_MIPS_OPTIONS	  0x70000002</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_MIPS_ABIFLAGS  0x70000003	<span class="comment">/* FP mode requirement. */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Special program header types.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PF_MIPS_LOCAL	0x10000000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Legal values for d_tag field of Elf32_Dyn.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_RLD_VERSION  0x70000001	<span class="comment">/* Runtime linker interface version */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_TIME_STAMP   0x70000002	<span class="comment">/* Timestamp */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_ICHECKSUM    0x70000003	<span class="comment">/* Checksum */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_IVERSION     0x70000004	<span class="comment">/* Version string (string tbl index) */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_FLAGS	     0x70000005	<span class="comment">/* Flags */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_BASE_ADDRESS 0x70000006	<span class="comment">/* Base address */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_MSYM	     0x70000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_CONFLICT     0x70000008	<span class="comment">/* Address of CONFLICT section */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_LIBLIST	     0x70000009	<span class="comment">/* Address of LIBLIST section */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_LOCAL_GOTNO  0x7000000a	<span class="comment">/* Number of local GOT entries */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_CONFLICTNO   0x7000000b	<span class="comment">/* Number of CONFLICT entries */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_LIBLISTNO    0x70000010	<span class="comment">/* Number of LIBLIST entries */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_SYMTABNO     0x70000011	<span class="comment">/* Number of DYNSYM entries */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_UNREFEXTNO   0x70000012	<span class="comment">/* First external DYNSYM */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_GOTSYM	     0x70000013	<span class="comment">/* First GOT entry in DYNSYM */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_HIPAGENO     0x70000014	<span class="comment">/* Number of GOT page table entries */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_RLD_MAP	     0x70000016	<span class="comment">/* Address of run time loader map.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_DELTA_CLASS  0x70000017	<span class="comment">/* Delta C++ class definition.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_DELTA_CLASS_NO    0x70000018 <span class="comment">/* Number of entries in</span></span></span><br><span class="line"><span class="meta"><span class="comment">						DT_MIPS_DELTA_CLASS.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_DELTA_INSTANCE    0x70000019 <span class="comment">/* Delta C++ class instances.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_DELTA_INSTANCE_NO 0x7000001a <span class="comment">/* Number of entries in</span></span></span><br><span class="line"><span class="meta"><span class="comment">						DT_MIPS_DELTA_INSTANCE.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_DELTA_RELOC  0x7000001b <span class="comment">/* Delta relocations.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_DELTA_RELOC_NO 0x7000001c <span class="comment">/* Number of entries in</span></span></span><br><span class="line"><span class="meta"><span class="comment">					     DT_MIPS_DELTA_RELOC.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_DELTA_SYM    0x7000001d <span class="comment">/* Delta symbols that Delta</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   relocations refer to.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_DELTA_SYM_NO 0x7000001e <span class="comment">/* Number of entries in</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   DT_MIPS_DELTA_SYM.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_DELTA_CLASSSYM 0x70000020 <span class="comment">/* Delta symbols that hold the</span></span></span><br><span class="line"><span class="meta"><span class="comment">					     class declaration.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_DELTA_CLASSSYM_NO 0x70000021 <span class="comment">/* Number of entries in</span></span></span><br><span class="line"><span class="meta"><span class="comment">						DT_MIPS_DELTA_CLASSSYM.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_CXX_FLAGS    0x70000022 <span class="comment">/* Flags indicating for C++ flavor.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_PIXIE_INIT   0x70000023</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_SYMBOL_LIB   0x70000024</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_LOCALPAGE_GOTIDX 0x70000025</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_LOCAL_GOTIDX 0x70000026</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_HIDDEN_GOTIDX 0x70000027</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_PROTECTED_GOTIDX 0x70000028</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_OPTIONS	     0x70000029 <span class="comment">/* Address of .options.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_INTERFACE    0x7000002a <span class="comment">/* Address of .interface.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_DYNSTR_ALIGN 0x7000002b</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_INTERFACE_SIZE 0x7000002c <span class="comment">/* Size of the .interface section. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_RLD_TEXT_RESOLVE_ADDR 0x7000002d <span class="comment">/* Address of rld_text_rsolve</span></span></span><br><span class="line"><span class="meta"><span class="comment">						    function stored in GOT.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_PERF_SUFFIX  0x7000002e <span class="comment">/* Default suffix of dso to be added</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   by rld on dlopen() calls.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_COMPACT_SIZE 0x7000002f <span class="comment">/* (O32)Size of compact rel section. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_GP_VALUE     0x70000030 <span class="comment">/* GP value for aux GOTs.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_AUX_DYNAMIC  0x70000031 <span class="comment">/* Address of aux .dynamic.  */</span></span></span><br><span class="line"><span class="comment">/* The address of .got.plt in an executable using the new non-PIC ABI.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_PLTGOT	     0x70000032</span></span><br><span class="line"><span class="comment">/* The base of the PLT in an executable using the new non-PIC ABI if that</span></span><br><span class="line"><span class="comment">   PLT is writable.  For a non-writable PLT, this is omitted or has a zero</span></span><br><span class="line"><span class="comment">   value.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_RWPLT        0x70000034</span></span><br><span class="line"><span class="comment">/* An alternative description of the classic MIPS RLD_MAP that is usable</span></span><br><span class="line"><span class="comment">   in a PIE as it stores a relative offset from the address of the tag</span></span><br><span class="line"><span class="comment">   rather than an absolute address.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_RLD_MAP_REL  0x70000035</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_MIPS_NUM	     0x36</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Legal values for DT_MIPS_FLAGS Elf32_Dyn entry.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RHF_NONE		   0		<span class="comment">/* No flags */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RHF_QUICKSTART		   (1 &lt;&lt; 0)	<span class="comment">/* Use quickstart */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RHF_NOTPOT		   (1 &lt;&lt; 1)	<span class="comment">/* Hash size not power of 2 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RHF_NO_LIBRARY_REPLACEMENT (1 &lt;&lt; 2)	<span class="comment">/* Ignore LD_LIBRARY_PATH */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RHF_NO_MOVE		   (1 &lt;&lt; 3)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RHF_SGI_ONLY		   (1 &lt;&lt; 4)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RHF_GUARANTEE_INIT	   (1 &lt;&lt; 5)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RHF_DELTA_C_PLUS_PLUS	   (1 &lt;&lt; 6)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RHF_GUARANTEE_START_INIT   (1 &lt;&lt; 7)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RHF_PIXIE		   (1 &lt;&lt; 8)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RHF_DEFAULT_DELAY_LOAD	   (1 &lt;&lt; 9)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RHF_REQUICKSTART	   (1 &lt;&lt; 10)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RHF_REQUICKSTARTED	   (1 &lt;&lt; 11)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RHF_CORD		   (1 &lt;&lt; 12)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RHF_NO_UNRES_UNDEF	   (1 &lt;&lt; 13)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RHF_RLD_ORDER_SAFE	   (1 &lt;&lt; 14)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Entries found in sections of type SHT_MIPS_LIBLIST.  */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  Elf32_Word l_name;		<span class="comment">/* Name (string table index) */</span></span><br><span class="line">  Elf32_Word l_time_stamp;	<span class="comment">/* Timestamp */</span></span><br><span class="line">  Elf32_Word l_checksum;	<span class="comment">/* Checksum */</span></span><br><span class="line">  Elf32_Word l_version;		<span class="comment">/* Interface version */</span></span><br><span class="line">  Elf32_Word l_flags;		<span class="comment">/* Flags */</span></span><br><span class="line">&#125; Elf32_Lib;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  Elf64_Word l_name;		<span class="comment">/* Name (string table index) */</span></span><br><span class="line">  Elf64_Word l_time_stamp;	<span class="comment">/* Timestamp */</span></span><br><span class="line">  Elf64_Word l_checksum;	<span class="comment">/* Checksum */</span></span><br><span class="line">  Elf64_Word l_version;		<span class="comment">/* Interface version */</span></span><br><span class="line">  Elf64_Word l_flags;		<span class="comment">/* Flags */</span></span><br><span class="line">&#125; Elf64_Lib;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Legal values for l_flags.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL_NONE		  0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL_EXACT_MATCH	  (1 &lt;&lt; 0)	<span class="comment">/* Require exact match */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL_IGNORE_INT_VER (1 &lt;&lt; 1)	<span class="comment">/* Ignore interface version */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL_REQUIRE_MINOR  (1 &lt;&lt; 2)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL_EXPORTS	  (1 &lt;&lt; 3)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL_DELAY_LOAD	  (1 &lt;&lt; 4)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL_DELTA	  (1 &lt;&lt; 5)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Entries found in sections of type SHT_MIPS_CONFLICT.  */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> Elf32_Addr Elf32_Conflict;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="comment">/* Version of flags structure.  */</span></span><br><span class="line">  Elf32_Half version;</span><br><span class="line">  <span class="comment">/* The level of the ISA: 1-5, 32, 64.  */</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">char</span> isa_level;</span><br><span class="line">  <span class="comment">/* The revision of ISA: 0 for MIPS V and below, 1-n otherwise.  */</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">char</span> isa_rev;</span><br><span class="line">  <span class="comment">/* The size of general purpose registers.  */</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">char</span> gpr_size;</span><br><span class="line">  <span class="comment">/* The size of co-processor 1 registers.  */</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">char</span> cpr1_size;</span><br><span class="line">  <span class="comment">/* The size of co-processor 2 registers.  */</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">char</span> cpr2_size;</span><br><span class="line">  <span class="comment">/* The floating-point ABI.  */</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">char</span> fp_abi;</span><br><span class="line">  <span class="comment">/* Processor-specific extension.  */</span></span><br><span class="line">  Elf32_Word isa_ext;</span><br><span class="line">  <span class="comment">/* Mask of ASEs used.  */</span></span><br><span class="line">  Elf32_Word ases;</span><br><span class="line">  <span class="comment">/* Mask of general flags.  */</span></span><br><span class="line">  Elf32_Word flags1;</span><br><span class="line">  Elf32_Word flags2;</span><br><span class="line">&#125; Elf_MIPS_ABIFlags_v0;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Values for the register size bytes of an abi flags structure.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MIPS_AFL_REG_NONE	0x00	 <span class="comment">/* No registers.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MIPS_AFL_REG_32		0x01	 <span class="comment">/* 32-bit registers.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MIPS_AFL_REG_64		0x02	 <span class="comment">/* 64-bit registers.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MIPS_AFL_REG_128	0x03	 <span class="comment">/* 128-bit registers.  */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Masks for the ases word of an ABI flags structure.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MIPS_AFL_ASE_DSP	0x00000001 <span class="comment">/* DSP ASE.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MIPS_AFL_ASE_DSPR2	0x00000002 <span class="comment">/* DSP R2 ASE.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MIPS_AFL_ASE_EVA	0x00000004 <span class="comment">/* Enhanced VA Scheme.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MIPS_AFL_ASE_MCU	0x00000008 <span class="comment">/* MCU (MicroController) ASE.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MIPS_AFL_ASE_MDMX	0x00000010 <span class="comment">/* MDMX ASE.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MIPS_AFL_ASE_MIPS3D	0x00000020 <span class="comment">/* MIPS-3D ASE.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MIPS_AFL_ASE_MT		0x00000040 <span class="comment">/* MT ASE.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MIPS_AFL_ASE_SMARTMIPS	0x00000080 <span class="comment">/* SmartMIPS ASE.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MIPS_AFL_ASE_VIRT	0x00000100 <span class="comment">/* VZ ASE.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MIPS_AFL_ASE_MSA	0x00000200 <span class="comment">/* MSA ASE.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MIPS_AFL_ASE_MIPS16	0x00000400 <span class="comment">/* MIPS16 ASE.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MIPS_AFL_ASE_MICROMIPS	0x00000800 <span class="comment">/* MICROMIPS ASE.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MIPS_AFL_ASE_XPA	0x00001000 <span class="comment">/* XPA ASE.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MIPS_AFL_ASE_MASK	0x00001fff <span class="comment">/* All ASEs.  */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Values for the isa_ext word of an ABI flags structure.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MIPS_AFL_EXT_XLR	  1   <span class="comment">/* RMI Xlr instruction.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MIPS_AFL_EXT_OCTEON2	  2   <span class="comment">/* Cavium Networks Octeon2.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MIPS_AFL_EXT_OCTEONP	  3   <span class="comment">/* Cavium Networks OcteonP.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MIPS_AFL_EXT_LOONGSON_3A  4   <span class="comment">/* Loongson 3A.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MIPS_AFL_EXT_OCTEON	  5   <span class="comment">/* Cavium Networks Octeon.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MIPS_AFL_EXT_5900	  6   <span class="comment">/* MIPS R5900 instruction.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MIPS_AFL_EXT_4650	  7   <span class="comment">/* MIPS R4650 instruction.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MIPS_AFL_EXT_4010	  8   <span class="comment">/* LSI R4010 instruction.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MIPS_AFL_EXT_4100	  9   <span class="comment">/* NEC VR4100 instruction.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MIPS_AFL_EXT_3900	  10  <span class="comment">/* Toshiba R3900 instruction.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MIPS_AFL_EXT_10000	  11  <span class="comment">/* MIPS R10000 instruction.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MIPS_AFL_EXT_SB1	  12  <span class="comment">/* Broadcom SB-1 instruction.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MIPS_AFL_EXT_4111	  13  <span class="comment">/* NEC VR4111/VR4181 instruction.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MIPS_AFL_EXT_4120	  14  <span class="comment">/* NEC VR4120 instruction.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MIPS_AFL_EXT_5400	  15  <span class="comment">/* NEC VR5400 instruction.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MIPS_AFL_EXT_5500	  16  <span class="comment">/* NEC VR5500 instruction.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MIPS_AFL_EXT_LOONGSON_2E  17  <span class="comment">/* ST Microelectronics Loongson 2E.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MIPS_AFL_EXT_LOONGSON_2F  18  <span class="comment">/* ST Microelectronics Loongson 2F.  */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Masks for the flags1 word of an ABI flags structure.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MIPS_AFL_FLAGS1_ODDSPREG  1  <span class="comment">/* Uses odd single-precision registers.  */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Object attribute values.  */</span></span><br><span class="line"><span class="keyword">enum</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">/* Not tagged or not using any ABIs affected by the differences.  */</span></span><br><span class="line">  Val_GNU_MIPS_ABI_FP_ANY = <span class="number">0</span>,</span><br><span class="line">  <span class="comment">/* Using hard-float -mdouble-float.  */</span></span><br><span class="line">  Val_GNU_MIPS_ABI_FP_DOUBLE = <span class="number">1</span>,</span><br><span class="line">  <span class="comment">/* Using hard-float -msingle-float.  */</span></span><br><span class="line">  Val_GNU_MIPS_ABI_FP_SINGLE = <span class="number">2</span>,</span><br><span class="line">  <span class="comment">/* Using soft-float.  */</span></span><br><span class="line">  Val_GNU_MIPS_ABI_FP_SOFT = <span class="number">3</span>,</span><br><span class="line">  <span class="comment">/* Using -mips32r2 -mfp64.  */</span></span><br><span class="line">  Val_GNU_MIPS_ABI_FP_OLD_64 = <span class="number">4</span>,</span><br><span class="line">  <span class="comment">/* Using -mfpxx.  */</span></span><br><span class="line">  Val_GNU_MIPS_ABI_FP_XX = <span class="number">5</span>,</span><br><span class="line">  <span class="comment">/* Using -mips32r2 -mfp64.  */</span></span><br><span class="line">  Val_GNU_MIPS_ABI_FP_64 = <span class="number">6</span>,</span><br><span class="line">  <span class="comment">/* Using -mips32r2 -mfp64 -mno-odd-spreg.  */</span></span><br><span class="line">  Val_GNU_MIPS_ABI_FP_64A = <span class="number">7</span>,</span><br><span class="line">  <span class="comment">/* Maximum allocated FP ABI value.  */</span></span><br><span class="line">  Val_GNU_MIPS_ABI_FP_MAX = <span class="number">7</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* HPPA specific definitions.  */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Legal values for e_flags field of Elf32_Ehdr.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_PARISC_TRAPNIL	0x00010000 <span class="comment">/* Trap nil pointer dereference.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_PARISC_EXT		0x00020000 <span class="comment">/* Program uses arch. extensions. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_PARISC_LSB		0x00040000 <span class="comment">/* Program expects little endian. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_PARISC_WIDE		0x00080000 <span class="comment">/* Program expects wide mode.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_PARISC_NO_KABP	0x00100000 <span class="comment">/* No kernel assisted branch</span></span></span><br><span class="line"><span class="meta"><span class="comment">					      prediction.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_PARISC_LAZYSWAP	0x00400000 <span class="comment">/* Allow lazy swapping.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_PARISC_ARCH		0x0000ffff <span class="comment">/* Architecture version.  */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Defined values for `e_flags &amp; EF_PARISC_ARCH' are:  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EFA_PARISC_1_0		    0x020b <span class="comment">/* PA-RISC 1.0 big-endian.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EFA_PARISC_1_1		    0x0210 <span class="comment">/* PA-RISC 1.1 big-endian.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EFA_PARISC_2_0		    0x0214 <span class="comment">/* PA-RISC 2.0 big-endian.  */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Additional section indeces.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHN_PARISC_ANSI_COMMON	0xff00	   <span class="comment">/* Section for tenatively declared</span></span></span><br><span class="line"><span class="meta"><span class="comment">					      symbols in ANSI C.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHN_PARISC_HUGE_COMMON	0xff01	   <span class="comment">/* Common blocks in huge model.  */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Legal values for sh_type field of Elf32_Shdr.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_PARISC_EXT		0x70000000 <span class="comment">/* Contains product specific ext. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_PARISC_UNWIND	0x70000001 <span class="comment">/* Unwind information.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_PARISC_DOC		0x70000002 <span class="comment">/* Debug info for optimized code. */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Legal values for sh_flags field of Elf32_Shdr.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_PARISC_SHORT	0x20000000 <span class="comment">/* Section with short addressing. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_PARISC_HUGE		0x40000000 <span class="comment">/* Section far from gp.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_PARISC_SBP		0x80000000 <span class="comment">/* Static branch prediction code. */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Legal values for ST_TYPE subfield of st_info (symbol type).  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STT_PARISC_MILLICODE	13	<span class="comment">/* Millicode function entry point.  */</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STT_HP_OPAQUE		(STT_LOOS + 0x1)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STT_HP_STUB		(STT_LOOS + 0x2)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* HPPA relocs.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_NONE		0	<span class="comment">/* No reloc.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_DIR32		1	<span class="comment">/* Direct 32-bit reference.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_DIR21L		2	<span class="comment">/* Left 21 bits of eff. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_DIR17R		3	<span class="comment">/* Right 17 bits of eff. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_DIR17F		4	<span class="comment">/* 17 bits of eff. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_DIR14R		6	<span class="comment">/* Right 14 bits of eff. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_PCREL32	9	<span class="comment">/* 32-bit rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_PCREL21L	10	<span class="comment">/* Left 21 bits of rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_PCREL17R	11	<span class="comment">/* Right 17 bits of rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_PCREL17F	12	<span class="comment">/* 17 bits of rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_PCREL14R	14	<span class="comment">/* Right 14 bits of rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_DPREL21L	18	<span class="comment">/* Left 21 bits of rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_DPREL14R	22	<span class="comment">/* Right 14 bits of rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_GPREL21L	26	<span class="comment">/* GP-relative, left 21 bits.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_GPREL14R	30	<span class="comment">/* GP-relative, right 14 bits.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF21L	34	<span class="comment">/* LT-relative, left 21 bits.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF14R	38	<span class="comment">/* LT-relative, right 14 bits.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_SECREL32	41	<span class="comment">/* 32 bits section rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_SEGBASE	48	<span class="comment">/* No relocation, set segment base.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_SEGREL32	49	<span class="comment">/* 32 bits segment rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_PLTOFF21L	50	<span class="comment">/* PLT rel. address, left 21 bits.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_PLTOFF14R	54	<span class="comment">/* PLT rel. address, right 14 bits.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF_FPTR32	57	<span class="comment">/* 32 bits LT-rel. function pointer. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF_FPTR21L	58	<span class="comment">/* LT-rel. fct ptr, left 21 bits. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF_FPTR14R	62	<span class="comment">/* LT-rel. fct ptr, right 14 bits. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_FPTR64		64	<span class="comment">/* 64 bits function address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_PLABEL32	65	<span class="comment">/* 32 bits function address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_PLABEL21L	66	<span class="comment">/* Left 21 bits of fdesc address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_PLABEL14R	70	<span class="comment">/* Right 14 bits of fdesc address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_PCREL64	72	<span class="comment">/* 64 bits PC-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_PCREL22F	74	<span class="comment">/* 22 bits PC-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_PCREL14WR	75	<span class="comment">/* PC-rel. address, right 14 bits.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_PCREL14DR	76	<span class="comment">/* PC rel. address, right 14 bits.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_PCREL16F	77	<span class="comment">/* 16 bits PC-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_PCREL16WF	78	<span class="comment">/* 16 bits PC-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_PCREL16DF	79	<span class="comment">/* 16 bits PC-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_DIR64		80	<span class="comment">/* 64 bits of eff. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_DIR14WR	83	<span class="comment">/* 14 bits of eff. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_DIR14DR	84	<span class="comment">/* 14 bits of eff. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_DIR16F		85	<span class="comment">/* 16 bits of eff. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_DIR16WF	86	<span class="comment">/* 16 bits of eff. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_DIR16DF	87	<span class="comment">/* 16 bits of eff. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_GPREL64	88	<span class="comment">/* 64 bits of GP-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_GPREL14WR	91	<span class="comment">/* GP-rel. address, right 14 bits.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_GPREL14DR	92	<span class="comment">/* GP-rel. address, right 14 bits.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_GPREL16F	93	<span class="comment">/* 16 bits GP-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_GPREL16WF	94	<span class="comment">/* 16 bits GP-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_GPREL16DF	95	<span class="comment">/* 16 bits GP-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF64	96	<span class="comment">/* 64 bits LT-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF14WR	99	<span class="comment">/* LT-rel. address, right 14 bits.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF14DR	100	<span class="comment">/* LT-rel. address, right 14 bits.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF16F	101	<span class="comment">/* 16 bits LT-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF16WF	102	<span class="comment">/* 16 bits LT-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF16DF	103	<span class="comment">/* 16 bits LT-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_SECREL64	104	<span class="comment">/* 64 bits section rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_SEGREL64	112	<span class="comment">/* 64 bits segment rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_PLTOFF14WR	115	<span class="comment">/* PLT-rel. address, right 14 bits.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_PLTOFF14DR	116	<span class="comment">/* PLT-rel. address, right 14 bits.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_PLTOFF16F	117	<span class="comment">/* 16 bits LT-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_PLTOFF16WF	118	<span class="comment">/* 16 bits PLT-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_PLTOFF16DF	119	<span class="comment">/* 16 bits PLT-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF_FPTR64	120	<span class="comment">/* 64 bits LT-rel. function ptr.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF_FPTR14WR	123	<span class="comment">/* LT-rel. fct. ptr., right 14 bits. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF_FPTR14DR	124	<span class="comment">/* LT-rel. fct. ptr., right 14 bits. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF_FPTR16F	125	<span class="comment">/* 16 bits LT-rel. function ptr.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF_FPTR16WF	126	<span class="comment">/* 16 bits LT-rel. function ptr.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF_FPTR16DF	127	<span class="comment">/* 16 bits LT-rel. function ptr.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LORESERVE	128</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_COPY		128	<span class="comment">/* Copy relocation.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_IPLT		129	<span class="comment">/* Dynamic reloc, imported PLT */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_EPLT		130	<span class="comment">/* Dynamic reloc, exported PLT */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_TPREL32	153	<span class="comment">/* 32 bits TP-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_TPREL21L	154	<span class="comment">/* TP-rel. address, left 21 bits.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_TPREL14R	158	<span class="comment">/* TP-rel. address, right 14 bits.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF_TP21L	162	<span class="comment">/* LT-TP-rel. address, left 21 bits. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF_TP14R	166	<span class="comment">/* LT-TP-rel. address, right 14 bits.*/</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF_TP14F	167	<span class="comment">/* 14 bits LT-TP-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_TPREL64	216	<span class="comment">/* 64 bits TP-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_TPREL14WR	219	<span class="comment">/* TP-rel. address, right 14 bits.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_TPREL14DR	220	<span class="comment">/* TP-rel. address, right 14 bits.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_TPREL16F	221	<span class="comment">/* 16 bits TP-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_TPREL16WF	222	<span class="comment">/* 16 bits TP-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_TPREL16DF	223	<span class="comment">/* 16 bits TP-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF_TP64	224	<span class="comment">/* 64 bits LT-TP-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF_TP14WR	227	<span class="comment">/* LT-TP-rel. address, right 14 bits.*/</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF_TP14DR	228	<span class="comment">/* LT-TP-rel. address, right 14 bits.*/</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF_TP16F	229	<span class="comment">/* 16 bits LT-TP-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF_TP16WF	230	<span class="comment">/* 16 bits LT-TP-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_LTOFF_TP16DF	231	<span class="comment">/* 16 bits LT-TP-rel. address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_GNU_VTENTRY	232</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_GNU_VTINHERIT	233</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_TLS_GD21L	234	<span class="comment">/* GD 21-bit left.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_TLS_GD14R	235	<span class="comment">/* GD 14-bit right.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_TLS_GDCALL	236	<span class="comment">/* GD call to __t_g_a.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_TLS_LDM21L	237	<span class="comment">/* LD module 21-bit left.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_TLS_LDM14R	238	<span class="comment">/* LD module 14-bit right.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_TLS_LDMCALL	239	<span class="comment">/* LD module call to __t_g_a.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_TLS_LDO21L	240	<span class="comment">/* LD offset 21-bit left.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_TLS_LDO14R	241	<span class="comment">/* LD offset 14-bit right.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_TLS_DTPMOD32	242	<span class="comment">/* DTP module 32-bit.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_TLS_DTPMOD64	243	<span class="comment">/* DTP module 64-bit.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_TLS_DTPOFF32	244	<span class="comment">/* DTP offset 32-bit.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_TLS_DTPOFF64	245	<span class="comment">/* DTP offset 32-bit.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_TLS_LE21L	R_PARISC_TPREL21L</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_TLS_LE14R	R_PARISC_TPREL14R</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_TLS_IE21L	R_PARISC_LTOFF_TP21L</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_TLS_IE14R	R_PARISC_LTOFF_TP14R</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_TLS_TPREL32	R_PARISC_TPREL32</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_TLS_TPREL64	R_PARISC_TPREL64</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PARISC_HIRESERVE	255</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Legal values for p_type field of Elf32_Phdr/Elf64_Phdr.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_HP_TLS		(PT_LOOS + 0x0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_HP_CORE_NONE		(PT_LOOS + 0x1)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_HP_CORE_VERSION	(PT_LOOS + 0x2)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_HP_CORE_KERNEL	(PT_LOOS + 0x3)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_HP_CORE_COMM		(PT_LOOS + 0x4)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_HP_CORE_PROC		(PT_LOOS + 0x5)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_HP_CORE_LOADABLE	(PT_LOOS + 0x6)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_HP_CORE_STACK	(PT_LOOS + 0x7)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_HP_CORE_SHM		(PT_LOOS + 0x8)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_HP_CORE_MMF		(PT_LOOS + 0x9)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_HP_PARALLEL		(PT_LOOS + 0x10)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_HP_FASTBIND		(PT_LOOS + 0x11)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_HP_OPT_ANNOT		(PT_LOOS + 0x12)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_HP_HSL_ANNOT		(PT_LOOS + 0x13)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_HP_STACK		(PT_LOOS + 0x14)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_PARISC_ARCHEXT	0x70000000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_PARISC_UNWIND	0x70000001</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Legal values for p_flags field of Elf32_Phdr/Elf64_Phdr.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PF_PARISC_SBP		0x08000000</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PF_HP_PAGE_SIZE		0x00100000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PF_HP_FAR_SHARED	0x00200000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PF_HP_NEAR_SHARED	0x00400000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PF_HP_CODE		0x01000000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PF_HP_MODIFY		0x02000000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PF_HP_LAZYSWAP		0x04000000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PF_HP_SBP		0x08000000</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Alpha specific definitions.  */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Legal values for e_flags field of Elf64_Ehdr.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_ALPHA_32BIT		1	<span class="comment">/* All addresses must be &lt; 2GB.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_ALPHA_CANRELAX	2	<span class="comment">/* Relocations for relaxing exist.  */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Legal values for sh_type field of Elf64_Shdr.  */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* These two are primerily concerned with ECOFF debugging info.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_ALPHA_DEBUG		0x70000001</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_ALPHA_REGINFO	0x70000002</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Legal values for sh_flags field of Elf64_Shdr.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_ALPHA_GPREL		0x10000000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Legal values for st_other field of Elf64_Sym.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STO_ALPHA_NOPV		0x80	<span class="comment">/* No PV required.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STO_ALPHA_STD_GPLOAD	0x88	<span class="comment">/* PV only used for initial ldgp.  */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Alpha relocs.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_NONE		0	<span class="comment">/* No reloc */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_REFLONG		1	<span class="comment">/* Direct 32 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_REFQUAD		2	<span class="comment">/* Direct 64 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_GPREL32		3	<span class="comment">/* GP relative 32 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_LITERAL		4	<span class="comment">/* GP relative 16 bit w/optimization */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_LITUSE		5	<span class="comment">/* Optimization hint for LITERAL */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_GPDISP		6	<span class="comment">/* Add displacement to GP */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_BRADDR		7	<span class="comment">/* PC+4 relative 23 bit shifted */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_HINT		8	<span class="comment">/* PC+4 relative 16 bit shifted */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_SREL16		9	<span class="comment">/* PC relative 16 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_SREL32		10	<span class="comment">/* PC relative 32 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_SREL64		11	<span class="comment">/* PC relative 64 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_GPRELHIGH	17	<span class="comment">/* GP relative 32 bit, high 16 bits */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_GPRELLOW	18	<span class="comment">/* GP relative 32 bit, low 16 bits */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_GPREL16		19	<span class="comment">/* GP relative 16 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_COPY		24	<span class="comment">/* Copy symbol at runtime */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_GLOB_DAT	25	<span class="comment">/* Create GOT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_JMP_SLOT	26	<span class="comment">/* Create PLT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_RELATIVE	27	<span class="comment">/* Adjust by program base */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_TLS_GD_HI	28</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_TLSGD		29</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_TLS_LDM		30</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_DTPMOD64	31</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_GOTDTPREL	32</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_DTPREL64	33</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_DTPRELHI	34</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_DTPRELLO	35</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_DTPREL16	36</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_GOTTPREL	37</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_TPREL64		38</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_TPRELHI		39</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_TPRELLO		40</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_TPREL16		41</span></span><br><span class="line"><span class="comment">/* Keep this the last entry.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ALPHA_NUM		46</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Magic values of the LITUSE relocation addend.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LITUSE_ALPHA_ADDR	0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LITUSE_ALPHA_BASE	1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LITUSE_ALPHA_BYTOFF	2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LITUSE_ALPHA_JSR	3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LITUSE_ALPHA_TLS_GD	4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LITUSE_ALPHA_TLS_LDM	5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Legal values for d_tag of Elf64_Dyn.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_ALPHA_PLTRO		(DT_LOPROC + 0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_ALPHA_NUM		1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* PowerPC specific declarations */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Values for Elf32/64_Ehdr.e_flags.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_PPC_EMB		0x80000000	<span class="comment">/* PowerPC embedded flag */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Cygnus local bits below */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_PPC_RELOCATABLE	0x00010000	<span class="comment">/* PowerPC -mrelocatable flag*/</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_PPC_RELOCATABLE_LIB	0x00008000	<span class="comment">/* PowerPC -mrelocatable-lib</span></span></span><br><span class="line"><span class="meta"><span class="comment">						   flag */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* PowerPC relocations defined by the ABIs */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_NONE		0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_ADDR32		1	<span class="comment">/* 32bit absolute address */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_ADDR24		2	<span class="comment">/* 26bit address, 2 bits ignored.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_ADDR16		3	<span class="comment">/* 16bit absolute address */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_ADDR16_LO		4	<span class="comment">/* lower 16bit of absolute address */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_ADDR16_HI		5	<span class="comment">/* high 16bit of absolute address */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_ADDR16_HA		6	<span class="comment">/* adjusted high 16bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_ADDR14		7	<span class="comment">/* 16bit address, 2 bits ignored */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_ADDR14_BRTAKEN	8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_ADDR14_BRNTAKEN	9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_REL24		10	<span class="comment">/* PC relative 26 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_REL14		11	<span class="comment">/* PC relative 16 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_REL14_BRTAKEN	12</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_REL14_BRNTAKEN	13</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_GOT16		14</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_GOT16_LO		15</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_GOT16_HI		16</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_GOT16_HA		17</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_PLTREL24		18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_COPY		19</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_GLOB_DAT		20</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_JMP_SLOT		21</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_RELATIVE		22</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_LOCAL24PC		23</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_UADDR32		24</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_UADDR16		25</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_REL32		26</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_PLT32		27</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_PLTREL32		28</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_PLT16_LO		29</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_PLT16_HI		30</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_PLT16_HA		31</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_SDAREL16		32</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_SECTOFF		33</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_SECTOFF_LO	34</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_SECTOFF_HI	35</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_SECTOFF_HA	36</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* PowerPC relocations defined for the TLS access ABI.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_TLS		67 <span class="comment">/* none	(sym+add)@tls */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_DTPMOD32		68 <span class="comment">/* word32	(sym+add)@dtpmod */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_TPREL16		69 <span class="comment">/* half16*	(sym+add)@tprel */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_TPREL16_LO	70 <span class="comment">/* half16	(sym+add)@tprel@l */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_TPREL16_HI	71 <span class="comment">/* half16	(sym+add)@tprel@h */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_TPREL16_HA	72 <span class="comment">/* half16	(sym+add)@tprel@ha */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_TPREL32		73 <span class="comment">/* word32	(sym+add)@tprel */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_DTPREL16		74 <span class="comment">/* half16*	(sym+add)@dtprel */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_DTPREL16_LO	75 <span class="comment">/* half16	(sym+add)@dtprel@l */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_DTPREL16_HI	76 <span class="comment">/* half16	(sym+add)@dtprel@h */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_DTPREL16_HA	77 <span class="comment">/* half16	(sym+add)@dtprel@ha */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_DTPREL32		78 <span class="comment">/* word32	(sym+add)@dtprel */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_GOT_TLSGD16	79 <span class="comment">/* half16*	(sym+add)@got@tlsgd */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_GOT_TLSGD16_LO	80 <span class="comment">/* half16	(sym+add)@got@tlsgd@l */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_GOT_TLSGD16_HI	81 <span class="comment">/* half16	(sym+add)@got@tlsgd@h */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_GOT_TLSGD16_HA	82 <span class="comment">/* half16	(sym+add)@got@tlsgd@ha */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_GOT_TLSLD16	83 <span class="comment">/* half16*	(sym+add)@got@tlsld */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_GOT_TLSLD16_LO	84 <span class="comment">/* half16	(sym+add)@got@tlsld@l */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_GOT_TLSLD16_HI	85 <span class="comment">/* half16	(sym+add)@got@tlsld@h */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_GOT_TLSLD16_HA	86 <span class="comment">/* half16	(sym+add)@got@tlsld@ha */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_GOT_TPREL16	87 <span class="comment">/* half16*	(sym+add)@got@tprel */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_GOT_TPREL16_LO	88 <span class="comment">/* half16	(sym+add)@got@tprel@l */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_GOT_TPREL16_HI	89 <span class="comment">/* half16	(sym+add)@got@tprel@h */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_GOT_TPREL16_HA	90 <span class="comment">/* half16	(sym+add)@got@tprel@ha */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_GOT_DTPREL16	91 <span class="comment">/* half16*	(sym+add)@got@dtprel */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_GOT_DTPREL16_LO	92 <span class="comment">/* half16*	(sym+add)@got@dtprel@l */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_GOT_DTPREL16_HI	93 <span class="comment">/* half16*	(sym+add)@got@dtprel@h */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_GOT_DTPREL16_HA	94 <span class="comment">/* half16*	(sym+add)@got@dtprel@ha */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_TLSGD		95 <span class="comment">/* none	(sym+add)@tlsgd */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_TLSLD		96 <span class="comment">/* none	(sym+add)@tlsld */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* The remaining relocs are from the Embedded ELF ABI, and are not</span></span><br><span class="line"><span class="comment">   in the SVR4 ELF ABI.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_EMB_NADDR32	101</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_EMB_NADDR16	102</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_EMB_NADDR16_LO	103</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_EMB_NADDR16_HI	104</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_EMB_NADDR16_HA	105</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_EMB_SDAI16	106</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_EMB_SDA2I16	107</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_EMB_SDA2REL	108</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_EMB_SDA21		109	<span class="comment">/* 16 bit offset in SDA */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_EMB_MRKREF	110</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_EMB_RELSEC16	111</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_EMB_RELST_LO	112</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_EMB_RELST_HI	113</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_EMB_RELST_HA	114</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_EMB_BIT_FLD	115</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_EMB_RELSDA	116	<span class="comment">/* 16 bit relative offset in SDA */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Diab tool relocations.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_DIAB_SDA21_LO	180	<span class="comment">/* like EMB_SDA21, but lower 16 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_DIAB_SDA21_HI	181	<span class="comment">/* like EMB_SDA21, but high 16 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_DIAB_SDA21_HA	182	<span class="comment">/* like EMB_SDA21, adjusted high 16 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_DIAB_RELSDA_LO	183	<span class="comment">/* like EMB_RELSDA, but lower 16 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_DIAB_RELSDA_HI	184	<span class="comment">/* like EMB_RELSDA, but high 16 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_DIAB_RELSDA_HA	185	<span class="comment">/* like EMB_RELSDA, adjusted high 16 */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* GNU extension to support local ifunc.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_IRELATIVE		248</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* GNU relocs used in PIC code sequences.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_REL16		249	<span class="comment">/* half16   (sym+add-.) */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_REL16_LO		250	<span class="comment">/* half16   (sym+add-.)@l */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_REL16_HI		251	<span class="comment">/* half16   (sym+add-.)@h */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_REL16_HA		252	<span class="comment">/* half16   (sym+add-.)@ha */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* This is a phony reloc to handle any old fashioned TOC16 references</span></span><br><span class="line"><span class="comment">   that may still be in object files.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC_TOC16		255</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* PowerPC specific values for the Dyn d_tag field.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_PPC_GOT		(DT_LOPROC + 0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_PPC_OPT		(DT_LOPROC + 1)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_PPC_NUM		2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* PowerPC specific values for the DT_PPC_OPT Dyn entry.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PPC_OPT_TLS		1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* PowerPC64 relocations defined by the ABIs */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_NONE		R_PPC_NONE</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_ADDR32		R_PPC_ADDR32 <span class="comment">/* 32bit absolute address */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_ADDR24		R_PPC_ADDR24 <span class="comment">/* 26bit address, word aligned */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_ADDR16		R_PPC_ADDR16 <span class="comment">/* 16bit absolute address */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_ADDR16_LO	R_PPC_ADDR16_LO	<span class="comment">/* lower 16bits of address */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_ADDR16_HI	R_PPC_ADDR16_HI	<span class="comment">/* high 16bits of address. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_ADDR16_HA	R_PPC_ADDR16_HA <span class="comment">/* adjusted high 16bits.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_ADDR14		R_PPC_ADDR14 <span class="comment">/* 16bit address, word aligned */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_ADDR14_BRTAKEN	R_PPC_ADDR14_BRTAKEN</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_ADDR14_BRNTAKEN	R_PPC_ADDR14_BRNTAKEN</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_REL24		R_PPC_REL24 <span class="comment">/* PC-rel. 26 bit, word aligned */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_REL14		R_PPC_REL14 <span class="comment">/* PC relative 16 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_REL14_BRTAKEN	R_PPC_REL14_BRTAKEN</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_REL14_BRNTAKEN	R_PPC_REL14_BRNTAKEN</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_GOT16		R_PPC_GOT16</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_GOT16_LO	R_PPC_GOT16_LO</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_GOT16_HI	R_PPC_GOT16_HI</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_GOT16_HA	R_PPC_GOT16_HA</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_COPY		R_PPC_COPY</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_GLOB_DAT	R_PPC_GLOB_DAT</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_JMP_SLOT	R_PPC_JMP_SLOT</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_RELATIVE	R_PPC_RELATIVE</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_UADDR32		R_PPC_UADDR32</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_UADDR16		R_PPC_UADDR16</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_REL32		R_PPC_REL32</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_PLT32		R_PPC_PLT32</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_PLTREL32	R_PPC_PLTREL32</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_PLT16_LO	R_PPC_PLT16_LO</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_PLT16_HI	R_PPC_PLT16_HI</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_PLT16_HA	R_PPC_PLT16_HA</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_SECTOFF		R_PPC_SECTOFF</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_SECTOFF_LO	R_PPC_SECTOFF_LO</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_SECTOFF_HI	R_PPC_SECTOFF_HI</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_SECTOFF_HA	R_PPC_SECTOFF_HA</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_ADDR30		37 <span class="comment">/* word30 (S + A - P) &gt;&gt; 2 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_ADDR64		38 <span class="comment">/* doubleword64 S + A */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_ADDR16_HIGHER	39 <span class="comment">/* half16 #higher(S + A) */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_ADDR16_HIGHERA	40 <span class="comment">/* half16 #highera(S + A) */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_ADDR16_HIGHEST	41 <span class="comment">/* half16 #highest(S + A) */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_ADDR16_HIGHESTA	42 <span class="comment">/* half16 #highesta(S + A) */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_UADDR64		43 <span class="comment">/* doubleword64 S + A */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_REL64		44 <span class="comment">/* doubleword64 S + A - P */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_PLT64		45 <span class="comment">/* doubleword64 L + A */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_PLTREL64	46 <span class="comment">/* doubleword64 L + A - P */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_TOC16		47 <span class="comment">/* half16* S + A - .TOC */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_TOC16_LO	48 <span class="comment">/* half16 #lo(S + A - .TOC.) */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_TOC16_HI	49 <span class="comment">/* half16 #hi(S + A - .TOC.) */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_TOC16_HA	50 <span class="comment">/* half16 #ha(S + A - .TOC.) */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_TOC		51 <span class="comment">/* doubleword64 .TOC */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_PLTGOT16	52 <span class="comment">/* half16* M + A */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_PLTGOT16_LO	53 <span class="comment">/* half16 #lo(M + A) */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_PLTGOT16_HI	54 <span class="comment">/* half16 #hi(M + A) */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_PLTGOT16_HA	55 <span class="comment">/* half16 #ha(M + A) */</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_ADDR16_DS	56 <span class="comment">/* half16ds* (S + A) &gt;&gt; 2 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_ADDR16_LO_DS	57 <span class="comment">/* half16ds  #lo(S + A) &gt;&gt; 2 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_GOT16_DS	58 <span class="comment">/* half16ds* (G + A) &gt;&gt; 2 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_GOT16_LO_DS	59 <span class="comment">/* half16ds  #lo(G + A) &gt;&gt; 2 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_PLT16_LO_DS	60 <span class="comment">/* half16ds  #lo(L + A) &gt;&gt; 2 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_SECTOFF_DS	61 <span class="comment">/* half16ds* (R + A) &gt;&gt; 2 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_SECTOFF_LO_DS	62 <span class="comment">/* half16ds  #lo(R + A) &gt;&gt; 2 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_TOC16_DS	63 <span class="comment">/* half16ds* (S + A - .TOC.) &gt;&gt; 2 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_TOC16_LO_DS	64 <span class="comment">/* half16ds  #lo(S + A - .TOC.) &gt;&gt; 2 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_PLTGOT16_DS	65 <span class="comment">/* half16ds* (M + A) &gt;&gt; 2 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_PLTGOT16_LO_DS	66 <span class="comment">/* half16ds  #lo(M + A) &gt;&gt; 2 */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* PowerPC64 relocations defined for the TLS access ABI.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_TLS		67 <span class="comment">/* none	(sym+add)@tls */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_DTPMOD64	68 <span class="comment">/* doubleword64 (sym+add)@dtpmod */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_TPREL16		69 <span class="comment">/* half16*	(sym+add)@tprel */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_TPREL16_LO	70 <span class="comment">/* half16	(sym+add)@tprel@l */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_TPREL16_HI	71 <span class="comment">/* half16	(sym+add)@tprel@h */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_TPREL16_HA	72 <span class="comment">/* half16	(sym+add)@tprel@ha */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_TPREL64		73 <span class="comment">/* doubleword64 (sym+add)@tprel */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_DTPREL16	74 <span class="comment">/* half16*	(sym+add)@dtprel */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_DTPREL16_LO	75 <span class="comment">/* half16	(sym+add)@dtprel@l */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_DTPREL16_HI	76 <span class="comment">/* half16	(sym+add)@dtprel@h */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_DTPREL16_HA	77 <span class="comment">/* half16	(sym+add)@dtprel@ha */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_DTPREL64	78 <span class="comment">/* doubleword64 (sym+add)@dtprel */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_GOT_TLSGD16	79 <span class="comment">/* half16*	(sym+add)@got@tlsgd */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_GOT_TLSGD16_LO	80 <span class="comment">/* half16	(sym+add)@got@tlsgd@l */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_GOT_TLSGD16_HI	81 <span class="comment">/* half16	(sym+add)@got@tlsgd@h */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_GOT_TLSGD16_HA	82 <span class="comment">/* half16	(sym+add)@got@tlsgd@ha */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_GOT_TLSLD16	83 <span class="comment">/* half16*	(sym+add)@got@tlsld */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_GOT_TLSLD16_LO	84 <span class="comment">/* half16	(sym+add)@got@tlsld@l */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_GOT_TLSLD16_HI	85 <span class="comment">/* half16	(sym+add)@got@tlsld@h */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_GOT_TLSLD16_HA	86 <span class="comment">/* half16	(sym+add)@got@tlsld@ha */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_GOT_TPREL16_DS	87 <span class="comment">/* half16ds*	(sym+add)@got@tprel */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_GOT_TPREL16_LO_DS 88 <span class="comment">/* half16ds (sym+add)@got@tprel@l */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_GOT_TPREL16_HI	89 <span class="comment">/* half16	(sym+add)@got@tprel@h */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_GOT_TPREL16_HA	90 <span class="comment">/* half16	(sym+add)@got@tprel@ha */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_GOT_DTPREL16_DS	91 <span class="comment">/* half16ds*	(sym+add)@got@dtprel */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_GOT_DTPREL16_LO_DS 92 <span class="comment">/* half16ds (sym+add)@got@dtprel@l */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_GOT_DTPREL16_HI	93 <span class="comment">/* half16	(sym+add)@got@dtprel@h */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_GOT_DTPREL16_HA	94 <span class="comment">/* half16	(sym+add)@got@dtprel@ha */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_TPREL16_DS	95 <span class="comment">/* half16ds*	(sym+add)@tprel */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_TPREL16_LO_DS	96 <span class="comment">/* half16ds	(sym+add)@tprel@l */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_TPREL16_HIGHER	97 <span class="comment">/* half16	(sym+add)@tprel@higher */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_TPREL16_HIGHERA	98 <span class="comment">/* half16	(sym+add)@tprel@highera */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_TPREL16_HIGHEST	99 <span class="comment">/* half16	(sym+add)@tprel@highest */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_TPREL16_HIGHESTA 100 <span class="comment">/* half16	(sym+add)@tprel@highesta */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_DTPREL16_DS	101 <span class="comment">/* half16ds* (sym+add)@dtprel */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_DTPREL16_LO_DS	102 <span class="comment">/* half16ds	(sym+add)@dtprel@l */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_DTPREL16_HIGHER	103 <span class="comment">/* half16	(sym+add)@dtprel@higher */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_DTPREL16_HIGHERA 104 <span class="comment">/* half16	(sym+add)@dtprel@highera */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_DTPREL16_HIGHEST 105 <span class="comment">/* half16	(sym+add)@dtprel@highest */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_DTPREL16_HIGHESTA 106 <span class="comment">/* half16	(sym+add)@dtprel@highesta */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_TLSGD		107 <span class="comment">/* none	(sym+add)@tlsgd */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_TLSLD		108 <span class="comment">/* none	(sym+add)@tlsld */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_TOCSAVE		109 <span class="comment">/* none */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Added when HA and HI relocs were changed to report overflows.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_ADDR16_HIGH	110</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_ADDR16_HIGHA	111</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_TPREL16_HIGH	112</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_TPREL16_HIGHA	113</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_DTPREL16_HIGH	114</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_DTPREL16_HIGHA	115</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* GNU extension to support local ifunc.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_JMP_IREL	247</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_IRELATIVE	248</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_REL16		249	<span class="comment">/* half16   (sym+add-.) */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_REL16_LO	250	<span class="comment">/* half16   (sym+add-.)@l */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_REL16_HI	251	<span class="comment">/* half16   (sym+add-.)@h */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_PPC64_REL16_HA	252	<span class="comment">/* half16   (sym+add-.)@ha */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* e_flags bits specifying ABI.</span></span><br><span class="line"><span class="comment">   1 for original function descriptor using ABI,</span></span><br><span class="line"><span class="comment">   2 for revised ABI without function descriptors,</span></span><br><span class="line"><span class="comment">   0 for unspecified or not using any features affected by the differences.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_PPC64_ABI	3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* PowerPC64 specific values for the Dyn d_tag field.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_PPC64_GLINK  (DT_LOPROC + 0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_PPC64_OPD	(DT_LOPROC + 1)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_PPC64_OPDSZ	(DT_LOPROC + 2)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_PPC64_OPT	(DT_LOPROC + 3)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_PPC64_NUM    4</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* PowerPC64 specific values for the DT_PPC64_OPT Dyn entry.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PPC64_OPT_TLS		1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PPC64_OPT_MULTI_TOC	2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* PowerPC64 specific values for the Elf64_Sym st_other field.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STO_PPC64_LOCAL_BIT	5</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STO_PPC64_LOCAL_MASK	(7 &lt;&lt; STO_PPC64_LOCAL_BIT)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PPC64_LOCAL_ENTRY_OFFSET(other)				\</span></span><br><span class="line"> (((<span class="number">1</span> &lt;&lt; (((other) &amp; STO_PPC64_LOCAL_MASK) &gt;&gt; STO_PPC64_LOCAL_BIT)) &gt;&gt; <span class="number">2</span>) &lt;&lt; <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* ARM specific declarations */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Processor specific flags for the ELF header e_flags field.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_ARM_RELEXEC		0x01</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_ARM_HASENTRY		0x02</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_ARM_INTERWORK	0x04</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_ARM_APCS_26		0x08</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_ARM_APCS_FLOAT	0x10</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_ARM_PIC		0x20</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_ARM_ALIGN8		0x40 <span class="comment">/* 8-bit structure alignment is in use */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_ARM_NEW_ABI		0x80</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_ARM_OLD_ABI		0x100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_ARM_SOFT_FLOAT	0x200</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_ARM_VFP_FLOAT	0x400</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_ARM_MAVERICK_FLOAT	0x800</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_ARM_ABI_FLOAT_SOFT	0x200   <span class="comment">/* NB conflicts with EF_ARM_SOFT_FLOAT */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_ARM_ABI_FLOAT_HARD	0x400   <span class="comment">/* NB conflicts with EF_ARM_VFP_FLOAT */</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Other constants defined in the ARM ELF spec. version B-01.  */</span></span><br><span class="line"><span class="comment">/* NB. These conflict with values defined above.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_ARM_SYMSARESORTED	0x04</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_ARM_DYNSYMSUSESEGIDX	0x08</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_ARM_MAPSYMSFIRST	0x10</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_ARM_EABIMASK		0XFF000000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Constants defined in AAELF.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_ARM_BE8	    0x00800000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_ARM_LE8	    0x00400000</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_ARM_EABI_VERSION(flags)	((flags) &amp; EF_ARM_EABIMASK)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_ARM_EABI_UNKNOWN	0x00000000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_ARM_EABI_VER1	0x01000000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_ARM_EABI_VER2	0x02000000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_ARM_EABI_VER3	0x03000000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_ARM_EABI_VER4	0x04000000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_ARM_EABI_VER5	0x05000000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Additional symbol types for Thumb.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STT_ARM_TFUNC		STT_LOPROC <span class="comment">/* A Thumb function.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STT_ARM_16BIT		STT_HIPROC <span class="comment">/* A Thumb label.  */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* ARM-specific values for sh_flags */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_ARM_ENTRYSECT	0x10000000 <span class="comment">/* Section contains an entry point */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_ARM_COMDEF		0x80000000 <span class="comment">/* Section may be multiply defined</span></span></span><br><span class="line"><span class="meta"><span class="comment">					      in the input to a link step.  */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* ARM-specific program header flags */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PF_ARM_SB		0x10000000 <span class="comment">/* Segment contains the location</span></span></span><br><span class="line"><span class="meta"><span class="comment">					      addressed by the static base. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PF_ARM_PI		0x20000000 <span class="comment">/* Position-independent segment.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PF_ARM_ABS		0x40000000 <span class="comment">/* Absolute segment.  */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Processor specific values for the Phdr p_type field.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_ARM_EXIDX		(PT_LOPROC + 1)	<span class="comment">/* ARM unwind segment.  */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Processor specific values for the Shdr sh_type field.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_ARM_EXIDX		(SHT_LOPROC + 1) <span class="comment">/* ARM unwind section.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_ARM_PREEMPTMAP	(SHT_LOPROC + 2) <span class="comment">/* Preemption details.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_ARM_ATTRIBUTES	(SHT_LOPROC + 3) <span class="comment">/* ARM attributes section.  */</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* AArch64 relocs.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_NONE            0	<span class="comment">/* No relocation.  */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* ILP32 AArch64 relocs.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_P32_ABS32		  1	<span class="comment">/* Direct 32 bit.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_P32_COPY		180	<span class="comment">/* Copy symbol at runtime.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_P32_GLOB_DAT		181	<span class="comment">/* Create GOT entry.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_P32_JUMP_SLOT		182	<span class="comment">/* Create PLT entry.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_P32_RELATIVE		183	<span class="comment">/* Adjust by program base.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_P32_TLS_DTPMOD	184	<span class="comment">/* Module number, 32 bit.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_P32_TLS_DTPREL	185	<span class="comment">/* Module-relative offset, 32 bit.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_P32_TLS_TPREL		186	<span class="comment">/* TP-relative offset, 32 bit.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_P32_TLSDESC		187	<span class="comment">/* TLS Descriptor.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_P32_IRELATIVE		188	<span class="comment">/* STT_GNU_IFUNC relocation. */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* LP64 AArch64 relocs.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_ABS64         257	<span class="comment">/* Direct 64 bit. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_ABS32         258	<span class="comment">/* Direct 32 bit.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_ABS16		259	<span class="comment">/* Direct 16-bit.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_PREL64	260	<span class="comment">/* PC-relative 64-bit.	*/</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_PREL32	261	<span class="comment">/* PC-relative 32-bit.	*/</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_PREL16	262	<span class="comment">/* PC-relative 16-bit.	*/</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_MOVW_UABS_G0	263	<span class="comment">/* Dir. MOVZ imm. from bits 15:0.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_MOVW_UABS_G0_NC 264	<span class="comment">/* Likewise for MOVK; no check.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_MOVW_UABS_G1	265	<span class="comment">/* Dir. MOVZ imm. from bits 31:16.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_MOVW_UABS_G1_NC 266	<span class="comment">/* Likewise for MOVK; no check.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_MOVW_UABS_G2	267	<span class="comment">/* Dir. MOVZ imm. from bits 47:32.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_MOVW_UABS_G2_NC 268	<span class="comment">/* Likewise for MOVK; no check.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_MOVW_UABS_G3	269	<span class="comment">/* Dir. MOV&#123;K,Z&#125; imm. from 63:48.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_MOVW_SABS_G0	270	<span class="comment">/* Dir. MOV&#123;N,Z&#125; imm. from 15:0.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_MOVW_SABS_G1	271	<span class="comment">/* Dir. MOV&#123;N,Z&#125; imm. from 31:16.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_MOVW_SABS_G2	272	<span class="comment">/* Dir. MOV&#123;N,Z&#125; imm. from 47:32.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_LD_PREL_LO19	273	<span class="comment">/* PC-rel. LD imm. from bits 20:2.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_ADR_PREL_LO21	274	<span class="comment">/* PC-rel. ADR imm. from bits 20:0.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_ADR_PREL_PG_HI21 275	<span class="comment">/* Page-rel. ADRP imm. from 32:12.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_ADR_PREL_PG_HI21_NC 276 <span class="comment">/* Likewise; no overflow check.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_ADD_ABS_LO12_NC 277	<span class="comment">/* Dir. ADD imm. from bits 11:0.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_LDST8_ABS_LO12_NC 278	<span class="comment">/* Likewise for LD/ST; no check. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TSTBR14	279	<span class="comment">/* PC-rel. TBZ/TBNZ imm. from 15:2.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_CONDBR19	280	<span class="comment">/* PC-rel. cond. br. imm. from 20:2. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_JUMP26	282	<span class="comment">/* PC-rel. B imm. from bits 27:2.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_CALL26	283	<span class="comment">/* Likewise for CALL.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_LDST16_ABS_LO12_NC 284 <span class="comment">/* Dir. ADD imm. from bits 11:1.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_LDST32_ABS_LO12_NC 285 <span class="comment">/* Likewise for bits 11:2.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_LDST64_ABS_LO12_NC 286 <span class="comment">/* Likewise for bits 11:3.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_MOVW_PREL_G0	287	<span class="comment">/* PC-rel. MOV&#123;N,Z&#125; imm. from 15:0.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_MOVW_PREL_G0_NC 288	<span class="comment">/* Likewise for MOVK; no check.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_MOVW_PREL_G1	289	<span class="comment">/* PC-rel. MOV&#123;N,Z&#125; imm. from 31:16. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_MOVW_PREL_G1_NC 290	<span class="comment">/* Likewise for MOVK; no check.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_MOVW_PREL_G2	291	<span class="comment">/* PC-rel. MOV&#123;N,Z&#125; imm. from 47:32. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_MOVW_PREL_G2_NC 292	<span class="comment">/* Likewise for MOVK; no check.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_MOVW_PREL_G3	293	<span class="comment">/* PC-rel. MOV&#123;N,Z&#125; imm. from 63:48. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_LDST128_ABS_LO12_NC 299 <span class="comment">/* Dir. ADD imm. from bits 11:4.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_MOVW_GOTOFF_G0 300	<span class="comment">/* GOT-rel. off. MOV&#123;N,Z&#125; imm. 15:0. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_MOVW_GOTOFF_G0_NC 301	<span class="comment">/* Likewise for MOVK; no check.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_MOVW_GOTOFF_G1 302	<span class="comment">/* GOT-rel. o. MOV&#123;N,Z&#125; imm. 31:16.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_MOVW_GOTOFF_G1_NC 303	<span class="comment">/* Likewise for MOVK; no check.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_MOVW_GOTOFF_G2 304	<span class="comment">/* GOT-rel. o. MOV&#123;N,Z&#125; imm. 47:32.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_MOVW_GOTOFF_G2_NC 305	<span class="comment">/* Likewise for MOVK; no check.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_MOVW_GOTOFF_G3 306	<span class="comment">/* GOT-rel. o. MOV&#123;N,Z&#125; imm. 63:48.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_GOTREL64	307	<span class="comment">/* GOT-relative 64-bit.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_GOTREL32	308	<span class="comment">/* GOT-relative 32-bit.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_GOT_LD_PREL19	309	<span class="comment">/* PC-rel. GOT off. load imm. 20:2.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_LD64_GOTOFF_LO15 310	<span class="comment">/* GOT-rel. off. LD/ST imm. 14:3.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_ADR_GOT_PAGE	311	<span class="comment">/* P-page-rel. GOT off. ADRP 32:12.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_LD64_GOT_LO12_NC 312	<span class="comment">/* Dir. GOT off. LD/ST imm. 11:3.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_LD64_GOTPAGE_LO15 313	<span class="comment">/* GOT-page-rel. GOT off. LD/ST 14:3 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSGD_ADR_PREL21 512	<span class="comment">/* PC-relative ADR imm. 20:0.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSGD_ADR_PAGE21 513	<span class="comment">/* page-rel. ADRP imm. 32:12.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSGD_ADD_LO12_NC 514	<span class="comment">/* direct ADD imm. from 11:0.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSGD_MOVW_G1	515	<span class="comment">/* GOT-rel. MOV&#123;N,Z&#125; 31:16.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSGD_MOVW_G0_NC 516	<span class="comment">/* GOT-rel. MOVK imm. 15:0.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSLD_ADR_PREL21 517	<span class="comment">/* Like 512; local dynamic model.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSLD_ADR_PAGE21 518	<span class="comment">/* Like 513; local dynamic model.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSLD_ADD_LO12_NC 519	<span class="comment">/* Like 514; local dynamic model.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSLD_MOVW_G1	520	<span class="comment">/* Like 515; local dynamic model.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSLD_MOVW_G0_NC 521	<span class="comment">/* Like 516; local dynamic model.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSLD_LD_PREL19 522	<span class="comment">/* TLS PC-rel. load imm. 20:2.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSLD_MOVW_DTPREL_G2 523 <span class="comment">/* TLS DTP-rel. MOV&#123;N,Z&#125; 47:32.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSLD_MOVW_DTPREL_G1 524 <span class="comment">/* TLS DTP-rel. MOV&#123;N,Z&#125; 31:16.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSLD_MOVW_DTPREL_G1_NC 525 <span class="comment">/* Likewise; MOVK; no check.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSLD_MOVW_DTPREL_G0 526 <span class="comment">/* TLS DTP-rel. MOV&#123;N,Z&#125; 15:0.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSLD_MOVW_DTPREL_G0_NC 527 <span class="comment">/* Likewise; MOVK; no check.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSLD_ADD_DTPREL_HI12 528 <span class="comment">/* DTP-rel. ADD imm. from 23:12. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSLD_ADD_DTPREL_LO12 529 <span class="comment">/* DTP-rel. ADD imm. from 11:0.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSLD_ADD_DTPREL_LO12_NC 530 <span class="comment">/* Likewise; no ovfl. check.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSLD_LDST8_DTPREL_LO12 531 <span class="comment">/* DTP-rel. LD/ST imm. 11:0.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSLD_LDST8_DTPREL_LO12_NC 532 <span class="comment">/* Likewise; no check.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSLD_LDST16_DTPREL_LO12 533 <span class="comment">/* DTP-rel. LD/ST imm. 11:1.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSLD_LDST16_DTPREL_LO12_NC 534 <span class="comment">/* Likewise; no check.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSLD_LDST32_DTPREL_LO12 535 <span class="comment">/* DTP-rel. LD/ST imm. 11:2.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSLD_LDST32_DTPREL_LO12_NC 536 <span class="comment">/* Likewise; no check.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSLD_LDST64_DTPREL_LO12 537 <span class="comment">/* DTP-rel. LD/ST imm. 11:3.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSLD_LDST64_DTPREL_LO12_NC 538 <span class="comment">/* Likewise; no check.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSIE_MOVW_GOTTPREL_G1 539 <span class="comment">/* GOT-rel. MOV&#123;N,Z&#125; 31:16.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC 540 <span class="comment">/* GOT-rel. MOVK 15:0.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21 541 <span class="comment">/* Page-rel. ADRP 32:12.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC 542 <span class="comment">/* Direct LD off. 11:3.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSIE_LD_GOTTPREL_PREL19 543 <span class="comment">/* PC-rel. load imm. 20:2.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSLE_MOVW_TPREL_G2 544 <span class="comment">/* TLS TP-rel. MOV&#123;N,Z&#125; 47:32.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSLE_MOVW_TPREL_G1 545 <span class="comment">/* TLS TP-rel. MOV&#123;N,Z&#125; 31:16.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSLE_MOVW_TPREL_G1_NC 546 <span class="comment">/* Likewise; MOVK; no check.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSLE_MOVW_TPREL_G0 547 <span class="comment">/* TLS TP-rel. MOV&#123;N,Z&#125; 15:0.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSLE_MOVW_TPREL_G0_NC 548 <span class="comment">/* Likewise; MOVK; no check.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSLE_ADD_TPREL_HI12 549 <span class="comment">/* TP-rel. ADD imm. 23:12.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSLE_ADD_TPREL_LO12 550 <span class="comment">/* TP-rel. ADD imm. 11:0.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSLE_ADD_TPREL_LO12_NC 551 <span class="comment">/* Likewise; no ovfl. check.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSLE_LDST8_TPREL_LO12 552 <span class="comment">/* TP-rel. LD/ST off. 11:0.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSLE_LDST8_TPREL_LO12_NC 553 <span class="comment">/* Likewise; no ovfl. check. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSLE_LDST16_TPREL_LO12 554 <span class="comment">/* TP-rel. LD/ST off. 11:1.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSLE_LDST16_TPREL_LO12_NC 555 <span class="comment">/* Likewise; no check.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSLE_LDST32_TPREL_LO12 556 <span class="comment">/* TP-rel. LD/ST off. 11:2.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSLE_LDST32_TPREL_LO12_NC 557 <span class="comment">/* Likewise; no check.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSLE_LDST64_TPREL_LO12 558 <span class="comment">/* TP-rel. LD/ST off. 11:3.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSLE_LDST64_TPREL_LO12_NC 559 <span class="comment">/* Likewise; no check.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSDESC_LD_PREL19 560	<span class="comment">/* PC-rel. load immediate 20:2.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSDESC_ADR_PREL21 561 <span class="comment">/* PC-rel. ADR immediate 20:0.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSDESC_ADR_PAGE21 562 <span class="comment">/* Page-rel. ADRP imm. 32:12.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSDESC_LD64_LO12 563	<span class="comment">/* Direct LD off. from 11:3.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSDESC_ADD_LO12 564	<span class="comment">/* Direct ADD imm. from 11:0.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSDESC_OFF_G1 565	<span class="comment">/* GOT-rel. MOV&#123;N,Z&#125; imm. 31:16.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSDESC_OFF_G0_NC 566	<span class="comment">/* GOT-rel. MOVK imm. 15:0; no ck.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSDESC_LDR	567	<span class="comment">/* Relax LDR.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSDESC_ADD	568	<span class="comment">/* Relax ADD.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSDESC_CALL	569	<span class="comment">/* Relax BLR.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSLE_LDST128_TPREL_LO12 570 <span class="comment">/* TP-rel. LD/ST off. 11:4.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSLE_LDST128_TPREL_LO12_NC 571 <span class="comment">/* Likewise; no check.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSLD_LDST128_DTPREL_LO12 572 <span class="comment">/* DTP-rel. LD/ST imm. 11:4. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSLD_LDST128_DTPREL_LO12_NC 573 <span class="comment">/* Likewise; no check.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_COPY         1024	<span class="comment">/* Copy symbol at runtime.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_GLOB_DAT     1025	<span class="comment">/* Create GOT entry.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_JUMP_SLOT    1026	<span class="comment">/* Create PLT entry.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_RELATIVE     1027	<span class="comment">/* Adjust by program base.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLS_DTPMOD   1028	<span class="comment">/* Module number, 64 bit.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLS_DTPREL   1029	<span class="comment">/* Module-relative offset, 64 bit.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLS_TPREL    1030	<span class="comment">/* TP-relative offset, 64 bit.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_TLSDESC      1031	<span class="comment">/* TLS Descriptor.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_AARCH64_IRELATIVE	1032	<span class="comment">/* STT_GNU_IFUNC relocation.  */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* ARM relocs.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_NONE		0	<span class="comment">/* No reloc */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_PC24		1	<span class="comment">/* Deprecated PC relative 26</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   bit branch.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_ABS32		2	<span class="comment">/* Direct 32 bit  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_REL32		3	<span class="comment">/* PC relative 32 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_PC13		4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_ABS16		5	<span class="comment">/* Direct 16 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_ABS12		6	<span class="comment">/* Direct 12 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_THM_ABS5		7	<span class="comment">/* Direct &amp; 0x7C (LDR, STR).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_ABS8		8	<span class="comment">/* Direct 8 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_SBREL32		9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_THM_PC22		10	<span class="comment">/* PC relative 24 bit (Thumb32 BL).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_THM_PC8		11	<span class="comment">/* PC relative &amp; 0x3FC</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   (Thumb16 LDR, ADD, ADR).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_AMP_VCALL9	12</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_SWI24		13	<span class="comment">/* Obsolete static relocation.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_TLS_DESC		13      <span class="comment">/* Dynamic relocation.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_THM_SWI8		14	<span class="comment">/* Reserved.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_XPC25		15	<span class="comment">/* Reserved.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_THM_XPC22		16	<span class="comment">/* Reserved.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_TLS_DTPMOD32	17	<span class="comment">/* ID of module containing symbol */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_TLS_DTPOFF32	18	<span class="comment">/* Offset in TLS block */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_TLS_TPOFF32	19	<span class="comment">/* Offset in static TLS block */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_COPY		20	<span class="comment">/* Copy symbol at runtime */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_GLOB_DAT		21	<span class="comment">/* Create GOT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_JUMP_SLOT		22	<span class="comment">/* Create PLT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_RELATIVE		23	<span class="comment">/* Adjust by program base */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_GOTOFF		24	<span class="comment">/* 32 bit offset to GOT */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_GOTPC		25	<span class="comment">/* 32 bit PC relative offset to GOT */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_GOT32		26	<span class="comment">/* 32 bit GOT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_PLT32		27	<span class="comment">/* Deprecated, 32 bit PLT address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_CALL		28	<span class="comment">/* PC relative 24 bit (BL, BLX).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_JUMP24		29	<span class="comment">/* PC relative 24 bit</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   (B, BL&lt;cond&gt;).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_THM_JUMP24	30	<span class="comment">/* PC relative 24 bit (Thumb32 B.W).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_BASE_ABS		31	<span class="comment">/* Adjust by program base.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_ALU_PCREL_7_0	32	<span class="comment">/* Obsolete.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_ALU_PCREL_15_8	33	<span class="comment">/* Obsolete.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_ALU_PCREL_23_15	34	<span class="comment">/* Obsolete.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_LDR_SBREL_11_0	35	<span class="comment">/* Deprecated, prog. base relative.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_ALU_SBREL_19_12	36	<span class="comment">/* Deprecated, prog. base relative.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_ALU_SBREL_27_20	37	<span class="comment">/* Deprecated, prog. base relative.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_TARGET1		38</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_SBREL31		39	<span class="comment">/* Program base relative.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_V4BX		40</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_TARGET2		41</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_PREL31		42	<span class="comment">/* 32 bit PC relative.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_MOVW_ABS_NC	43	<span class="comment">/* Direct 16-bit (MOVW).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_MOVT_ABS		44	<span class="comment">/* Direct high 16-bit (MOVT).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_MOVW_PREL_NC	45	<span class="comment">/* PC relative 16-bit (MOVW).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_MOVT_PREL		46	<span class="comment">/* PC relative (MOVT).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_THM_MOVW_ABS_NC	47	<span class="comment">/* Direct 16 bit (Thumb32 MOVW).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_THM_MOVT_ABS	48	<span class="comment">/* Direct high 16 bit</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   (Thumb32 MOVT).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_THM_MOVW_PREL_NC	49	<span class="comment">/* PC relative 16 bit</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   (Thumb32 MOVW).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_THM_MOVT_PREL	50	<span class="comment">/* PC relative high 16 bit</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   (Thumb32 MOVT).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_THM_JUMP19	51	<span class="comment">/* PC relative 20 bit</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   (Thumb32 B&lt;cond&gt;.W).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_THM_JUMP6		52	<span class="comment">/* PC relative X &amp; 0x7E</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   (Thumb16 CBZ, CBNZ).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_THM_ALU_PREL_11_0	53	<span class="comment">/* PC relative 12 bit</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   (Thumb32 ADR.W).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_THM_PC12		54	<span class="comment">/* PC relative 12 bit</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   (Thumb32 LDR&#123;D,SB,H,SH&#125;).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_ABS32_NOI		55	<span class="comment">/* Direct 32-bit.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_REL32_NOI		56	<span class="comment">/* PC relative 32-bit.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_ALU_PC_G0_NC	57	<span class="comment">/* PC relative (ADD, SUB).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_ALU_PC_G0		58	<span class="comment">/* PC relative (ADD, SUB).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_ALU_PC_G1_NC	59	<span class="comment">/* PC relative (ADD, SUB).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_ALU_PC_G1		60	<span class="comment">/* PC relative (ADD, SUB).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_ALU_PC_G2		61	<span class="comment">/* PC relative (ADD, SUB).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_LDR_PC_G1		62	<span class="comment">/* PC relative (LDR,STR,LDRB,STRB).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_LDR_PC_G2		63	<span class="comment">/* PC relative (LDR,STR,LDRB,STRB).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_LDRS_PC_G0	64	<span class="comment">/* PC relative (STR&#123;D,H&#125;,</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   LDR&#123;D,SB,H,SH&#125;).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_LDRS_PC_G1	65	<span class="comment">/* PC relative (STR&#123;D,H&#125;,</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   LDR&#123;D,SB,H,SH&#125;).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_LDRS_PC_G2	66	<span class="comment">/* PC relative (STR&#123;D,H&#125;,</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   LDR&#123;D,SB,H,SH&#125;).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_LDC_PC_G0		67	<span class="comment">/* PC relative (LDC, STC).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_LDC_PC_G1		68	<span class="comment">/* PC relative (LDC, STC).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_LDC_PC_G2		69	<span class="comment">/* PC relative (LDC, STC).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_ALU_SB_G0_NC	70	<span class="comment">/* Program base relative (ADD,SUB).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_ALU_SB_G0		71	<span class="comment">/* Program base relative (ADD,SUB).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_ALU_SB_G1_NC	72	<span class="comment">/* Program base relative (ADD,SUB).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_ALU_SB_G1		73	<span class="comment">/* Program base relative (ADD,SUB).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_ALU_SB_G2		74	<span class="comment">/* Program base relative (ADD,SUB).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_LDR_SB_G0		75	<span class="comment">/* Program base relative (LDR,</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   STR, LDRB, STRB).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_LDR_SB_G1		76	<span class="comment">/* Program base relative</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   (LDR, STR, LDRB, STRB).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_LDR_SB_G2		77	<span class="comment">/* Program base relative</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   (LDR, STR, LDRB, STRB).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_LDRS_SB_G0	78	<span class="comment">/* Program base relative</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   (LDR, STR, LDRB, STRB).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_LDRS_SB_G1	79	<span class="comment">/* Program base relative</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   (LDR, STR, LDRB, STRB).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_LDRS_SB_G2	80	<span class="comment">/* Program base relative</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   (LDR, STR, LDRB, STRB).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_LDC_SB_G0		81	<span class="comment">/* Program base relative (LDC,STC).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_LDC_SB_G1		82	<span class="comment">/* Program base relative (LDC,STC).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_LDC_SB_G2		83	<span class="comment">/* Program base relative (LDC,STC).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_MOVW_BREL_NC	84	<span class="comment">/* Program base relative 16</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   bit (MOVW).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_MOVT_BREL		85	<span class="comment">/* Program base relative high</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   16 bit (MOVT).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_MOVW_BREL		86	<span class="comment">/* Program base relative 16</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   bit (MOVW).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_THM_MOVW_BREL_NC	87	<span class="comment">/* Program base relative 16</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   bit (Thumb32 MOVW).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_THM_MOVT_BREL	88	<span class="comment">/* Program base relative high</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   16 bit (Thumb32 MOVT).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_THM_MOVW_BREL	89	<span class="comment">/* Program base relative 16</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   bit (Thumb32 MOVW).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_TLS_GOTDESC	90</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_TLS_CALL		91</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_TLS_DESCSEQ	92	<span class="comment">/* TLS relaxation.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_THM_TLS_CALL	93</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_PLT32_ABS		94</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_GOT_ABS		95	<span class="comment">/* GOT entry.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_GOT_PREL		96	<span class="comment">/* PC relative GOT entry.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_GOT_BREL12	97	<span class="comment">/* GOT entry relative to GOT</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   origin (LDR).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_GOTOFF12		98	<span class="comment">/* 12 bit, GOT entry relative</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   to GOT origin (LDR, STR).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_GOTRELAX		99</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_GNU_VTENTRY	100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_GNU_VTINHERIT	101</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_THM_PC11		102	<span class="comment">/* PC relative &amp; 0xFFE (Thumb16 B).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_THM_PC9		103	<span class="comment">/* PC relative &amp; 0x1FE</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   (Thumb16 B/B&lt;cond&gt;).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_TLS_GD32		104	<span class="comment">/* PC-rel 32 bit for global dynamic</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   thread local data */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_TLS_LDM32		105	<span class="comment">/* PC-rel 32 bit for local dynamic</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   thread local data */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_TLS_LDO32		106	<span class="comment">/* 32 bit offset relative to TLS</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   block */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_TLS_IE32		107	<span class="comment">/* PC-rel 32 bit for GOT entry of</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   static TLS block offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_TLS_LE32		108	<span class="comment">/* 32 bit offset relative to static</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   TLS block */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_TLS_LDO12		109	<span class="comment">/* 12 bit relative to TLS</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   block (LDR, STR).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_TLS_LE12		110	<span class="comment">/* 12 bit relative to static</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   TLS block (LDR, STR).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_TLS_IE12GP	111	<span class="comment">/* 12 bit GOT entry relative</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   to GOT origin (LDR).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_ME_TOO		128	<span class="comment">/* Obsolete.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_THM_TLS_DESCSEQ	129</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_THM_TLS_DESCSEQ16	129</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_THM_TLS_DESCSEQ32	130</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_THM_GOT_BREL12	131	<span class="comment">/* GOT entry relative to GOT</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   origin, 12 bit (Thumb32 LDR).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_IRELATIVE		160</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_RXPC25		249</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_RSBREL32		250</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_THM_RPC22		251</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_RREL32		252</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_RABS22		253</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_RPC24		254</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_RBASE		255</span></span><br><span class="line"><span class="comment">/* Keep this the last entry.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_ARM_NUM		256</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* IA-64 specific declarations.  */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Processor specific flags for the Ehdr e_flags field.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_IA_64_MASKOS		0x0000000f	<span class="comment">/* os-specific flags */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_IA_64_ABI64		0x00000010	<span class="comment">/* 64-bit ABI */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_IA_64_ARCH		0xff000000	<span class="comment">/* arch. version mask */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Processor specific values for the Phdr p_type field.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_IA_64_ARCHEXT	(PT_LOPROC + 0)	<span class="comment">/* arch extension bits */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_IA_64_UNWIND		(PT_LOPROC + 1)	<span class="comment">/* ia64 unwind bits */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_IA_64_HP_OPT_ANOT	(PT_LOOS + 0x12)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_IA_64_HP_HSL_ANOT	(PT_LOOS + 0x13)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PT_IA_64_HP_STACK	(PT_LOOS + 0x14)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Processor specific flags for the Phdr p_flags field.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PF_IA_64_NORECOV	0x80000000	<span class="comment">/* spec insns w/o recovery */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Processor specific values for the Shdr sh_type field.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_IA_64_EXT		(SHT_LOPROC + 0) <span class="comment">/* extension bits */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHT_IA_64_UNWIND	(SHT_LOPROC + 1) <span class="comment">/* unwind bits */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Processor specific flags for the Shdr sh_flags field.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_IA_64_SHORT		0x10000000	<span class="comment">/* section near gp */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHF_IA_64_NORECOV	0x20000000	<span class="comment">/* spec insns w/o recovery */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Processor specific values for the Dyn d_tag field.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_IA_64_PLT_RESERVE	(DT_LOPROC + 0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_IA_64_NUM		1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* IA-64 relocations.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_NONE		0x00	<span class="comment">/* none */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_IMM14		0x21	<span class="comment">/* symbol + addend, add imm14 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_IMM22		0x22	<span class="comment">/* symbol + addend, add imm22 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_IMM64		0x23	<span class="comment">/* symbol + addend, mov imm64 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_DIR32MSB		0x24	<span class="comment">/* symbol + addend, data4 MSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_DIR32LSB		0x25	<span class="comment">/* symbol + addend, data4 LSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_DIR64MSB		0x26	<span class="comment">/* symbol + addend, data8 MSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_DIR64LSB		0x27	<span class="comment">/* symbol + addend, data8 LSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_GPREL22		0x2a	<span class="comment">/* @gprel(sym + add), add imm22 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_GPREL64I		0x2b	<span class="comment">/* @gprel(sym + add), mov imm64 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_GPREL32MSB	0x2c	<span class="comment">/* @gprel(sym + add), data4 MSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_GPREL32LSB	0x2d	<span class="comment">/* @gprel(sym + add), data4 LSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_GPREL64MSB	0x2e	<span class="comment">/* @gprel(sym + add), data8 MSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_GPREL64LSB	0x2f	<span class="comment">/* @gprel(sym + add), data8 LSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_LTOFF22		0x32	<span class="comment">/* @ltoff(sym + add), add imm22 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_LTOFF64I		0x33	<span class="comment">/* @ltoff(sym + add), mov imm64 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_PLTOFF22		0x3a	<span class="comment">/* @pltoff(sym + add), add imm22 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_PLTOFF64I	0x3b	<span class="comment">/* @pltoff(sym + add), mov imm64 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_PLTOFF64MSB	0x3e	<span class="comment">/* @pltoff(sym + add), data8 MSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_PLTOFF64LSB	0x3f	<span class="comment">/* @pltoff(sym + add), data8 LSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_FPTR64I		0x43	<span class="comment">/* @fptr(sym + add), mov imm64 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_FPTR32MSB	0x44	<span class="comment">/* @fptr(sym + add), data4 MSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_FPTR32LSB	0x45	<span class="comment">/* @fptr(sym + add), data4 LSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_FPTR64MSB	0x46	<span class="comment">/* @fptr(sym + add), data8 MSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_FPTR64LSB	0x47	<span class="comment">/* @fptr(sym + add), data8 LSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_PCREL60B		0x48	<span class="comment">/* @pcrel(sym + add), brl */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_PCREL21B		0x49	<span class="comment">/* @pcrel(sym + add), ptb, call */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_PCREL21M		0x4a	<span class="comment">/* @pcrel(sym + add), chk.s */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_PCREL21F		0x4b	<span class="comment">/* @pcrel(sym + add), fchkf */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_PCREL32MSB	0x4c	<span class="comment">/* @pcrel(sym + add), data4 MSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_PCREL32LSB	0x4d	<span class="comment">/* @pcrel(sym + add), data4 LSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_PCREL64MSB	0x4e	<span class="comment">/* @pcrel(sym + add), data8 MSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_PCREL64LSB	0x4f	<span class="comment">/* @pcrel(sym + add), data8 LSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_LTOFF_FPTR22	0x52	<span class="comment">/* @ltoff(@fptr(s+a)), imm22 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_LTOFF_FPTR64I	0x53	<span class="comment">/* @ltoff(@fptr(s+a)), imm64 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_LTOFF_FPTR32MSB	0x54	<span class="comment">/* @ltoff(@fptr(s+a)), data4 MSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_LTOFF_FPTR32LSB	0x55	<span class="comment">/* @ltoff(@fptr(s+a)), data4 LSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_LTOFF_FPTR64MSB	0x56	<span class="comment">/* @ltoff(@fptr(s+a)), data8 MSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_LTOFF_FPTR64LSB	0x57	<span class="comment">/* @ltoff(@fptr(s+a)), data8 LSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_SEGREL32MSB	0x5c	<span class="comment">/* @segrel(sym + add), data4 MSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_SEGREL32LSB	0x5d	<span class="comment">/* @segrel(sym + add), data4 LSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_SEGREL64MSB	0x5e	<span class="comment">/* @segrel(sym + add), data8 MSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_SEGREL64LSB	0x5f	<span class="comment">/* @segrel(sym + add), data8 LSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_SECREL32MSB	0x64	<span class="comment">/* @secrel(sym + add), data4 MSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_SECREL32LSB	0x65	<span class="comment">/* @secrel(sym + add), data4 LSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_SECREL64MSB	0x66	<span class="comment">/* @secrel(sym + add), data8 MSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_SECREL64LSB	0x67	<span class="comment">/* @secrel(sym + add), data8 LSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_REL32MSB		0x6c	<span class="comment">/* data 4 + REL */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_REL32LSB		0x6d	<span class="comment">/* data 4 + REL */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_REL64MSB		0x6e	<span class="comment">/* data 8 + REL */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_REL64LSB		0x6f	<span class="comment">/* data 8 + REL */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_LTV32MSB		0x74	<span class="comment">/* symbol + addend, data4 MSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_LTV32LSB		0x75	<span class="comment">/* symbol + addend, data4 LSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_LTV64MSB		0x76	<span class="comment">/* symbol + addend, data8 MSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_LTV64LSB		0x77	<span class="comment">/* symbol + addend, data8 LSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_PCREL21BI	0x79	<span class="comment">/* @pcrel(sym + add), 21bit inst */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_PCREL22		0x7a	<span class="comment">/* @pcrel(sym + add), 22bit inst */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_PCREL64I		0x7b	<span class="comment">/* @pcrel(sym + add), 64bit inst */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_IPLTMSB		0x80	<span class="comment">/* dynamic reloc, imported PLT, MSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_IPLTLSB		0x81	<span class="comment">/* dynamic reloc, imported PLT, LSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_COPY		0x84	<span class="comment">/* copy relocation */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_SUB		0x85	<span class="comment">/* Addend and symbol difference */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_LTOFF22X		0x86	<span class="comment">/* LTOFF22, relaxable.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_LDXMOV		0x87	<span class="comment">/* Use of LTOFF22X.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_TPREL14		0x91	<span class="comment">/* @tprel(sym + add), imm14 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_TPREL22		0x92	<span class="comment">/* @tprel(sym + add), imm22 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_TPREL64I		0x93	<span class="comment">/* @tprel(sym + add), imm64 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_TPREL64MSB	0x96	<span class="comment">/* @tprel(sym + add), data8 MSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_TPREL64LSB	0x97	<span class="comment">/* @tprel(sym + add), data8 LSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_LTOFF_TPREL22	0x9a	<span class="comment">/* @ltoff(@tprel(s+a)), imm2 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_DTPMOD64MSB	0xa6	<span class="comment">/* @dtpmod(sym + add), data8 MSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_DTPMOD64LSB	0xa7	<span class="comment">/* @dtpmod(sym + add), data8 LSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_LTOFF_DTPMOD22	0xaa	<span class="comment">/* @ltoff(@dtpmod(sym + add)), imm22 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_DTPREL14		0xb1	<span class="comment">/* @dtprel(sym + add), imm14 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_DTPREL22		0xb2	<span class="comment">/* @dtprel(sym + add), imm22 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_DTPREL64I	0xb3	<span class="comment">/* @dtprel(sym + add), imm64 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_DTPREL32MSB	0xb4	<span class="comment">/* @dtprel(sym + add), data4 MSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_DTPREL32LSB	0xb5	<span class="comment">/* @dtprel(sym + add), data4 LSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_DTPREL64MSB	0xb6	<span class="comment">/* @dtprel(sym + add), data8 MSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_DTPREL64LSB	0xb7	<span class="comment">/* @dtprel(sym + add), data8 LSB */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_IA64_LTOFF_DTPREL22	0xba	<span class="comment">/* @ltoff(@dtprel(s+a)), imm22 */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* SH specific declarations */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Processor specific flags for the ELF header e_flags field.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_SH_MACH_MASK		0x1f</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_SH_UNKNOWN		0x0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_SH1			0x1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_SH2			0x2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_SH3			0x3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_SH_DSP		0x4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_SH3_DSP		0x5</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_SH4AL_DSP		0x6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_SH3E			0x8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_SH4			0x9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_SH2E			0xb</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_SH4A			0xc</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_SH2A			0xd</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_SH4_NOFPU		0x10</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_SH4A_NOFPU		0x11</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_SH4_NOMMU_NOFPU	0x12</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_SH2A_NOFPU		0x13</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_SH3_NOMMU		0x14</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_SH2A_SH4_NOFPU	0x15</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_SH2A_SH3_NOFPU	0x16</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_SH2A_SH4		0x17</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_SH2A_SH3E		0x18</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* SH relocs.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SH_NONE		0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SH_DIR32		1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SH_REL32		2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SH_DIR8WPN		3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SH_IND12W		4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SH_DIR8WPL		5</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SH_DIR8WPZ		6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SH_DIR8BP		7</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SH_DIR8W		8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SH_DIR8L		9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SH_SWITCH16		25</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SH_SWITCH32		26</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SH_USES		27</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SH_COUNT		28</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SH_ALIGN		29</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SH_CODE		30</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SH_DATA		31</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SH_LABEL		32</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SH_SWITCH8		33</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SH_GNU_VTINHERIT	34</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SH_GNU_VTENTRY	35</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SH_TLS_GD_32		144</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SH_TLS_LD_32		145</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SH_TLS_LDO_32		146</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SH_TLS_IE_32		147</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SH_TLS_LE_32		148</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SH_TLS_DTPMOD32	149</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SH_TLS_DTPOFF32	150</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SH_TLS_TPOFF32	151</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SH_GOT32		160</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SH_PLT32		161</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SH_COPY		162</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SH_GLOB_DAT		163</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SH_JMP_SLOT		164</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SH_RELATIVE		165</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SH_GOTOFF		166</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SH_GOTPC		167</span></span><br><span class="line"><span class="comment">/* Keep this the last entry.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>	R_SH_NUM		256</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* S/390 specific definitions.  */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Valid values for the e_flags field.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EF_S390_HIGH_GPRS    0x00000001  <span class="comment">/* High GPRs kernel facility needed.  */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Additional s390 relocs */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_NONE		0	<span class="comment">/* No reloc.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_8			1	<span class="comment">/* Direct 8 bit.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_12		2	<span class="comment">/* Direct 12 bit.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_16		3	<span class="comment">/* Direct 16 bit.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_32		4	<span class="comment">/* Direct 32 bit.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_PC32		5	<span class="comment">/* PC relative 32 bit.	*/</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_GOT12		6	<span class="comment">/* 12 bit GOT offset.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_GOT32		7	<span class="comment">/* 32 bit GOT offset.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_PLT32		8	<span class="comment">/* 32 bit PC relative PLT address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_COPY		9	<span class="comment">/* Copy symbol at runtime.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_GLOB_DAT		10	<span class="comment">/* Create GOT entry.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_JMP_SLOT		11	<span class="comment">/* Create PLT entry.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_RELATIVE		12	<span class="comment">/* Adjust by program base.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_GOTOFF32		13	<span class="comment">/* 32 bit offset to GOT.	 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_GOTPC		14	<span class="comment">/* 32 bit PC relative offset to GOT.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_GOT16		15	<span class="comment">/* 16 bit GOT offset.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_PC16		16	<span class="comment">/* PC relative 16 bit.	*/</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_PC16DBL		17	<span class="comment">/* PC relative 16 bit shifted by 1.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_PLT16DBL		18	<span class="comment">/* 16 bit PC rel. PLT shifted by 1.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_PC32DBL		19	<span class="comment">/* PC relative 32 bit shifted by 1.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_PLT32DBL		20	<span class="comment">/* 32 bit PC rel. PLT shifted by 1.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_GOTPCDBL		21	<span class="comment">/* 32 bit PC rel. GOT shifted by 1.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_64		22	<span class="comment">/* Direct 64 bit.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_PC64		23	<span class="comment">/* PC relative 64 bit.	*/</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_GOT64		24	<span class="comment">/* 64 bit GOT offset.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_PLT64		25	<span class="comment">/* 64 bit PC relative PLT address.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_GOTENT		26	<span class="comment">/* 32 bit PC rel. to GOT entry &gt;&gt; 1. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_GOTOFF16		27	<span class="comment">/* 16 bit offset to GOT. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_GOTOFF64		28	<span class="comment">/* 64 bit offset to GOT. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_GOTPLT12		29	<span class="comment">/* 12 bit offset to jump slot.	*/</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_GOTPLT16		30	<span class="comment">/* 16 bit offset to jump slot.	*/</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_GOTPLT32		31	<span class="comment">/* 32 bit offset to jump slot.	*/</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_GOTPLT64		32	<span class="comment">/* 64 bit offset to jump slot.	*/</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_GOTPLTENT		33	<span class="comment">/* 32 bit rel. offset to jump slot.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_PLTOFF16		34	<span class="comment">/* 16 bit offset from GOT to PLT. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_PLTOFF32		35	<span class="comment">/* 32 bit offset from GOT to PLT. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_PLTOFF64		36	<span class="comment">/* 16 bit offset from GOT to PLT. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_TLS_LOAD		37	<span class="comment">/* Tag for load insn in TLS code.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_TLS_GDCALL	38	<span class="comment">/* Tag for function call in general</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   dynamic TLS code. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_TLS_LDCALL	39	<span class="comment">/* Tag for function call in local</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   dynamic TLS code. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_TLS_GD32		40	<span class="comment">/* Direct 32 bit for general dynamic</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   thread local data.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_TLS_GD64		41	<span class="comment">/* Direct 64 bit for general dynamic</span></span></span><br><span class="line"><span class="meta"><span class="comment">					  thread local data.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_TLS_GOTIE12	42	<span class="comment">/* 12 bit GOT offset for static TLS</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   block offset.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_TLS_GOTIE32	43	<span class="comment">/* 32 bit GOT offset for static TLS</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   block offset.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_TLS_GOTIE64	44	<span class="comment">/* 64 bit GOT offset for static TLS</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   block offset. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_TLS_LDM32		45	<span class="comment">/* Direct 32 bit for local dynamic</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   thread local data in LE code.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_TLS_LDM64		46	<span class="comment">/* Direct 64 bit for local dynamic</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   thread local data in LE code.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_TLS_IE32		47	<span class="comment">/* 32 bit address of GOT entry for</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   negated static TLS block offset.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_TLS_IE64		48	<span class="comment">/* 64 bit address of GOT entry for</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   negated static TLS block offset.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_TLS_IEENT		49	<span class="comment">/* 32 bit rel. offset to GOT entry for</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   negated static TLS block offset.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_TLS_LE32		50	<span class="comment">/* 32 bit negated offset relative to</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   static TLS block.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_TLS_LE64		51	<span class="comment">/* 64 bit negated offset relative to</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   static TLS block.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_TLS_LDO32		52	<span class="comment">/* 32 bit offset relative to TLS</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   block.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_TLS_LDO64		53	<span class="comment">/* 64 bit offset relative to TLS</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   block.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_TLS_DTPMOD	54	<span class="comment">/* ID of module containing symbol.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_TLS_DTPOFF	55	<span class="comment">/* Offset in TLS block.	 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_TLS_TPOFF		56	<span class="comment">/* Negated offset in static TLS</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   block.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_20		57	<span class="comment">/* Direct 20 bit.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_GOT20		58	<span class="comment">/* 20 bit GOT offset.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_GOTPLT20		59	<span class="comment">/* 20 bit offset to jump slot.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_TLS_GOTIE20	60	<span class="comment">/* 20 bit GOT offset for static TLS</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   block offset.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_IRELATIVE         61      <span class="comment">/* STT_GNU_IFUNC relocation.  */</span></span></span><br><span class="line"><span class="comment">/* Keep this the last entry.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_390_NUM		62</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* CRIS relocations.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_CRIS_NONE		0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_CRIS_8		1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_CRIS_16		2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_CRIS_32		3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_CRIS_8_PCREL		4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_CRIS_16_PCREL		5</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_CRIS_32_PCREL		6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_CRIS_GNU_VTINHERIT	7</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_CRIS_GNU_VTENTRY	8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_CRIS_COPY		9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_CRIS_GLOB_DAT		10</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_CRIS_JUMP_SLOT	11</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_CRIS_RELATIVE		12</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_CRIS_16_GOT		13</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_CRIS_32_GOT		14</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_CRIS_16_GOTPLT	15</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_CRIS_32_GOTPLT	16</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_CRIS_32_GOTREL	17</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_CRIS_32_PLT_GOTREL	18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_CRIS_32_PLT_PCREL	19</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_CRIS_NUM		20</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* AMD x86-64 relocations.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_NONE		0	<span class="comment">/* No reloc */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_64		1	<span class="comment">/* Direct 64 bit  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_PC32		2	<span class="comment">/* PC relative 32 bit signed */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_GOT32		3	<span class="comment">/* 32 bit GOT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_PLT32		4	<span class="comment">/* 32 bit PLT address */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_COPY		5	<span class="comment">/* Copy symbol at runtime */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_GLOB_DAT	6	<span class="comment">/* Create GOT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_JUMP_SLOT	7	<span class="comment">/* Create PLT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_RELATIVE	8	<span class="comment">/* Adjust by program base */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_GOTPCREL	9	<span class="comment">/* 32 bit signed PC relative</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   offset to GOT */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_32		10	<span class="comment">/* Direct 32 bit zero extended */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_32S		11	<span class="comment">/* Direct 32 bit sign extended */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_16		12	<span class="comment">/* Direct 16 bit zero extended */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_PC16		13	<span class="comment">/* 16 bit sign extended pc relative */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_8		14	<span class="comment">/* Direct 8 bit sign extended  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_PC8		15	<span class="comment">/* 8 bit sign extended pc relative */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_DTPMOD64	16	<span class="comment">/* ID of module containing symbol */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_DTPOFF64	17	<span class="comment">/* Offset in module's TLS block */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_TPOFF64	18	<span class="comment">/* Offset in initial TLS block */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_TLSGD		19	<span class="comment">/* 32 bit signed PC relative offset</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   to two GOT entries for GD symbol */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_TLSLD		20	<span class="comment">/* 32 bit signed PC relative offset</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   to two GOT entries for LD symbol */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_DTPOFF32	21	<span class="comment">/* Offset in TLS block */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_GOTTPOFF	22	<span class="comment">/* 32 bit signed PC relative offset</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   to GOT entry for IE symbol */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_TPOFF32	23	<span class="comment">/* Offset in initial TLS block */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_PC64		24	<span class="comment">/* PC relative 64 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_GOTOFF64	25	<span class="comment">/* 64 bit offset to GOT */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_GOTPC32	26	<span class="comment">/* 32 bit signed pc relative</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   offset to GOT */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_GOT64		27	<span class="comment">/* 64-bit GOT entry offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_GOTPCREL64	28	<span class="comment">/* 64-bit PC relative offset</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   to GOT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_GOTPC64	29	<span class="comment">/* 64-bit PC relative offset to GOT */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_GOTPLT64	30 	<span class="comment">/* like GOT64, says PLT entry needed */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_PLTOFF64	31	<span class="comment">/* 64-bit GOT relative offset</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   to PLT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_SIZE32		32	<span class="comment">/* Size of symbol plus 32-bit addend */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_SIZE64		33	<span class="comment">/* Size of symbol plus 64-bit addend */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_GOTPC32_TLSDESC 34	<span class="comment">/* GOT offset for TLS descriptor.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_TLSDESC_CALL   35	<span class="comment">/* Marker for call through TLS</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   descriptor.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_TLSDESC        36	<span class="comment">/* TLS descriptor.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_IRELATIVE	37	<span class="comment">/* Adjust indirectly by program base */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_RELATIVE64	38	<span class="comment">/* 64-bit adjust by program base */</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_X86_64_NUM		39</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* AM33 relocations.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MN10300_NONE		0	<span class="comment">/* No reloc.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MN10300_32		1	<span class="comment">/* Direct 32 bit.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MN10300_16		2	<span class="comment">/* Direct 16 bit.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MN10300_8		3	<span class="comment">/* Direct 8 bit.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MN10300_PCREL32	4	<span class="comment">/* PC-relative 32-bit.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MN10300_PCREL16	5	<span class="comment">/* PC-relative 16-bit signed.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MN10300_PCREL8	6	<span class="comment">/* PC-relative 8-bit signed.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MN10300_GNU_VTINHERIT	7	<span class="comment">/* Ancient C++ vtable garbage... */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MN10300_GNU_VTENTRY	8	<span class="comment">/* ... collection annotation.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MN10300_24		9	<span class="comment">/* Direct 24 bit.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MN10300_GOTPC32	10	<span class="comment">/* 32-bit PCrel offset to GOT.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MN10300_GOTPC16	11	<span class="comment">/* 16-bit PCrel offset to GOT.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MN10300_GOTOFF32	12	<span class="comment">/* 32-bit offset from GOT.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MN10300_GOTOFF24	13	<span class="comment">/* 24-bit offset from GOT.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MN10300_GOTOFF16	14	<span class="comment">/* 16-bit offset from GOT.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MN10300_PLT32		15	<span class="comment">/* 32-bit PCrel to PLT entry.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MN10300_PLT16		16	<span class="comment">/* 16-bit PCrel to PLT entry.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MN10300_GOT32		17	<span class="comment">/* 32-bit offset to GOT entry.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MN10300_GOT24		18	<span class="comment">/* 24-bit offset to GOT entry.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MN10300_GOT16		19	<span class="comment">/* 16-bit offset to GOT entry.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MN10300_COPY		20	<span class="comment">/* Copy symbol at runtime.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MN10300_GLOB_DAT	21	<span class="comment">/* Create GOT entry.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MN10300_JMP_SLOT	22	<span class="comment">/* Create PLT entry.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MN10300_RELATIVE	23	<span class="comment">/* Adjust by program base.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MN10300_TLS_GD	24	<span class="comment">/* 32-bit offset for global dynamic.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MN10300_TLS_LD	25	<span class="comment">/* 32-bit offset for local dynamic.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MN10300_TLS_LDO	26	<span class="comment">/* Module-relative offset.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MN10300_TLS_GOTIE	27	<span class="comment">/* GOT offset for static TLS block</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   offset.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MN10300_TLS_IE	28	<span class="comment">/* GOT address for static TLS block</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   offset.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MN10300_TLS_LE	29	<span class="comment">/* Offset relative to static TLS</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   block.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MN10300_TLS_DTPMOD	30	<span class="comment">/* ID of module containing symbol.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MN10300_TLS_DTPOFF	31	<span class="comment">/* Offset in module TLS block.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MN10300_TLS_TPOFF	32	<span class="comment">/* Offset in static TLS block.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MN10300_SYM_DIFF	33	<span class="comment">/* Adjustment for next reloc as needed</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   by linker relaxation.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MN10300_ALIGN		34	<span class="comment">/* Alignment requirement for linker</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   relaxation.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MN10300_NUM		35</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* M32R relocs.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_M32R_NONE		0	<span class="comment">/* No reloc. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_M32R_16		1	<span class="comment">/* Direct 16 bit. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_M32R_32		2	<span class="comment">/* Direct 32 bit. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_M32R_24		3	<span class="comment">/* Direct 24 bit. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_M32R_10_PCREL		4	<span class="comment">/* PC relative 10 bit shifted. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_M32R_18_PCREL		5	<span class="comment">/* PC relative 18 bit shifted. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_M32R_26_PCREL		6	<span class="comment">/* PC relative 26 bit shifted. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_M32R_HI16_ULO		7	<span class="comment">/* High 16 bit with unsigned low. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_M32R_HI16_SLO		8	<span class="comment">/* High 16 bit with signed low. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_M32R_LO16		9	<span class="comment">/* Low 16 bit. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_M32R_SDA16		10	<span class="comment">/* 16 bit offset in SDA. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_M32R_GNU_VTINHERIT	11</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_M32R_GNU_VTENTRY	12</span></span><br><span class="line"><span class="comment">/* M32R relocs use SHT_RELA.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_M32R_16_RELA		33	<span class="comment">/* Direct 16 bit. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_M32R_32_RELA		34	<span class="comment">/* Direct 32 bit. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_M32R_24_RELA		35	<span class="comment">/* Direct 24 bit. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_M32R_10_PCREL_RELA	36	<span class="comment">/* PC relative 10 bit shifted. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_M32R_18_PCREL_RELA	37	<span class="comment">/* PC relative 18 bit shifted. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_M32R_26_PCREL_RELA	38	<span class="comment">/* PC relative 26 bit shifted. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_M32R_HI16_ULO_RELA	39	<span class="comment">/* High 16 bit with unsigned low */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_M32R_HI16_SLO_RELA	40	<span class="comment">/* High 16 bit with signed low */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_M32R_LO16_RELA	41	<span class="comment">/* Low 16 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_M32R_SDA16_RELA	42	<span class="comment">/* 16 bit offset in SDA */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_M32R_RELA_GNU_VTINHERIT	43</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_M32R_RELA_GNU_VTENTRY	44</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_M32R_REL32		45	<span class="comment">/* PC relative 32 bit.  */</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_M32R_GOT24		48	<span class="comment">/* 24 bit GOT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_M32R_26_PLTREL	49	<span class="comment">/* 26 bit PC relative to PLT shifted */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_M32R_COPY		50	<span class="comment">/* Copy symbol at runtime */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_M32R_GLOB_DAT		51	<span class="comment">/* Create GOT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_M32R_JMP_SLOT		52	<span class="comment">/* Create PLT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_M32R_RELATIVE		53	<span class="comment">/* Adjust by program base */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_M32R_GOTOFF		54	<span class="comment">/* 24 bit offset to GOT */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_M32R_GOTPC24		55	<span class="comment">/* 24 bit PC relative offset to GOT */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_M32R_GOT16_HI_ULO	56	<span class="comment">/* High 16 bit GOT entry with unsigned</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   low */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_M32R_GOT16_HI_SLO	57	<span class="comment">/* High 16 bit GOT entry with signed</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   low */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_M32R_GOT16_LO		58	<span class="comment">/* Low 16 bit GOT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_M32R_GOTPC_HI_ULO	59	<span class="comment">/* High 16 bit PC relative offset to</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   GOT with unsigned low */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_M32R_GOTPC_HI_SLO	60	<span class="comment">/* High 16 bit PC relative offset to</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   GOT with signed low */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_M32R_GOTPC_LO		61	<span class="comment">/* Low 16 bit PC relative offset to</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   GOT */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_M32R_GOTOFF_HI_ULO	62	<span class="comment">/* High 16 bit offset to GOT</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   with unsigned low */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_M32R_GOTOFF_HI_SLO	63	<span class="comment">/* High 16 bit offset to GOT</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   with signed low */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_M32R_GOTOFF_LO	64	<span class="comment">/* Low 16 bit offset to GOT */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_M32R_NUM		256	<span class="comment">/* Keep this the last entry. */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* MicroBlaze relocations */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MICROBLAZE_NONE		0	<span class="comment">/* No reloc. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MICROBLAZE_32 		1	<span class="comment">/* Direct 32 bit. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MICROBLAZE_32_PCREL		2	<span class="comment">/* PC relative 32 bit. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MICROBLAZE_64_PCREL		3	<span class="comment">/* PC relative 64 bit. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MICROBLAZE_32_PCREL_LO	4	<span class="comment">/* Low 16 bits of PCREL32. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MICROBLAZE_64 		5	<span class="comment">/* Direct 64 bit. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MICROBLAZE_32_LO		6	<span class="comment">/* Low 16 bit. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MICROBLAZE_SRO32		7	<span class="comment">/* Read-only small data area. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MICROBLAZE_SRW32		8	<span class="comment">/* Read-write small data area. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MICROBLAZE_64_NONE		9	<span class="comment">/* No reloc. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MICROBLAZE_32_SYM_OP_SYM	10	<span class="comment">/* Symbol Op Symbol relocation. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MICROBLAZE_GNU_VTINHERIT	11	<span class="comment">/* GNU C++ vtable hierarchy. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MICROBLAZE_GNU_VTENTRY	12	<span class="comment">/* GNU C++ vtable member usage. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MICROBLAZE_GOTPC_64		13	<span class="comment">/* PC-relative GOT offset.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MICROBLAZE_GOT_64		14	<span class="comment">/* GOT entry offset.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MICROBLAZE_PLT_64		15	<span class="comment">/* PLT offset (PC-relative).  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MICROBLAZE_REL		16	<span class="comment">/* Adjust by program base.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MICROBLAZE_JUMP_SLOT		17	<span class="comment">/* Create PLT entry.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MICROBLAZE_GLOB_DAT		18	<span class="comment">/* Create GOT entry.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MICROBLAZE_GOTOFF_64		19	<span class="comment">/* 64 bit offset to GOT. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MICROBLAZE_GOTOFF_32		20	<span class="comment">/* 32 bit offset to GOT. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MICROBLAZE_COPY		21	<span class="comment">/* Runtime copy.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MICROBLAZE_TLS		22	<span class="comment">/* TLS Reloc. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MICROBLAZE_TLSGD		23	<span class="comment">/* TLS General Dynamic. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MICROBLAZE_TLSLD		24	<span class="comment">/* TLS Local Dynamic. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MICROBLAZE_TLSDTPMOD32	25	<span class="comment">/* TLS Module ID. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MICROBLAZE_TLSDTPREL32	26	<span class="comment">/* TLS Offset Within TLS Block. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MICROBLAZE_TLSDTPREL64	27	<span class="comment">/* TLS Offset Within TLS Block. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MICROBLAZE_TLSGOTTPREL32	28	<span class="comment">/* TLS Offset From Thread Pointer. */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_MICROBLAZE_TLSTPREL32 	29	<span class="comment">/* TLS Offset From Thread Pointer. */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Legal values for d_tag (dynamic entry type).  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_NIOS2_GP             0x70000002 <span class="comment">/* Address of _gp.  */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Nios II relocations.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_NONE		0	<span class="comment">/* No reloc.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_S16		1	<span class="comment">/* Direct signed 16 bit.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_U16		2	<span class="comment">/* Direct unsigned 16 bit.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_PCREL16		3	<span class="comment">/* PC relative 16 bit.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_CALL26		4	<span class="comment">/* Direct call.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_IMM5		5	<span class="comment">/* 5 bit constant expression.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_CACHE_OPX	6	<span class="comment">/* 5 bit expression, shift 22.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_IMM6		7	<span class="comment">/* 6 bit constant expression.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_IMM8		8	<span class="comment">/* 8 bit constant expression.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_HI16		9	<span class="comment">/* High 16 bit.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_LO16		10	<span class="comment">/* Low 16 bit.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_HIADJ16		11	<span class="comment">/* High 16 bit, adjusted.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_BFD_RELOC_32	12	<span class="comment">/* 32 bit symbol value + addend.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_BFD_RELOC_16	13	<span class="comment">/* 16 bit symbol value + addend.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_BFD_RELOC_8	14	<span class="comment">/* 8 bit symbol value + addend.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_GPREL		15	<span class="comment">/* 16 bit GP pointer offset.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_GNU_VTINHERIT	16	<span class="comment">/* GNU C++ vtable hierarchy.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_GNU_VTENTRY	17	<span class="comment">/* GNU C++ vtable member usage.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_UJMP		18	<span class="comment">/* Unconditional branch.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_CJMP		19	<span class="comment">/* Conditional branch.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_CALLR		20	<span class="comment">/* Indirect call through register.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_ALIGN		21	<span class="comment">/* Alignment requirement for</span></span></span><br><span class="line"><span class="meta"><span class="comment">					   linker relaxation.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_GOT16		22	<span class="comment">/* 16 bit GOT entry.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_CALL16		23	<span class="comment">/* 16 bit GOT entry for function.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_GOTOFF_LO	24	<span class="comment">/* %lo of offset to GOT pointer.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_GOTOFF_HA	25	<span class="comment">/* %hiadj of offset to GOT pointer.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_PCREL_LO	26	<span class="comment">/* %lo of PC relative offset.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_PCREL_HA	27	<span class="comment">/* %hiadj of PC relative offset.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_TLS_GD16	28	<span class="comment">/* 16 bit GOT offset for TLS GD.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_TLS_LDM16	29	<span class="comment">/* 16 bit GOT offset for TLS LDM.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_TLS_LDO16	30	<span class="comment">/* 16 bit module relative offset.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_TLS_IE16	31	<span class="comment">/* 16 bit GOT offset for TLS IE.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_TLS_LE16	32	<span class="comment">/* 16 bit LE TP-relative offset.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_TLS_DTPMOD	33	<span class="comment">/* Module number.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_TLS_DTPREL	34	<span class="comment">/* Module-relative offset.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_TLS_TPREL	35	<span class="comment">/* TP-relative offset.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_COPY		36	<span class="comment">/* Copy symbol at runtime.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_GLOB_DAT	37	<span class="comment">/* Create GOT entry.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_JUMP_SLOT	38	<span class="comment">/* Create PLT entry.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_RELATIVE	39	<span class="comment">/* Adjust by program base.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_GOTOFF		40	<span class="comment">/* 16 bit offset to GOT pointer.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_CALL26_NOAT	41	<span class="comment">/* Direct call in .noat section.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_GOT_LO		42	<span class="comment">/* %lo() of GOT entry.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_GOT_HA		43	<span class="comment">/* %hiadj() of GOT entry.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_CALL_LO		44	<span class="comment">/* %lo() of function GOT entry.  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_NIOS2_CALL_HA		45	<span class="comment">/* %hiadj() of function GOT entry.  */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* TILEPro relocations.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_NONE		0	<span class="comment">/* No reloc */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_32		1	<span class="comment">/* Direct 32 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_16		2	<span class="comment">/* Direct 16 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_8		3	<span class="comment">/* Direct 8 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_32_PCREL	4	<span class="comment">/* PC relative 32 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_16_PCREL	5	<span class="comment">/* PC relative 16 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_8_PCREL	6	<span class="comment">/* PC relative 8 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_LO16		7	<span class="comment">/* Low 16 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_HI16		8	<span class="comment">/* High 16 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_HA16		9	<span class="comment">/* High 16 bit, adjusted */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_COPY		10	<span class="comment">/* Copy relocation */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_GLOB_DAT	11	<span class="comment">/* Create GOT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_JMP_SLOT	12	<span class="comment">/* Create PLT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_RELATIVE	13	<span class="comment">/* Adjust by program base */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_BROFF_X1	14	<span class="comment">/* X1 pipe branch offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_JOFFLONG_X1	15	<span class="comment">/* X1 pipe jump offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_JOFFLONG_X1_PLT 16	<span class="comment">/* X1 pipe jump offset to PLT */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM8_X0	17	<span class="comment">/* X0 pipe 8-bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM8_Y0	18	<span class="comment">/* Y0 pipe 8-bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM8_X1	19	<span class="comment">/* X1 pipe 8-bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM8_Y1	20	<span class="comment">/* Y1 pipe 8-bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_MT_IMM15_X1	21	<span class="comment">/* X1 pipe mtspr */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_MF_IMM15_X1	22	<span class="comment">/* X1 pipe mfspr */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X0	23	<span class="comment">/* X0 pipe 16-bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X1	24	<span class="comment">/* X1 pipe 16-bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X0_LO	25	<span class="comment">/* X0 pipe low 16-bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X1_LO	26	<span class="comment">/* X1 pipe low 16-bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X0_HI	27	<span class="comment">/* X0 pipe high 16-bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X1_HI	28	<span class="comment">/* X1 pipe high 16-bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X0_HA	29	<span class="comment">/* X0 pipe high 16-bit, adjusted */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X1_HA	30	<span class="comment">/* X1 pipe high 16-bit, adjusted */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X0_PCREL 31	<span class="comment">/* X0 pipe PC relative 16 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X1_PCREL 32	<span class="comment">/* X1 pipe PC relative 16 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X0_LO_PCREL 33	<span class="comment">/* X0 pipe PC relative low 16 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X1_LO_PCREL 34	<span class="comment">/* X1 pipe PC relative low 16 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X0_HI_PCREL 35	<span class="comment">/* X0 pipe PC relative high 16 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X1_HI_PCREL 36	<span class="comment">/* X1 pipe PC relative high 16 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X0_HA_PCREL 37	<span class="comment">/* X0 pipe PC relative ha() 16 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X1_HA_PCREL 38	<span class="comment">/* X1 pipe PC relative ha() 16 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X0_GOT	39	<span class="comment">/* X0 pipe 16-bit GOT offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X1_GOT	40	<span class="comment">/* X1 pipe 16-bit GOT offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X0_GOT_LO 41	<span class="comment">/* X0 pipe low 16-bit GOT offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X1_GOT_LO 42	<span class="comment">/* X1 pipe low 16-bit GOT offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X0_GOT_HI 43	<span class="comment">/* X0 pipe high 16-bit GOT offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X1_GOT_HI 44	<span class="comment">/* X1 pipe high 16-bit GOT offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X0_GOT_HA 45	<span class="comment">/* X0 pipe ha() 16-bit GOT offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X1_GOT_HA 46	<span class="comment">/* X1 pipe ha() 16-bit GOT offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_MMSTART_X0	47	<span class="comment">/* X0 pipe mm "start" */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_MMEND_X0	48	<span class="comment">/* X0 pipe mm "end" */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_MMSTART_X1	49	<span class="comment">/* X1 pipe mm "start" */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_MMEND_X1	50	<span class="comment">/* X1 pipe mm "end" */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_SHAMT_X0	51	<span class="comment">/* X0 pipe shift amount */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_SHAMT_X1	52	<span class="comment">/* X1 pipe shift amount */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_SHAMT_Y0	53	<span class="comment">/* Y0 pipe shift amount */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_SHAMT_Y1	54	<span class="comment">/* Y1 pipe shift amount */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_DEST_IMM8_X1	55	<span class="comment">/* X1 pipe destination 8-bit */</span></span></span><br><span class="line"><span class="comment">/* Relocs 56-59 are currently not defined.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_TLS_GD_CALL	60	<span class="comment">/* "jal" for TLS GD */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM8_X0_TLS_GD_ADD 61	<span class="comment">/* X0 pipe "addi" for TLS GD */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM8_X1_TLS_GD_ADD 62	<span class="comment">/* X1 pipe "addi" for TLS GD */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM8_Y0_TLS_GD_ADD 63	<span class="comment">/* Y0 pipe "addi" for TLS GD */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM8_Y1_TLS_GD_ADD 64	<span class="comment">/* Y1 pipe "addi" for TLS GD */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_TLS_IE_LOAD	65	<span class="comment">/* "lw_tls" for TLS IE */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X0_TLS_GD 66	<span class="comment">/* X0 pipe 16-bit TLS GD offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X1_TLS_GD 67	<span class="comment">/* X1 pipe 16-bit TLS GD offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X0_TLS_GD_LO 68	<span class="comment">/* X0 pipe low 16-bit TLS GD offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X1_TLS_GD_LO 69	<span class="comment">/* X1 pipe low 16-bit TLS GD offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X0_TLS_GD_HI 70	<span class="comment">/* X0 pipe high 16-bit TLS GD offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X1_TLS_GD_HI 71	<span class="comment">/* X1 pipe high 16-bit TLS GD offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X0_TLS_GD_HA 72	<span class="comment">/* X0 pipe ha() 16-bit TLS GD offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X1_TLS_GD_HA 73	<span class="comment">/* X1 pipe ha() 16-bit TLS GD offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X0_TLS_IE 74	<span class="comment">/* X0 pipe 16-bit TLS IE offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X1_TLS_IE 75	<span class="comment">/* X1 pipe 16-bit TLS IE offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X0_TLS_IE_LO 76	<span class="comment">/* X0 pipe low 16-bit TLS IE offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X1_TLS_IE_LO 77	<span class="comment">/* X1 pipe low 16-bit TLS IE offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X0_TLS_IE_HI 78	<span class="comment">/* X0 pipe high 16-bit TLS IE offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X1_TLS_IE_HI 79	<span class="comment">/* X1 pipe high 16-bit TLS IE offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X0_TLS_IE_HA 80	<span class="comment">/* X0 pipe ha() 16-bit TLS IE offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X1_TLS_IE_HA 81	<span class="comment">/* X1 pipe ha() 16-bit TLS IE offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_TLS_DTPMOD32	82	<span class="comment">/* ID of module containing symbol */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_TLS_DTPOFF32	83	<span class="comment">/* Offset in TLS block */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_TLS_TPOFF32	84	<span class="comment">/* Offset in static TLS block */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X0_TLS_LE 85	<span class="comment">/* X0 pipe 16-bit TLS LE offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X1_TLS_LE 86	<span class="comment">/* X1 pipe 16-bit TLS LE offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X0_TLS_LE_LO 87	<span class="comment">/* X0 pipe low 16-bit TLS LE offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X1_TLS_LE_LO 88	<span class="comment">/* X1 pipe low 16-bit TLS LE offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X0_TLS_LE_HI 89	<span class="comment">/* X0 pipe high 16-bit TLS LE offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X1_TLS_LE_HI 90	<span class="comment">/* X1 pipe high 16-bit TLS LE offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X0_TLS_LE_HA 91	<span class="comment">/* X0 pipe ha() 16-bit TLS LE offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_IMM16_X1_TLS_LE_HA 92	<span class="comment">/* X1 pipe ha() 16-bit TLS LE offset */</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_GNU_VTINHERIT	128	<span class="comment">/* GNU C++ vtable hierarchy */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_GNU_VTENTRY	129	<span class="comment">/* GNU C++ vtable member usage */</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEPRO_NUM		130</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* TILE-Gx relocations.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_NONE		0	<span class="comment">/* No reloc */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_64		1	<span class="comment">/* Direct 64 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_32		2	<span class="comment">/* Direct 32 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_16		3	<span class="comment">/* Direct 16 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_8		4	<span class="comment">/* Direct 8 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_64_PCREL	5	<span class="comment">/* PC relative 64 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_32_PCREL	6	<span class="comment">/* PC relative 32 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_16_PCREL	7	<span class="comment">/* PC relative 16 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_8_PCREL	8	<span class="comment">/* PC relative 8 bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_HW0		9	<span class="comment">/* hword 0 16-bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_HW1		10	<span class="comment">/* hword 1 16-bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_HW2		11	<span class="comment">/* hword 2 16-bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_HW3		12	<span class="comment">/* hword 3 16-bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_HW0_LAST	13	<span class="comment">/* last hword 0 16-bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_HW1_LAST	14	<span class="comment">/* last hword 1 16-bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_HW2_LAST	15	<span class="comment">/* last hword 2 16-bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_COPY		16	<span class="comment">/* Copy relocation */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_GLOB_DAT	17	<span class="comment">/* Create GOT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_JMP_SLOT	18	<span class="comment">/* Create PLT entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_RELATIVE	19	<span class="comment">/* Adjust by program base */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_BROFF_X1	20	<span class="comment">/* X1 pipe branch offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_JUMPOFF_X1	21	<span class="comment">/* X1 pipe jump offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_JUMPOFF_X1_PLT	22	<span class="comment">/* X1 pipe jump offset to PLT */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM8_X0	23	<span class="comment">/* X0 pipe 8-bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM8_Y0	24	<span class="comment">/* Y0 pipe 8-bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM8_X1	25	<span class="comment">/* X1 pipe 8-bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM8_Y1	26	<span class="comment">/* Y1 pipe 8-bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_DEST_IMM8_X1	27	<span class="comment">/* X1 pipe destination 8-bit */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_MT_IMM14_X1	28	<span class="comment">/* X1 pipe mtspr */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_MF_IMM14_X1	29	<span class="comment">/* X1 pipe mfspr */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_MMSTART_X0	30	<span class="comment">/* X0 pipe mm "start" */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_MMEND_X0	31	<span class="comment">/* X0 pipe mm "end" */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_SHAMT_X0	32	<span class="comment">/* X0 pipe shift amount */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_SHAMT_X1	33	<span class="comment">/* X1 pipe shift amount */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_SHAMT_Y0	34	<span class="comment">/* Y0 pipe shift amount */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_SHAMT_Y1	35	<span class="comment">/* Y1 pipe shift amount */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X0_HW0	36	<span class="comment">/* X0 pipe hword 0 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X1_HW0	37	<span class="comment">/* X1 pipe hword 0 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X0_HW1	38	<span class="comment">/* X0 pipe hword 1 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X1_HW1	39	<span class="comment">/* X1 pipe hword 1 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X0_HW2	40	<span class="comment">/* X0 pipe hword 2 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X1_HW2	41	<span class="comment">/* X1 pipe hword 2 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X0_HW3	42	<span class="comment">/* X0 pipe hword 3 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X1_HW3	43	<span class="comment">/* X1 pipe hword 3 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X0_HW0_LAST 44	<span class="comment">/* X0 pipe last hword 0 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X1_HW0_LAST 45	<span class="comment">/* X1 pipe last hword 0 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X0_HW1_LAST 46	<span class="comment">/* X0 pipe last hword 1 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X1_HW1_LAST 47	<span class="comment">/* X1 pipe last hword 1 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X0_HW2_LAST 48	<span class="comment">/* X0 pipe last hword 2 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X1_HW2_LAST 49	<span class="comment">/* X1 pipe last hword 2 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X0_HW0_PCREL 50	<span class="comment">/* X0 pipe PC relative hword 0 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X1_HW0_PCREL 51	<span class="comment">/* X1 pipe PC relative hword 0 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X0_HW1_PCREL 52	<span class="comment">/* X0 pipe PC relative hword 1 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X1_HW1_PCREL 53	<span class="comment">/* X1 pipe PC relative hword 1 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X0_HW2_PCREL 54	<span class="comment">/* X0 pipe PC relative hword 2 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X1_HW2_PCREL 55	<span class="comment">/* X1 pipe PC relative hword 2 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X0_HW3_PCREL 56	<span class="comment">/* X0 pipe PC relative hword 3 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X1_HW3_PCREL 57	<span class="comment">/* X1 pipe PC relative hword 3 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X0_HW0_LAST_PCREL 58 <span class="comment">/* X0 pipe PC-rel last hword 0 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X1_HW0_LAST_PCREL 59 <span class="comment">/* X1 pipe PC-rel last hword 0 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X0_HW1_LAST_PCREL 60 <span class="comment">/* X0 pipe PC-rel last hword 1 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X1_HW1_LAST_PCREL 61 <span class="comment">/* X1 pipe PC-rel last hword 1 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X0_HW2_LAST_PCREL 62 <span class="comment">/* X0 pipe PC-rel last hword 2 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X1_HW2_LAST_PCREL 63 <span class="comment">/* X1 pipe PC-rel last hword 2 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X0_HW0_GOT 64	<span class="comment">/* X0 pipe hword 0 GOT offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X1_HW0_GOT 65	<span class="comment">/* X1 pipe hword 0 GOT offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X0_HW0_PLT_PCREL 66 <span class="comment">/* X0 pipe PC-rel PLT hword 0 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X1_HW0_PLT_PCREL 67 <span class="comment">/* X1 pipe PC-rel PLT hword 0 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X0_HW1_PLT_PCREL 68 <span class="comment">/* X0 pipe PC-rel PLT hword 1 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X1_HW1_PLT_PCREL 69 <span class="comment">/* X1 pipe PC-rel PLT hword 1 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X0_HW2_PLT_PCREL 70 <span class="comment">/* X0 pipe PC-rel PLT hword 2 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X1_HW2_PLT_PCREL 71 <span class="comment">/* X1 pipe PC-rel PLT hword 2 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X0_HW0_LAST_GOT 72 <span class="comment">/* X0 pipe last hword 0 GOT offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X1_HW0_LAST_GOT 73 <span class="comment">/* X1 pipe last hword 0 GOT offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X0_HW1_LAST_GOT 74 <span class="comment">/* X0 pipe last hword 1 GOT offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X1_HW1_LAST_GOT 75 <span class="comment">/* X1 pipe last hword 1 GOT offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X0_HW3_PLT_PCREL 76 <span class="comment">/* X0 pipe PC-rel PLT hword 3 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X1_HW3_PLT_PCREL 77 <span class="comment">/* X1 pipe PC-rel PLT hword 3 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X0_HW0_TLS_GD 78	<span class="comment">/* X0 pipe hword 0 TLS GD offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X1_HW0_TLS_GD 79	<span class="comment">/* X1 pipe hword 0 TLS GD offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X0_HW0_TLS_LE 80	<span class="comment">/* X0 pipe hword 0 TLS LE offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X1_HW0_TLS_LE 81	<span class="comment">/* X1 pipe hword 0 TLS LE offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X0_HW0_LAST_TLS_LE 82 <span class="comment">/* X0 pipe last hword 0 LE off */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X1_HW0_LAST_TLS_LE 83 <span class="comment">/* X1 pipe last hword 0 LE off */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X0_HW1_LAST_TLS_LE 84 <span class="comment">/* X0 pipe last hword 1 LE off */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X1_HW1_LAST_TLS_LE 85 <span class="comment">/* X1 pipe last hword 1 LE off */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X0_HW0_LAST_TLS_GD 86 <span class="comment">/* X0 pipe last hword 0 GD off */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X1_HW0_LAST_TLS_GD 87 <span class="comment">/* X1 pipe last hword 0 GD off */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X0_HW1_LAST_TLS_GD 88 <span class="comment">/* X0 pipe last hword 1 GD off */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X1_HW1_LAST_TLS_GD 89 <span class="comment">/* X1 pipe last hword 1 GD off */</span></span></span><br><span class="line"><span class="comment">/* Relocs 90-91 are currently not defined.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X0_HW0_TLS_IE 92	<span class="comment">/* X0 pipe hword 0 TLS IE offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X1_HW0_TLS_IE 93	<span class="comment">/* X1 pipe hword 0 TLS IE offset */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X0_HW0_LAST_PLT_PCREL 94 <span class="comment">/* X0 pipe PC-rel PLT last hword 0 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X1_HW0_LAST_PLT_PCREL 95 <span class="comment">/* X1 pipe PC-rel PLT last hword 0 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X0_HW1_LAST_PLT_PCREL 96 <span class="comment">/* X0 pipe PC-rel PLT last hword 1 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X1_HW1_LAST_PLT_PCREL 97 <span class="comment">/* X1 pipe PC-rel PLT last hword 1 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X0_HW2_LAST_PLT_PCREL 98 <span class="comment">/* X0 pipe PC-rel PLT last hword 2 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X1_HW2_LAST_PLT_PCREL 99 <span class="comment">/* X1 pipe PC-rel PLT last hword 2 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X0_HW0_LAST_TLS_IE 100 <span class="comment">/* X0 pipe last hword 0 IE off */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X1_HW0_LAST_TLS_IE 101 <span class="comment">/* X1 pipe last hword 0 IE off */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X0_HW1_LAST_TLS_IE 102 <span class="comment">/* X0 pipe last hword 1 IE off */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM16_X1_HW1_LAST_TLS_IE 103 <span class="comment">/* X1 pipe last hword 1 IE off */</span></span></span><br><span class="line"><span class="comment">/* Relocs 104-105 are currently not defined.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_TLS_DTPMOD64	106	<span class="comment">/* 64-bit ID of symbol's module */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_TLS_DTPOFF64	107	<span class="comment">/* 64-bit offset in TLS block */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_TLS_TPOFF64	108	<span class="comment">/* 64-bit offset in static TLS block */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_TLS_DTPMOD32	109	<span class="comment">/* 32-bit ID of symbol's module */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_TLS_DTPOFF32	110	<span class="comment">/* 32-bit offset in TLS block */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_TLS_TPOFF32	111	<span class="comment">/* 32-bit offset in static TLS block */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_TLS_GD_CALL	112	<span class="comment">/* "jal" for TLS GD */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM8_X0_TLS_GD_ADD 113	<span class="comment">/* X0 pipe "addi" for TLS GD */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM8_X1_TLS_GD_ADD 114	<span class="comment">/* X1 pipe "addi" for TLS GD */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM8_Y0_TLS_GD_ADD 115	<span class="comment">/* Y0 pipe "addi" for TLS GD */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM8_Y1_TLS_GD_ADD 116	<span class="comment">/* Y1 pipe "addi" for TLS GD */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_TLS_IE_LOAD	117	<span class="comment">/* "ld_tls" for TLS IE */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM8_X0_TLS_ADD 118	<span class="comment">/* X0 pipe "addi" for TLS GD/IE */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM8_X1_TLS_ADD 119	<span class="comment">/* X1 pipe "addi" for TLS GD/IE */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM8_Y0_TLS_ADD 120	<span class="comment">/* Y0 pipe "addi" for TLS GD/IE */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_IMM8_Y1_TLS_ADD 121	<span class="comment">/* Y1 pipe "addi" for TLS GD/IE */</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_GNU_VTINHERIT	128	<span class="comment">/* GNU C++ vtable hierarchy */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_GNU_VTENTRY	129	<span class="comment">/* GNU C++ vtable member usage */</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R_TILEGX_NUM		130</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">__END_DECLS</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span>	<span class="comment">/* elf.h */</span></span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Color Filter Array</title>
    <url>/2019/07/28/Color-Filter-Array/</url>
    <content><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p><strong>色彩滤波阵列</strong>，英文名 <strong><em>Color Filter Array</em></strong> 或 <strong><em>Color Filter Mosaic</em></strong> ，简称 <strong>CFA</strong> 或 <strong><em>CFM</em></strong>，是像素传感器上方的一层马赛克覆层，用于采集图像的色彩信息。一般的光电传感器只能感应光的强度，不能区分光的波长（色彩），因此图像传感器需要通过色彩滤波（<strong><em>Color Filter</em></strong>）以获取像素点的色彩信息。</p>
<p><strong>Color Filter 根据波长对光线进行滤波，特定的 Color Filter 只允许特定波长的光通过</strong>。例如，最常见的 <strong><em>Bayer Filter</em></strong>，又称 <strong><em>RGGB</em></strong> Filter，图像传感器通过 Bayer Filter 获得像素点上红色（Red）、绿色（Green）和蓝色（Blue）光的强度信息，再据此通过色彩还原算法（<strong><em>Demosaicing Algorithm</em></strong>）推算像素点的色值。CFA的光谱滤波特性和色彩还原算法决定了CFA色彩采集能力。通常图像传感器的光子通带和CFA的光谱响应范围会大于可见光频谱范围，因此保证图像传感器能够捕获可见光范围内所有颜色信息。</p>
<p>如下 <em>图 1</em>  <strong><em>左</em></strong> 示例图像传感器采集图像的过程。图像传感器通常包括上百万个微小的光腔或感光点来采集图像。在按下相机快门曝光开始的瞬间，系统会开启这些感光点以收集光子，将光子作为电信号存储起来。曝光结束后，系统闭合感光点，通过评估电信号的强度来判断光子多少，并根据比特深度（<a href="https://en.wikipedia.org/wiki/Color_depth" target="_blank" rel="noopener">Bit Depth</a>）将其量化为数字值。</p>
<p>然而，以上过程只能产生灰度图片，不能识别色彩。如 <em>图 1</em> <strong><em>右</em></strong> 所示 Bayer Filter 叠加在感光点上方，只允许特定波长的光进入感光点。理论上，一般图像传感器的每个感光点只能采集三原色（ <strong><em>RGB</em></strong>）的一种颜色，从而丢弃另外 <strong><em>2/3</em></strong> 的光。因此，图像传感器需要通过还原算法，判断每个像素点上另外两种颜色光的强度，最后推算出该像素点的色值。</p>
<p><img src="/2019/07/28/Color-Filter-Array/light_cavities.png" alt="图1. 感光点示意图"></p>
<p>根据应用的特点，市场上可能存在不同的 CFA 配置（ <strong><em>Pattern</em></strong>）。在常见的车载前视（Front Camera）应用中，CFA采用 Red-Monochrome（ <strong><em>RCCC</em></strong> ）配置。这种配置中，CFA滤波器结构中包括 3 个空白（ <strong><em>Clear -C</em></strong> ）和 1 个 <strong><em>红光</em></strong> 滤波器。相比于 Bayer Filter 在处理过程中会丢弃 2/3 的光源，<strong><em>RCCC</em></strong> CFA 信号 <strong><em>灵敏度更高</em></strong>，同时通过红色光的强度也足以判断汽车前灯（白色）和尾灯（红色）等情况。</p>
<h1 id="Bayer-Filter"><a href="#Bayer-Filter" class="headerlink" title="Bayer Filter"></a>Bayer Filter</h1><p>发明于 <strong><em>1976</em></strong> 年的 <strong><em>Bayer Filter</em></strong> 是目前市场上用途最广的CFA，Bayer Filter CFA 配置中包括: <strong><em>1</em></strong> 个<font color="#ff0000">红</font>光、<strong><em>2</em></strong> 个<font color="#00ff00">绿</font>光和 <strong><em>1</em></strong> 个<font color="#0000ff">蓝</font>光 滤波器（25% <font color="#ff0000">R</font>ed, 50% <font color="#00ff00">G</font>reen, 25% Blu<font color="#0000ff">B</font>）。由于人眼天生对于绿色比较敏感，Bayer Filter 设计绿色光通透性要好于其它两种颜色。这种处理方式相比于等同处理RGB三种颜色，它所还原出来的图像，在人眼看来，噪点更低，细节更加清晰。</p>
<p><em>如图</em> <strong><em>2</em></strong> 所示 Bayer Filter 的结构中，两个绿色光滤波器处在对角线位置，它们和红色、蓝色滤波器形成 <strong><em>2x2</em></strong> 的矩阵。</p>
<p><img src="/2019/07/28/Color-Filter-Array/bayer_filter_structure.png" alt="图2. Bayer Filter CFA结构图"></p>
<p><em>图 3</em> 表示光源经过 <strong><em>Bayer Filter</em></strong> 后的发生的情况，只有特定颜色的光可以穿过相应颜色的滤波器。（图 <strong><em>1</em></strong> 与图 <strong><em>3</em></strong> 表述原理相近！）</p>
<p><img src="/2019/07/28/Color-Filter-Array/bayer_principle.png" alt="图3. Bayer Filter工作原理"></p>
<p>在 <strong><em>Bayer Filter</em></strong> 处理色彩信息时，会将 <strong><em>2x2</em></strong> 滤波矩阵当做最基本的全色值单元，通过统计单元内 <strong><em>RGB</em></strong> 光强度的比例，计算得出该像素点的色值，如<em>图 4</em> 所示。</p>
<p><img src="/2019/07/28/Color-Filter-Array/bayer_basic_element.png" alt="图4. Bayer Filter基本色彩单元"></p>
<p>如果 CFA 的基本色彩单元按照图 4 示意的顺序排列，则每四个像素只有一个色值，即纵向和横向分辨率只有实际像素的一半。Bayer Filter 实际上是采用的基本色彩单元是如图 5 所示叠加式分布。在图像中心位置，这种叠加式分布的色彩单元分辨率与像素分辨率一致，精度高；但在图像边缘位置，由于滤波器缺失，精度略差。</p>
<p><img src="/2019/07/28/Color-Filter-Array/bayer_element_array.png" alt="图5. Bayer Filter基本色彩单元分布"></p>
<h1 id="Clarity"><a href="#Clarity" class="headerlink" title="Clarity +"></a>Clarity +</h1><p><strong>Clarity+</strong> 是 <strong>ONSEMI</strong>（原 <strong>Aptina</strong> ）图像传感器的一种技术，指将原 Bayer Filter 滤波器中绿光滤波器改为透传（<strong>Clear</strong>）的结构。这样做的好处主要体现在采集光源的强度更高和专用的频带响应技术可以有效提高图像的质量（信噪比和可靠性等）。<a href="https://3gltesummit.qualcomm.com/sites/default/files/pdf/3GLTE2015_ONSemi.pdf" target="_blank" rel="noopener">技术说明见</a> 。</p>
<p><img src="/2019/07/28/Color-Filter-Array/clarity_cfa.png" alt="图6. Clarity + CFA配置"></p>
<p>表 1 列出 ONSEMI 几种 <strong><em>Clarity+</em></strong> CFA 与 <strong><em>Bayer Filter</em></strong> 特性的比较，采用 <strong><em>Clarity+</em></strong> 技术可有效提高图像的信噪比，但在色彩识别上表现差。</p>
<p><img src="/2019/07/28/Color-Filter-Array/clarity_vs_bayer.png" alt="表1. Clarity+ CFA特性比较"></p>
<p>图 7 示意 Clarity+ CFA的工作原理。</p>
<p><img src="/2019/07/28/Color-Filter-Array/clarity_principle.png" alt="图7. Clarity+ CFA工作原理"></p>
<p>图 <strong><em>8</em></strong> 和图 <strong><em>9</em></strong> 分别示例用 <strong><em>Bayer Filter</em></strong> 和 <strong><em>Clarity+</em></strong> CFA拍摄照片的对比（户外照片来源：<a href="https://www.vision-systems.com/cameras-accessories/image-sensors/article/16737376/image-sensors-build-on-the-brilliance-of-bayer" target="_blank" rel="noopener">Vision System</a>，室内照片来源：<a href="https://3gltesummit.qualcomm.com/sites/default/files/pdf/3GLTE2015_ONSemi.pdf" target="_blank" rel="noopener">ONSEMI</a>）。从照片中可以看到，<strong><em>Clarity+</em></strong> CFA在弱光环境下的表现要优于 <strong><em>Bayer Filter</em></strong>。</p>
<p><img src="/2019/07/28/Color-Filter-Array/clarity_bayer_outside.png" alt="图8. Bayer &amp; Clarity + CFA 户外拍摄对比"></p>
<p><img src="/2019/07/28/Color-Filter-Array/clarity_bayer_inside.png" alt="图9. Bayer &amp; Clarity + CFA 室内拍摄对比"></p>
<p>总之，适合人眼的，并不一定适合于机器。在用于自动驾驶图像识别等领域，根据应用的特点，系统设计者应灵活选择不同配置的 CFA。</p>
<h1 id="RCCC"><a href="#RCCC" class="headerlink" title="RCCC"></a>RCCC</h1><p><strong><em>RCCC</em></strong> CFA的 75% 部分为透传，其余 <strong><em>25%</em></strong> 为感受红光的滤波器。图 <strong><em>10</em></strong> 示意 <strong><em>RCCC</em></strong> 的色彩滤波器的排列。<strong><em>RCCC</em></strong> 的优点是光灵敏度高，适用于弱光环境。由于 RCCC 只有红色光滤波器，因此主要用在对于红色标识敏感的场合，比如交通灯检测。</p>
<p><img src="/2019/07/28/Color-Filter-Array/rccc.png" alt="图10. RCCC配置"></p>
<h1 id="RCCB"><a href="#RCCB" class="headerlink" title="RCCB"></a>RCCB</h1><p><strong><em>RCCB</em></strong> CFA的 <strong><em>50%</em></strong> 部分为透传，其余红光蓝光滤波器各占 <strong><em>25%</em></strong>。图 11 示意RCCB的色彩滤波器的排列。<strong><em>RCCB</em></strong> 的弱光敏感性比 <strong><em>RCCC</em></strong> 稍差（<strong><em>Clear</em></strong> 部分少嘛），但它分辨色彩的能力更好，采集的图像既可以用于机器分析，也可以用于人眼观察。</p>
<p><img src="/2019/07/28/Color-Filter-Array/rccb.png" alt="图11. RCCB配置"></p>
<h1 id="Mono"><a href="#Mono" class="headerlink" title="Mono"></a>Mono</h1><p><strong><em>Monochrome</em></strong> 为<strong><em>100%</em></strong> 透传，它不能分辨色彩。<strong><em>Mono</em></strong> 配置的弱光灵敏度最高，仅用于对颜色无识别要求的场合，如驾驶员状态检测等。</p>
<p><img src="/2019/07/28/Color-Filter-Array/monochrome.png" alt="图12. Monochrome配置"></p>
<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><blockquote>
<p><a href="http://www.wangdali.net/cfa/" target="_blank" rel="noopener">Color Filter Array</a><br><a href="https://en.wikipedia.org/wiki/Color_filter_array" target="_blank" rel="noopener">Color Filter Array -Wikipedia</a><br><a href="https://en.wikipedia.org/wiki/Bayer_filter" target="_blank" rel="noopener">Bayer Filter -Wikipedia</a><br><a href="https://3gltesummit.qualcomm.com/sites/default/files/pdf/3GLTE2015_ONSemi.pdf" target="_blank" rel="noopener">Slides on Qualcomm Summit  -ON</a><br><a href="https://www.cambridgeincolour.com/tutorials/camera-sensors.htm" target="_blank" rel="noopener">Understanding Digital Camera Sensors -Cambridge in Colour</a><br><a href="https://www.vision-systems.com/cameras-accessories/image-sensors/article/16737376/image-sensors-build-on-the-brilliance-of-bayer" target="_blank" rel="noopener">Image Sensors Build on the Brilliance of Bayer -Wikipedia</a><br><a href="http://image-sensors-world.blogspot.com/2013/07/aptina-explains-clarity-technology.html" target="_blank" rel="noopener">Aptina Explains Clarity+ Technology, Reveals 1.1um Pixel Product -Blogspot</a><br><a href="http://www.ti.com/lit/an/spraca8/spraca8.pdf" target="_blank" rel="noopener">ISS Image Pipe for Alternate CFA Formats -TI</a></p>
</blockquote>
]]></content>
      <categories>
        <category>图像处理</category>
      </categories>
      <tags>
        <tag>图像处理</tag>
      </tags>
  </entry>
  <entry>
    <title>ESXi下安装iKuai和LEDE双软路由</title>
    <url>/2019/03/26/ESXi%E4%B8%8B%E5%AE%89%E8%A3%85iKuai%E5%92%8CLEDE%E5%8F%8C%E8%BD%AF%E8%B7%AF%E7%94%B1/</url>
    <content><![CDATA[<h1 id="硬件清单"><a href="#硬件清单" class="headerlink" title="硬件清单"></a>硬件清单</h1><ul>
<li>CPU: I5 7200U</li>
<li>网卡: 6个Intel 82583V 10/100/1000以太网</li>
<li>内存: 金士顿 DDR4 2400 8G</li>
<li>SSD: 三星 EVO850</li>
<li>USB: 3.0x4个</li>
<li>电源: 技嘉12V</li>
</ul>
<h1 id="网络拓扑图"><a href="#网络拓扑图" class="headerlink" title="网络拓扑图"></a>网络拓扑图</h1><p><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/network-topology.png" alt="网络拓扑图">    </p>
<ul>
<li>第1个网口为管理口    </li>
<li>第6个网口为wan口    </li>
</ul>
<h1 id="ESXi"><a href="#ESXi" class="headerlink" title="ESXi"></a>ESXi</h1><h2 id="下载ESXi"><a href="#下载ESXi" class="headerlink" title="下载ESXi"></a>下载ESXi</h2><p>到VMWare官方网站<a href="https://my.vmware.com/cn/web/vmware/info/slug/datacenter_cloud_infrastructure/vmware_vsphere/6_7" target="_blank" rel="noopener">下载ESXi 6.7版本</a>，下载的时候需要注册账号，然后申请试用，序列号请自行购买正版(或Google)。</p>
<h2 id="制作启动U盘"><a href="#制作启动U盘" class="headerlink" title="制作启动U盘"></a>制作启动U盘</h2><ul>
<li><p><strong>用老毛桃工具</strong><br>到老毛桃官网下载<a href="http://www.laomaotao.org/" target="_blank" rel="noopener">装机版老毛桃软件</a>:<br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/laomaotao.png" alt="下载装机版老毛桃"><br>然后用老毛桃烧写U盘:<br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/laomaotao1.png" alt="老毛桃烧写U盘"><br>在烧写好的U盘根目录中创建一个名字为<strong>MYEXT</strong>的文件夹，将下载的ESXi的ISO镜像放入该文件夹下:<br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/laomaotao2.png" alt="创建MYEXT文件夹"><br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/laomaotao3.png" alt="MYEXT文件夹放入镜像">    </p>
</li>
<li><p><strong>用软碟通UltraISO</strong><br>到软碟通官网下载UltraISO，然后启动并试用:<br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/UltraISO.png" alt="启动UltraISO"><br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/UltraISO1.png" alt="导入ISO镜像"><br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/UltraISO2.png" alt="写入U盘"><br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/UltraISO3.png" alt="启动烧写"><br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/UltraISO4.png" alt="烧写完成">     </p>
</li>
</ul>
<h2 id="软路由U盘启动安装ESXi"><a href="#软路由U盘启动安装ESXi" class="headerlink" title="软路由U盘启动安装ESXi"></a>软路由U盘启动安装ESXi</h2><ul>
<li><p><strong>UltraISO</strong>: U盘启动，按照提示安装即可。</p>
</li>
<li><p><strong>老毛桃</strong>: 用U盘启动软路由，进入PE，选在老毛桃PE中运行<strong>自定义镜像</strong>选项，选择刚刚放入MYEXT文件夹中的ESXi镜像，按照提示安装ESXi即可。<br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/laomaotao4.png" alt="老毛桃PE启界面"><br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/laomaotao5.png" alt="运行自定义镜像"><br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/laomaotao6.png" alt="选择镜像">    </p>
</li>
</ul>
<p>进入安装界面:<br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/ESXi-install1.png" alt="ESXi"><br>选择安装位置(我这里为了截图方便，我安装在VMWare虚拟机里)，多块硬盘已经要注意选择安装在哪块硬盘以及别安装在U盘上:<br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/ESXi-install-Local.png" alt="选择安装ESXi的位置"><br>设置好密码(默认用户名为:root)，按照提示安装即可，注意安装结束的时候会提示<strong>先移除安装介质/U盘</strong>，然后按下回车重启:<br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/ESXi-install2.png" alt="移除安装介质重启"><br>若启动前已经将网线插入则ESXi默认会根据网络动态获取IP，若启动前没有插网线则IP会为0.0.0.0:<br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/ESXi-install-finished.png" alt="安装完成后重启界面">    </p>
<h2 id="设置ESXi"><a href="#设置ESXi" class="headerlink" title="设置ESXi"></a>设置ESXi</h2><p>安装完ESXi后重启，然后按<strong>F2</strong>进入ESXi设置界面:<br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/ESXi-setting1.png" alt="进入设置界面"><br>选择<strong>Configure Management Network</strong>进入设置:<br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/ESXi-setting2.png" alt="Configure Management Network"><br>选择<strong>IPv4 Configuration</strong>选项卡，然后回车:<br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/ESXi-setting3.png" alt="IPv4 Configuration"><br>光标移动到<strong>Set Static IPv4 address and network configuration</strong>，然后用空格键选择，并设置：<br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/ESXi-setting4.png" alt="Set Static IPv4 address and network configuration">     </p>
<ul>
<li><strong>IPv4 Address</strong>: <strong>10.10.10.100</strong>    </li>
<li><strong>Subnet Mask</strong>: <strong>255.255.255.0</strong>    </li>
<li><strong>Default Gateway</strong>: <strong>10.10.10.10</strong>    </li>
<li>这里设置的默认网关<code>10.10.10.10</code>是给<code>iKuai</code>的后台地址</li>
</ul>
<p>按下回车键，然后按ESC键并输入Y保存设置:<br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/ESXi-setting5.png" alt="保存设置"><br>设置生效后的界面如下，可以看出IP变为静态的了:<br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/ESXi-setting6.png" alt="设置生效后的界面">    </p>
<h2 id="ESXi的web端设置"><a href="#ESXi的web端设置" class="headerlink" title="ESXi的web端设置"></a>ESXi的web端设置</h2><h3 id="设置笔记本网卡IP"><a href="#设置笔记本网卡IP" class="headerlink" title="设置笔记本网卡IP"></a>设置笔记本网卡IP</h3><p>将笔记本的网口用网线连接到软路由的<strong>LAN1</strong>口，并将笔记本有线网卡的IPv4设置为:    </p>
<ul>
<li><strong>IPv4</strong>: <strong>10.10.10.111</strong></li>
<li><strong>子网掩码</strong>: <strong>255.255.255.0</strong></li>
<li><strong>默认网关/路由器</strong>: <strong>10.10.10.10</strong><br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/ESXi-PC-IP.png" alt="笔记本IP设置">    </li>
</ul>
<p>浏览器打开<strong>10.10.10.100</strong>，然后输入设置的密码进入ESXi后台(用户名为root，密码为安装ESXi时候设置的密码):<br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/ESXi-web-login.png" alt="ESXI WEB login">    </p>
<h3 id="激活ESXi"><a href="#激活ESXi" class="headerlink" title="激活ESXi"></a>激活ESXi</h3><p>默认ESXi有试用期限制，解除限制需要用序列号激活ESXi:<br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/ESXi-activate.png" alt="ESXi activate">    </p>
<h3 id="打开虚拟机交换机的混杂模式"><a href="#打开虚拟机交换机的混杂模式" class="headerlink" title="打开虚拟机交换机的混杂模式"></a>打开虚拟机交换机的混杂模式</h3><p>网络 -&gt; 虚拟交换机 -&gt; vSwitcho -&gt; 编辑设置 -&gt; 安全 -&gt; 混杂模式 -&gt; 接受<br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/ESXi-NetCard-Setting.png" alt="打开虚拟机的混杂模式">    </p>
<h3 id="网卡非直通情况"><a href="#网卡非直通情况" class="headerlink" title="网卡非直通情况"></a>网卡非直通情况</h3><ul>
<li>网络 -&gt; 虚拟交换机 -&gt; 添加交换机(多少个网口添加多少个) -&gt; 安全 -&gt; 全部接受</li>
<li>网络 -&gt; 端口组 -&gt; 添加端口组(多少个网口添加多少个) -&gt; 安全 -&gt; 全部接受</li>
</ul>
<h3 id="网卡直通情况"><a href="#网卡直通情况" class="headerlink" title="网卡直通情况"></a>网卡直通情况</h3><p>主机 -&gt; 硬件 -&gt; PCI设备 -&gt; 下拉选择<code>支持直通</code>来筛选网卡 -&gt; 选中后5个(共6个)端口。<br><strong>这里要注意不要将第一个(第一个好记)端口/LAN1设置为直通，否则导致进不去ESXi后台。</strong>    </p>
<p><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/ESXi-networkcard.png" alt="网卡直通激活前"><br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/ESXi-networkcard1.png" alt="网卡直通激活后">     </p>
<p>设置好以后要单机<strong>重新引导主机</strong>，否则可能导致进不去ESXi的后台。    </p>
<h1 id="iKuai"><a href="#iKuai" class="headerlink" title="iKuai"></a>iKuai</h1><h2 id="安装iKuai"><a href="#安装iKuai" class="headerlink" title="安装iKuai"></a>安装iKuai</h2><p>下载iKuai的ISO文件，然后<strong>创建iKuai虚拟机的流程为</strong>:<br>存储-&gt;数据存储浏览器-&gt;创建文件夹-&gt;iKuai-&gt;将iKuai的ISO镜像上传到该文件夹下-&gt;虚拟机-&gt;新建虚拟机-&gt;客户机操作系统linux-&gt;客户机操作系统版本-&gt;其他64位-&gt;CD/DVD选择刚刚上传的iKuai的ISO文件-&gt;内存要勾选<strong>预留所有客户机内存(全部锁定)</strong><br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/iKuai-install1.png" alt="安装iKuai step1"><br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/iKuai-install2.png" alt="安装iKuai step2"><br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/iKuai-install3.png" alt="安装iKuai step3"><br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/iKuai-install4.png" alt="安装iKuai step4"><br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/iKuai-install5.png" alt="安装iKuai step5"><br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/iKuai-install6.png" alt="安装iKuai step6"><br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/iKuai-install7.png" alt="安装iKuai step7">     </p>
<p><strong>这里要特别注意iKuai虚拟机的内存&gt;=4G</strong> ，否则会出现以下错误:    </p>
<p><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/iKuai-install-error.png" alt="iKuai install error">    </p>
<h3 id="网卡非直通情况-1"><a href="#网卡非直通情况-1" class="headerlink" title="网卡非直通情况"></a>网卡非直通情况</h3><p>重新编辑iKuai虚拟机设 -&gt; 添加网络适配器并选择第6块虚拟网卡<strong>VM Network5</strong> ，配置好的界面如下:<br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/iKuai-feizhitong.png" alt="网卡非直通">   </p>
<h3 id="网卡直通情况-1"><a href="#网卡直通情况-1" class="headerlink" title="网卡直通情况"></a>网卡直通情况</h3><p>重新编辑iKuai虚拟机设 -&gt; 添加PCI设备并选择对应的第6块网卡，配置好的界面如下:<br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/iKuai-zhitong.png" alt="网卡直通">   </p>
<h2 id="设置iKuai"><a href="#设置iKuai" class="headerlink" title="设置iKuai"></a>设置iKuai</h2><p>启动iKuai虚拟机会自动安装iKuai，安装完以后按下回车键，显示:<br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/iKuai-lan.png" alt="iKuai finished"><br>输入数字2，然后设置LAN1的IP地址:10.10.10.10:<br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/iKuai-lan1.png" alt="iKuai finished"><br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/iKuai-lan2.png" alt="iKuai finished"><br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/iKuai-finished.png" alt="iKuai 设置IP">    </p>
<h2 id="iKuai的web端设置"><a href="#iKuai的web端设置" class="headerlink" title="iKuai的web端设置"></a>iKuai的web端设置</h2><p>电脑浏览器打开<strong>10.10.10.10</strong>，默认用户名<code>admin</code>，默认密码<code>admin</code>，进入iKuai的web客户端绑定WAN口:<br>网络设置 -&gt; 内外网设置 -&gt; 在接口状态会有一个空闲的wan1口 -&gt; 外网网口单击一下绑定上述空闲的wan1口即可:<br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/iKuai-web1.png" alt="iKuai WEB1"><br>开启一条DHCP服务: 网络设置 -&gt; DHCP服务端 -&gt; 添加DCHP服务:   </p>
<ul>
<li>客户端地址: 10.10.10.101 - 10.10.10.254</li>
<li>子网掩码: 255.255.255.0</li>
<li>网关: 10.10.10.1   这里的网关是LEDE后台的地址</li>
<li>首选DNS: 114.114.114.114</li>
<li>备选DNS: 223.5.5.5<br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/iKuai-web2.png" alt="iKuai DHCP">    </li>
</ul>
<p><strong>然后重启DHCP服务</strong>    </p>
<h1 id="LEDE"><a href="#LEDE" class="headerlink" title="LEDE"></a>LEDE</h1><h2 id="安装LEDE"><a href="#安装LEDE" class="headerlink" title="安装LEDE"></a>安装LEDE</h2><p>到KoolShare官网下载LEDE的固件，虚拟机转盘或PE下写盘专用-&gt;要选择combined格式，因为uefi格式下LEDE编辑的时候硬盘显示错误:<br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/lede1.png" alt="LEDE Download"><br>下载完成后解压到本地，然后用<strong>StarWind Converte</strong>将LEDE的.img格式转换为ESXi虚拟机文件。    </p>
<p><strong>创建LEDE虚拟机的流程为</strong>:<br>存储-&gt;数据存储浏览器-&gt;创建文件夹-&gt;LEDE-&gt;将上述转化后的两个文件上传到该目录下-&gt;虚拟机-&gt;新建虚拟机-&gt;客户机操作系统linux-&gt;客户机操作系统版本-&gt;其他64位-&gt;删除默认硬盘-&gt;添加现有硬盘-&gt;选择LEDE文件夹下上传的文件-&gt;内存要勾选<strong>预留所有客户机内存(全部锁定)</strong>:<br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/LEDE-install1.png" alt="LEDE step1"><br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/LEDE-install2.png" alt="LEDE step2"><br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/LEDE-install3.png" alt="LEDE step3"><br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/LEDE-install4.png" alt="LEDE step4"><br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/LEDE-install5.png" alt="LEDE step5">    </p>
<h3 id="网卡非直通情况-2"><a href="#网卡非直通情况-2" class="headerlink" title="网卡非直通情况"></a>网卡非直通情况</h3><p>重新编辑配置LEDE虚拟机-&gt;设置添加除了最后一块虚拟网卡外的其余虚拟网卡，配置好的界面如下:<br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/LEDE-feizhitong.png" alt="网卡非直通">    </p>
<h3 id="网卡直通情况-2"><a href="#网卡直通情况-2" class="headerlink" title="网卡直通情况"></a>网卡直通情况</h3><p>重新编辑配置LEDE虚拟机-&gt;设置添加除了最后一块PCI设备以外的其余PCI设备，并对应其编号(最后一块给iKuai用了，假如错误的将所有PCI设备都加上了同时启动iKuai和LDDE的时候会提示设备错误)，配置好的界面如下:<br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/LEDE-zhitong.png" alt="网卡直通">   </p>
<h2 id="设置LEDE"><a href="#设置LEDE" class="headerlink" title="设置LEDE"></a>设置LEDE</h2><p>启动iKuai虚拟机会自动安装iKuai，安装好以后按下回车:<br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/LEDE-install6.png" alt="LEDE step6"><br>设置IP地址为:<strong>10.10.10.1</strong> ，在虚拟机终端输入以下命令:    </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/config/network</span><br></pre></td></tr></table></figure>

<p><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/LEDE-install7.png" alt="LEDE step7">    </p>
<p>然后将<strong>option ipaddr 192.168.1.1</strong>改为<strong>option ipaddr 10.10.10.1</strong> :<br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/LEDE-install8.png" alt="LEDE step8">    </p>
<p>然后重启LEDE虚拟机。    </p>
<h2 id="LEDE的web端设置"><a href="#LEDE的web端设置" class="headerlink" title="LEDE的web端设置"></a>LEDE的web端设置</h2><p>电脑浏览器打开<strong>10.10.10.1</strong>，默认密码<code>koolshare</code>，进入iKuai的web客户端:<br>网络 -&gt; 接口 -&gt; 关闭WAN -&gt; 关闭WAN6 -&gt; 编辑LAN:<br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/LEDE-web1.png" alt="LEDE WEB1">    </p>
<p>LAN -&gt; 物理接口 -&gt; 接口 -&gt; <strong>选中</strong>:   </p>
<ul>
<li>bond0</li>
<li>erspan0</li>
<li>eth0 - echo4</li>
<li>ip_vti0</li>
<li>teql0</li>
</ul>
<p><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/LEDE-web2.png" alt="LEDE WEB2">    </p>
<p>所要外接路由器作为AP，则需要将DHCP服务器-&gt;高级设置-&gt;强制勾选上。     </p>
<p><strong>LAN-&gt;基本设置-&gt;IPv4网关-&gt;10.10.10.10-&gt;使用自定义的DNS服务器-&gt;114.114.114.114 和 223.5.5.5</strong>:<br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/LEDE-web3.png" alt="LEDE WEB3">    </p>
<h3 id="LEDE常见问题"><a href="#LEDE常见问题" class="headerlink" title="LEDE常见问题"></a>LEDE常见问题</h3><p>安装好LEDE以后会遇到经常掉线的问题，可以尝试一下操作进行修复:</p>
<ul>
<li>禁用启动项里的<strong>mwan3</strong>服务:<br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/lede-banwan3.png" alt="禁用mwan3">     </li>
<li>防火墙，区域=&gt;转发，WAN口指向LAN口:<br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/lede-firewall.png" alt="防火墙区域转发">    </li>
<li>LAN口强制DHCP打开:<br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/lede-lan-force.png" alt="LAN-DHCP">     </li>
<li>DHCP唯一授权打开，取消DNS仅本地服务:<br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/lede-DHCP.png" alt="DNS-local">     </li>
</ul>
<h1 id="设置iKuai和LEDE开机自动启动"><a href="#设置iKuai和LEDE开机自动启动" class="headerlink" title="设置iKuai和LEDE开机自动启动"></a>设置iKuai和LEDE开机自动启动</h1><h2 id="iKuai和LEDE虚拟机里设置"><a href="#iKuai和LEDE虚拟机里设置" class="headerlink" title="iKuai和LEDE虚拟机里设置"></a>iKuai和LEDE虚拟机里设置</h2><p>在ESXi的WEB客户端-&gt;虚拟机-&gt;分别在iKuai和LEDE虚拟机上右键-&gt;自动启动 :<br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/auto-start.png" alt="iKuai LEDE开启自动启动">     </p>
<h2 id="ESXi中设置自动启动"><a href="#ESXi中设置自动启动" class="headerlink" title="ESXi中设置自动启动"></a>ESXi中设置自动启动</h2><p>管理-&gt;系统-&gt;自动启动-&gt;编辑设置-&gt;是 :<br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/auto-start1.png" alt="ESXi 中设置自动启动"><br><img src="/2019/03/26/ESXi下安装iKuai和LEDE双软路由/auto-start2.png" alt="ESXi 中设置自动启动">    </p>
<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><blockquote>
<ol>
<li><a href="https://www.vediotalk.com/" target="_blank" rel="noopener">vedio talk 官网</a>    </li>
<li><a href="https://www.youtube.com/channel/UCaMih5WXqoXq7Hg0S_XJdOg" target="_blank" rel="noopener">vedio talk YouTube频道</a>    </li>
<li><a href="https://space.bilibili.com/28459251" target="_blank" rel="noopener">vedio talk 哔哩哔哩频道</a>    </li>
<li><a href="https://www.youtube.com/channel/UCuhAUKCdKrjYoMiJQc74ZkQ" target="_blank" rel="noopener">tutu生活志 YouTube频道</a>    </li>
<li><a href="https://www.youtube.com/channel/UC6tPP3jOTKgjqfDgqMsaG4g" target="_blank" rel="noopener">JS神技能 YouTube频道</a>    </li>
<li><a href="https://www.youtube.com/channel/UCTVyuHy255movpxD44RuGqA" target="_blank" rel="noopener">七线图 YouTube频道</a>    </li>
<li><a href="https://www.youtube.com/channel/UCpPswAyGzdRwWmiW5oTNnvA" target="_blank" rel="noopener">BIGDONGDONG YouTube频道</a>    </li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>路由</category>
      </categories>
      <tags>
        <tag>软路由</tag>
      </tags>
  </entry>
  <entry>
    <title>git教程</title>
    <url>/2019/03/21/git%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="配置git环境"><a href="#配置git环境" class="headerlink" title="配置git环境"></a>配置git环境</h1><h2 id="添加配置"><a href="#添加配置" class="headerlink" title="添加配置"></a>添加配置</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config [--<span class="built_in">local</span> | --global | --system] user.name <span class="string">'Your name'</span></span><br><span class="line">git config [--<span class="built_in">local</span> | --global | --system] user.email <span class="string">'Your email'</span></span><br></pre></td></tr></table></figure>

<h2 id="查看配置"><a href="#查看配置" class="headerlink" title="查看配置"></a>查看配置</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --list [--<span class="built_in">local</span> | --global | --system]</span><br></pre></td></tr></table></figure>

<h2 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">local</span>：区域为本仓库</span><br><span class="line">global: 当前用户的所有仓库</span><br><span class="line">system: 本系统的所有用户</span><br></pre></td></tr></table></figure>

<h1 id="git-add-和-git-add-u区别"><a href="#git-add-和-git-add-u区别" class="headerlink" title="git add . 和 git add -u区别"></a><code>git add .</code> 和 <code>git add -u</code>区别</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git add . ：将工作空间新增和被修改的文件添加的暂存区</span><br><span class="line">git add -u :将工作空间被修改和被删除的文件添加到暂存区(不包含没有纳入Git管理的新增文件)</span><br><span class="line">```    </span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建仓库</span></span><br><span class="line">```bash</span><br><span class="line">git init [project folder name]  初始化 git 仓库</span><br><span class="line">git add [fileName]  把文件从工作目录添加到暂存区</span><br><span class="line">git commit -m<span class="string">'some information'</span>  用于提交暂存区的文件</span><br><span class="line">git commit -am<span class="string">'Some information'</span> 用于提交跟踪过的文件</span><br><span class="line">git <span class="built_in">log</span>  查看历史</span><br><span class="line">git status  查看状态</span><br></pre></td></tr></table></figure>

<p><strong>额外</strong><br>git add -u 可以添加所有已经被 git 控制的文件到暂存区<br>以前删除文件夹只会用 「-rf」，今天学到了 「-r」，并得知它们两个区别：「-r」 有时候会提示是否确认删除。    </p>
<h1 id="clone时指定文件夹名字"><a href="#clone时指定文件夹名字" class="headerlink" title="clone时指定文件夹名字"></a>clone时指定文件夹名字</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/repository_NAME PATH/new_folder</span><br></pre></td></tr></table></figure>

<h1 id="给文件重命名的简便方法"><a href="#给文件重命名的简便方法" class="headerlink" title="给文件重命名的简便方法"></a>给文件重命名的简便方法</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git  mv  [old file name]  [new file name]</span><br><span class="line">git commit -m <span class="string">'some information'</span></span><br></pre></td></tr></table></figure>

<h1 id="Tag标签"><a href="#Tag标签" class="headerlink" title="Tag标签"></a>Tag标签</h1><p><strong>显示已有标签</strong>   </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git tag</span><br></pre></td></tr></table></figure>

<p><strong>新建标签</strong><br><em>创建一个含附注类型的标签非常简单，用 -a （译注：取 annotated 的首字母）指定标签名字即可</em></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git tag -a tag_name -m 'Some Messages'</span><br></pre></td></tr></table></figure>

<p><strong>删除标签</strong><br>删除本地标签:    </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git tag -d tag_name</span><br></pre></td></tr></table></figure>

<p>删除<code>remote</code>标签    :</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git push --delete origin tag_name</span><br></pre></td></tr></table></figure>

<p><strong>推送标签到github</strong><br>将本地<strong>所有</strong>标签推送到<code>remote</code>:    </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git push origin --tags</span><br></pre></td></tr></table></figure>

<h1 id="在Github上面创建Release"><a href="#在Github上面创建Release" class="headerlink" title="在Github上面创建Release"></a>在Github上面创建Release</h1><ol>
<li><p>在当前<code>repository</code>下点击 <strong>release</strong> 标签:<br> <img src="/2019/03/21/git教程/github-release1.png" alt="github release">    </p>
</li>
<li><p>点击 <strong>Draft a new release</strong> 按钮:<br> <img src="/2019/03/21/git教程/github-release2.png" alt="github release">    </p>
</li>
<li><p>在跳转后的界面下填写 <code>Tag version</code> 、 <code>Release title</code> 和 <code>描述</code><br> <img src="/2019/03/21/git教程/github-release3.png" alt="github release"><br> 如下图:<br> <img src="/2019/03/21/git教程/github-release4.png" alt="github release">    </p>
</li>
<li><p>点击 <code>Update release</code>按钮提交即可，提交后效果:<br> <img src="/2019/03/21/git教程/github-release5.png" alt="github release">    </p>
</li>
</ol>
<h1 id="通过git-log查看版本演变历史"><a href="#通过git-log查看版本演变历史" class="headerlink" title="通过git log查看版本演变历史"></a>通过<code>git log</code>查看版本演变历史</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">log</span> --all 查看所有分支的历史</span><br><span class="line">git <span class="built_in">log</span> --all --graph 查看图形化的 <span class="built_in">log</span> 地址</span><br><span class="line">git <span class="built_in">log</span> --oneline 查看单行的简洁历史。</span><br><span class="line">git <span class="built_in">log</span> --oneline -n4 查看最近的4条简洁历史。</span><br><span class="line">git <span class="built_in">log</span> --oneline --all -n4 --graph 查看所有分支最近4条单行的图形化历史。</span><br><span class="line">git <span class="built_in">help</span> --web <span class="built_in">log</span> 跳转到git <span class="built_in">log</span> 的帮助文档网页</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git branch -v 查看本地有多少分支</span><br></pre></td></tr></table></figure>

<h1 id="通过图形界面工具来查看版本历史"><a href="#通过图形界面工具来查看版本历史" class="headerlink" title="通过图形界面工具来查看版本历史"></a>通过图形界面工具来查看版本历史</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gitk</span><br></pre></td></tr></table></figure>

<h1 id="探密-git目录"><a href="#探密-git目录" class="headerlink" title="探密.git目录"></a>探密<code>.git</code>目录</h1><p>查看<code>.git</code>文件夹下的内容：    </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ls .git/ -al</span><br></pre></td></tr></table></figure>

<p>如下:   </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">drwxr-xr-x 1 Andy 197609   0 12月 17 22:38 ./</span><br><span class="line">drwxr-xr-x 1 Andy 197609   0 12月 17 21:50 ../</span><br><span class="line">-rw-r--r-- 1 Andy 197609   7 12月 17 22:38 COMMIT_EDITMSG</span><br><span class="line">-rw-r--r-- 1 Andy 197609 301 12月 12 22:55 config</span><br><span class="line">-rw-r--r-- 1 Andy 197609  73 12月 12 22:55 description</span><br><span class="line">-rw-r--r-- 1 Andy 197609  96 12月 19 00:00 FETCH_HEAD</span><br><span class="line">-rw-r--r-- 1 Andy 197609  23 12月 12 22:55 HEAD</span><br><span class="line">drwxr-xr-x 1 Andy 197609   0 12月 12 22:55 hooks/</span><br><span class="line">-rw-r--r-- 1 Andy 197609 249 12月 17 22:38 index</span><br><span class="line">drwxr-xr-x 1 Andy 197609   0 12月 12 22:55 info/</span><br><span class="line">drwxr-xr-x 1 Andy 197609   0 12月 12 22:55 logs/</span><br><span class="line">drwxr-xr-x 1 Andy 197609   0 12月 17 22:38 objects/</span><br><span class="line">-rw-r--r-- 1 Andy 197609 114 12月 12 22:55 packed-refs</span><br><span class="line">drwxr-xr-x 1 Andy 197609   0 12月 12 22:55 refs/</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat命令主要用来查看文件内容，创建文件，文件合并，追加文件内容等功能。</span><br><span class="line">cat HEAD 查看HEAD文件的内容</span><br><span class="line">git cat-file 命令 显示版本库对象的内容、类型及大小信息。</span><br><span class="line">git cat-file -t b44dd71d62a5a8ed3 显示版本库对象的类型</span><br><span class="line">git cat-file -s b44dd71d62a5a8ed3 显示版本库对象的大小</span><br><span class="line">git cat-file -p b44dd71d62a5a8ed3 显示版本库对象的内容</span><br></pre></td></tr></table></figure>

<p><code>.git</code>里几个常用的如下：    </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">HEAD：指向当前的工作路径</span><br><span class="line">config：存放本地仓库（<span class="built_in">local</span>）相关的配置信息。</span><br><span class="line">refs/heads: 存放分支</span><br><span class="line">refs/heads/master/: 指向master分支最后一次commit</span><br><span class="line">refs/tags: 存放tag，又叫里程牌 （当这次commit是具有里程碑意义的 比如项目1.0的时候 就可以打tag）</span><br><span class="line">objects：核心文件，存储文件</span><br></pre></td></tr></table></figure>

<p>.git/objects/ 存放所有的 git 对象，对象哈希值前 2 位作为文件夹名称，后 38 位作为对象文件名, 可通过 git cat-file -p 命令，拼接文件夹名称+文件名查看。    </p>
<h1 id="commit、tree和blob三个对象之间的关系"><a href="#commit、tree和blob三个对象之间的关系" class="headerlink" title="commit、tree和blob三个对象之间的关系"></a><code>commit</code>、<code>tree</code>和<code>blob</code>三个对象之间的关系</h1><p><img src="/2019/03/21/git教程/img1.jpg" alt="tree">     </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">commit: 提交时的镜像</span><br><span class="line">tree: 文件夹</span><br><span class="line">blob: 文件</span><br></pre></td></tr></table></figure>

<p><strong>【同学问题】</strong> 每次commit，git 都会将当前项目的所有文件夹及文件快照保存到objects目录，如果项目文件比较大，不断迭代，commit无数次后，objects目录中文件大小是不是会变得无限大？<br><strong>【老师解答】</strong> Git对于内容相同的文件只会存一个blob，不同的commit的区别是commit、tree和有差异的blob，多数未变更的文件对应的blob都是相同的，这么设计对于版本管理系统来说可以省很多存储空间。其次，Git还有增量存储的机制，我估计是对于差异很小的blob设计的吧。    </p>
<h1 id="分离头指针情况下的注意事项"><a href="#分离头指针情况下的注意事项" class="headerlink" title="分离头指针情况下的注意事项"></a>分离头指针情况下的注意事项</h1><p>detached HEAD   </p>
<h1 id="进一步理解HEAD和branch"><a href="#进一步理解HEAD和branch" class="headerlink" title="进一步理解HEAD和branch"></a>进一步理解<code>HEAD</code>和<code>branch</code></h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git checkout -b new_branch [具体分支 或 commit] 创建新分支并切换到新分支</span><br><span class="line">git diff HEAD HEAD~1 比较最近两次提交</span><br><span class="line">git diff HEAD HEAD~2 比较最近和倒数第三次提交</span><br><span class="line">git diff HEAD HEAD^  比较最近两次提交</span><br><span class="line">git diff HEAD HEAD^^ 比较最近和倒数第三次提交</span><br><span class="line">```   </span><br><span class="line"></span><br><span class="line"><span class="comment"># 怎么删除不需要的分支？</span></span><br><span class="line">查看分支：   </span><br><span class="line">```bash</span><br><span class="line">git branch -av</span><br></pre></td></tr></table></figure>

<p>删除分支命令：    </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git branch -d [branch name]  <span class="comment">#删除</span></span><br><span class="line">git branch -D [branch name]  <span class="comment">#强制删除</span></span><br></pre></td></tr></table></figure>

<h1 id="怎么修改最新commit的message"><a href="#怎么修改最新commit的message" class="headerlink" title="怎么修改最新commit的message"></a>怎么修改最新commit的message</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git commit --amend  对最近一次的commit信息进行修改</span><br></pre></td></tr></table></figure>

<h1 id="怎么修改老旧commit的message"><a href="#怎么修改老旧commit的message" class="headerlink" title="怎么修改老旧commit的message"></a>怎么修改老旧commit的message</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git rebase -i [要更改的commit的上一级commit]</span><br></pre></td></tr></table></figure>

<p>接下来就是一个交互过程…<br>这期间会产生一个detached HEAD，然后将改好的commit指向该detached HEAD，如下图所示：<br><img src="/2019/03/21/git教程/img2.jpg" alt="rebase">    </p>
<p><strong>git rebase工作的过程中，就是用了分离头指针。rebase意味着基于新base的commit来变更部分commits。它处理的时候，把HEAD指向base的commit，此时如果该commit没有对应branch，就处于分离头指针的状态，然后重新一个一个生成新的commit，当rebase创建完最后一个commit后，结束分离头状态，Git让变完基的分支名指向HEAD。</strong>    </p>
<h1 id="怎样把连续的多个commit整理成1个"><a href="#怎样把连续的多个commit整理成1个" class="headerlink" title="怎样把连续的多个commit整理成1个"></a>怎样把连续的多个commit整理成1个</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git rebase -i [要更改的commit的上一级commit]</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --graph</span><br><span class="line">* commit 7d3386842a2168ae630b65f687364243139c893c (HEAD -&gt; master, origin/master, origin/HEAD)</span><br><span class="line">| Author: aimuch &lt;anetspace@gmail.com&gt;</span><br><span class="line">| Date:   Thu Dec 20 23:34:18 2018 +0800</span><br><span class="line">|</span><br><span class="line">|     update</span><br><span class="line">|</span><br><span class="line">* commit 9eb3188bbc63cae1bfed5f9dfc1593019e360a6a</span><br><span class="line">| Author: aimuch &lt;anetspace@gmail.com&gt;</span><br><span class="line">| Date:   Wed Dec 19 20:30:14 2018 +0800</span><br><span class="line">|</span><br><span class="line">|     update</span><br><span class="line">|</span><br><span class="line">* commit bbe6d53e2b477f2d2aa402af7f315ecdfc63459e</span><br><span class="line">| Author: aimuch &lt;anetspace@gmail.com&gt;</span><br><span class="line">| Date:   Wed Dec 19 20:12:29 2018 +0800</span><br><span class="line">|</span><br><span class="line">|     update</span><br><span class="line">|</span><br><span class="line">* commit 7735d66ded7f98adeca93d96fb7be12ffb67c76a</span><br><span class="line">| Author: aimuch &lt;anetspace@gmail.com&gt;</span><br><span class="line">| Date:   Wed Dec 19 00:27:00 2018 +0800</span><br><span class="line">|</span><br><span class="line">|     update</span><br><span class="line">|</span><br><span class="line">* commit d9f9d115fab425b5654f8ccfec6a996aef35b76b</span><br><span class="line">| Author: aimuch &lt;anetspace@gmail.com&gt;</span><br><span class="line">| Date:   Wed Dec 19 00:23:36 2018 +0800</span><br><span class="line">|</span><br><span class="line">|     update</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pick   7735d66 update <span class="comment">#合并到该commit上</span></span><br><span class="line">squash bbe6d53 update</span><br><span class="line">squash 9eb3188 update</span><br><span class="line">squash 7d33868 update</span><br><span class="line"><span class="comment"># Rebase d9f9d11..7d33868 onto d9f9d11 (4 commands)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Commands:</span></span><br><span class="line"><span class="comment"># p, pick &lt;commit&gt; = use commit</span></span><br><span class="line"><span class="comment"># r, reword &lt;commit&gt; = use commit, but edit the commit message</span></span><br><span class="line"><span class="comment"># e, edit &lt;commit&gt; = use commit, but stop for amending</span></span><br><span class="line"><span class="comment"># s, squash &lt;commit&gt; = use commit, but meld into previous commit</span></span><br><span class="line"><span class="comment"># f, fixup &lt;commit&gt; = like "squash", but discard this commit's log message</span></span><br><span class="line"><span class="comment"># x, exec &lt;command&gt; = run command (the rest of the line) using shell</span></span><br><span class="line"><span class="comment"># b, break = stop here (continue rebase later with 'git rebase --continue')</span></span><br><span class="line"><span class="comment"># d, drop &lt;commit&gt; = remove commit</span></span><br><span class="line"><span class="comment"># l, label &lt;label&gt; = label current HEAD with a name</span></span><br><span class="line"><span class="comment"># t, reset &lt;label&gt; = reset HEAD to a label</span></span><br><span class="line"><span class="comment"># m, merge [-C &lt;commit&gt; | -c &lt;commit&gt;] &lt;label&gt; [# &lt;oneline&gt;]</span></span><br><span class="line"><span class="comment"># .       create a merge commit using the original merge commit's</span></span><br><span class="line"><span class="comment"># .       message (or the oneline, if no original merge commit was</span></span><br><span class="line"><span class="comment"># .       specified). Use -c &lt;commit&gt; to reword the commit message.</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># This is a combination of 4 commits.</span></span><br><span class="line"><span class="comment"># This is the 1st commit message:</span></span><br><span class="line"></span><br><span class="line">update</span><br><span class="line"></span><br><span class="line"><span class="comment"># This is the commit message #2:</span></span><br><span class="line"></span><br><span class="line">update</span><br><span class="line"></span><br><span class="line"><span class="comment"># This is the commit message #3:</span></span><br><span class="line"></span><br><span class="line">update</span><br><span class="line"></span><br><span class="line"><span class="comment"># This is the commit message #4:</span></span><br><span class="line"></span><br><span class="line">update</span><br></pre></td></tr></table></figure>

<h1 id="添加忽略配置文件gitignore"><a href="#添加忽略配置文件gitignore" class="headerlink" title="添加忽略配置文件gitignore"></a>添加忽略配置文件gitignore</h1><p>在git中如果想忽略掉某个文件， 不让这个文件提交到版本库中，可以使用修改 .gitignore 文件的方法。<br>这个文件每一行保存了一个匹配的规则, 可以用正则表达式来描述, 例如:    </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 此为注释 – 将被 Git 忽略</span></span><br><span class="line">*.a       <span class="comment"># 忽略所有 .a 结尾的文件</span></span><br><span class="line">!lib.a    <span class="comment"># 但 lib.a 除外</span></span><br><span class="line">/TODO     <span class="comment"># 仅仅忽略项目根目录下的 TODO 文件，不包括 subdir/TODO</span></span><br><span class="line">build/    <span class="comment"># 忽略 build/ 目录下的所有文件</span></span><br><span class="line">doc/*.txt <span class="comment"># 会忽略 doc/notes.txt 但不包括 doc/server/arch.txt</span></span><br><span class="line">*ignore/  <span class="comment"># 忽略名称中末尾为ignore的文件夹</span></span><br><span class="line">*ignore*/ <span class="comment"># 忽略名称中间包含ignore的文件夹</span></span><br></pre></td></tr></table></figure>

<p>通用的模板:   </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Compiled source #</span></span><br><span class="line"><span class="comment">###################</span></span><br><span class="line">*.com</span><br><span class="line">*.class</span><br><span class="line">*.dll</span><br><span class="line">*.exe</span><br><span class="line">*.o</span><br><span class="line">*.so</span><br><span class="line"></span><br><span class="line"><span class="comment"># Packages #</span></span><br><span class="line"><span class="comment">############</span></span><br><span class="line"><span class="comment"># it's better to unpack these files and commit the raw source</span></span><br><span class="line"><span class="comment"># git has its own built in compression methods</span></span><br><span class="line">*.7z</span><br><span class="line">*.dmg</span><br><span class="line">*.gz</span><br><span class="line">*.iso</span><br><span class="line">*.jar</span><br><span class="line">*.rar</span><br><span class="line">*.tar</span><br><span class="line">*.zip</span><br><span class="line"></span><br><span class="line"><span class="comment"># Logs and databases #</span></span><br><span class="line"><span class="comment">######################</span></span><br><span class="line">*.<span class="built_in">log</span></span><br><span class="line">*.sql</span><br><span class="line">*.sqlite</span><br><span class="line"></span><br><span class="line"><span class="comment"># OS generated files #</span></span><br><span class="line"><span class="comment">######################</span></span><br><span class="line">.DS_Store</span><br><span class="line">.DS_Store?</span><br><span class="line">._*</span><br><span class="line">.Spotlight-V100</span><br><span class="line">.Trashes</span><br><span class="line">Icon?</span><br><span class="line">ehthumbs.db</span><br><span class="line">Thumbs.db</span><br></pre></td></tr></table></figure>

<p>更详细的介绍请看 <strong>GitHub</strong> 官网给出的例子: <code>https://github.com/github/gitignore</code></p>
<h1 id="Git修改gitignore后生效"><a href="#Git修改gitignore后生效" class="headerlink" title="Git修改gitignore后生效"></a>Git修改gitignore后生效</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git rm -r --cached .    <span class="comment">#清除缓存</span></span><br><span class="line">git add .               <span class="comment">#重新trace file</span></span><br><span class="line">git commit -m <span class="string">"update .gitignore"</span> <span class="comment">#提交和注释</span></span><br><span class="line">git push origin master  <span class="comment">#可选，如果需要同步到remote上的话</span></span><br></pre></td></tr></table></figure>

<h1 id="寻找并删除Git记录中的大文件"><a href="#寻找并删除Git记录中的大文件" class="headerlink" title="寻找并删除Git记录中的大文件"></a>寻找并删除Git记录中的大文件</h1><p>本文来介绍查找和重写Git记录的命令：<code>git rev-list</code> , <code>git filter-branch</code> 。生产环境请考虑使用 <a href="https://github.com/rtyley/bfg-repo-cleaner" target="_blank" rel="noopener">bfg</a> 等效率工具。    </p>
<p>首先通过rev-list来找到仓库记录中的大文件：    </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git rev-list --objects --all | grep "$(git verify-pack -v .git/objects/pack/*.idx | sort -k 3 -n | tail -5 | awk '&#123;print$1&#125;')"</span><br></pre></td></tr></table></figure>

<p>然后通过 <code>filter-branch</code> 来重写这些大文件涉及到的所有提交（重写历史记录）：    </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git filter-branch -f --prune-empty --index-filter 'git rm -rf --cached --ignore-unmatch your-file-name' --tag-name-filter cat -- --all</span><br></pre></td></tr></table></figure>

<h2 id="Git仓库的存储方式"><a href="#Git仓库的存储方式" class="headerlink" title="Git仓库的存储方式"></a>Git仓库的存储方式</h2><p><em>如果你熟知Git的存储方式，跳过此节。</em></p>
<p>Git仓库位于项目根目录的 <code>.git</code> 文件夹，其中保存了从仓库建立（<code>git init</code>）以来所有的代码增删。 每一个提交（<code>Commit</code>）相当于一个Patch应用在之前的项目上，借此一个项目可以回到任何一次提交时的文件状态。    </p>
<p>于是在Git中删除一个文件时，Git只是记录了该删除操作，该记录作为一个Patch存储在 <code>.git</code> 中。 删除前的文件仍然在Git仓库中保存着。直接删除文件并提交起不到给Git仓库瘦身的效果。   </p>
<p>在Git仓库彻底删除一个文件只有一种办法：重写（<code>Rewrite</code>）涉及该文件的所有提交。 幸运的是借助 <code>git filter-branch</code> 便可以重写历史提交，当然这也是Git中最危险的操作。 可以说比 <code>rm -rf *</code> 危险一万倍。    </p>
<h2 id="从所有提交中删除一个文件"><a href="#从所有提交中删除一个文件" class="headerlink" title="从所有提交中删除一个文件"></a>从所有提交中删除一个文件</h2><p>如果清楚地记得曾提交过名为 <code>recent-badge.psd</code> 的文件。这是一个很大的PhotoShop文件，要把它删掉。 <code>filter-branch</code> 命令可以用来重写Git仓库中的提交， 利用<code>filter-branch</code> 的 <code>--index-filter</code>参数便能把它从所有Git提交中删除。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git filter-branch -f --prune-empty --index-filter <span class="string">'git rm -rf --cached --ignore-unmatch assets/img/recent-badge.psd'</span> --tag-name-filter cat -- --all</span></span><br><span class="line">Rewrite 2771f50d45a0293668a30af77983d87886441640 (264/982)rm 'assets/img/recent-badge.psd'</span><br><span class="line">Rewrite 1a98ecb3f39e1f200e31754714eec18bc92848ce (265/982)rm 'assets/img/recent-badge.psd'</span><br><span class="line">Rewrite d4e61cfb1d88187b0561d283e663b81b738df2c7 (270/982)rm 'assets/img/recent-badge.psd'</span><br><span class="line">Rewrite 4ba0df06b26cf86fd39c2cda6b012c521cbc4dc1 (271/982)rm 'assets/img/recent-badge.psd'</span><br><span class="line">Rewrite 242ae98060c77863f5e826ba7e1ec47</span><br></pre></td></tr></table></figure>

<ul>
<li><code>filter-branch</code> 是让git重写每一个分支;</li>
<li><code>--prune-empty</code> 选项告诉git，如果因为重写导致某些commit变成了空（比如修改的文件全部被删除），那么忽略掉这个commit;</li>
<li><code>--index-filter</code>参数用来指定一条Bash命令，然后Git会检出（<code>checkout</code>）所有的提交， 执行该命令，然后重新提交。我们在提交前移除了<code>recent-badge.psd</code>文件， 这个文件便从Git的所有记录中完全消失了;</li>
<li><code>--tag-name-filter</code> 表示对每一个tag如何重命名，重命名的命令紧跟在后面，当前的tag名会从标注输入送给后面的命令，用cat就表示保持tag名不变;</li>
<li>紧跟着的 <code>--</code> 表示分割符;</li>
<li><code>--all</code>参数告诉Git我们需要重写所有分支（或引用）。</li>
</ul>
<h2 id="寻找大文件的ID"><a href="#寻找大文件的ID" class="headerlink" title="寻找大文件的ID"></a>寻找大文件的ID</h2><p>删掉了<code>recent-badge.psd</code>后我仍不满足，我要找到所有的大文件，并把它删掉。 <code>verify-pack</code>命令用来验证Git打包的归档文件，我们用它来找到那些大文件。 例如：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git verify-pack -v .git/objects/pack/*.idx</span></span><br><span class="line">8fa15d279de33ce28a3289fd33951374084231e4 tree   135 137 144088922</span><br><span class="line">a44a50b2ffb1f8283c8e64aafb8e7628249d7453 tree   33 43 144089059</span><br><span class="line">b57d99f38fe22491e4a2d30c2b081ecb7bbb329c tree   99 97 144089102</span><br><span class="line">2d4ffaffc11758d561ea1a6d57dd8ee17ee1d836 blob   644952 644959 144089199</span><br><span class="line">8cf81ebfeec409f19e7a47a76517317f3bfa268d blob   695898 695871 144734158</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<ul>
<li><code>-v</code>（verbose）参数是打印详细信息。</li>
</ul>
<p>输出的第一列是文件ID，第二列表示文件（blob）或目录（tree），第三列是文件大小。 现在得到了所有的文件ID及其大小，需要写一点Bash了！   </p>
<p>先按照第三列排序，并取最大的5条，然后打印出每项的第一列（这一列是文件ID）：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git verify-pack -v .git/objects/pack/*.idx | sort -k 3 -n | tail -10 | awk <span class="string">'&#123;print$1&#125;'</span>)<span class="string">"</span></span></span><br><span class="line">f846f156d16f74243b67e3dabec58a3128744352 </span><br><span class="line">4a1546e732b2e2a352b7bf220c1a22ad859abf89 </span><br><span class="line">f72d04efe6d0b41b067f9fbbc62455f28d3670d2 </span><br><span class="line">49bdf300ddf57d1946bc9c6570d94a38ac9d6a50 </span><br><span class="line">9c073d4177af5d2e43ada41f92efb18d9462a536</span><br></pre></td></tr></table></figure>

<p>现在变得到了最大的5个文件的ID，而我需要文件名才能用<code>filter-branch</code>移除它。 我现在需要文件ID和文件名的映射关系。</p>
<h2 id="文件名与ID映射"><a href="#文件名与ID映射" class="headerlink" title="文件名与ID映射"></a>文件名与ID映射</h2><p><code>rev-list</code>命令用来列出Git仓库中的提交，我们用它来列出所有提交中涉及的文件名及其ID。 该命令可以指定只显示某个引用（或分支）的上下游的提交。例如：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git rev-list foo bar ^baz</span><br></pre></td></tr></table></figure>

<p>将会列出所有从<code>foo</code>和<code>bar</code>可到达，但从baz不可到达的提交。我们将会用到<code>rev-list</code>的两个参数：    </p>
<ul>
<li><code>--objects</code>：列出该提交涉及的所有文件ID。</li>
<li><code>--all</code>：所有分支的提交，相当于指定了位于/refs下的所有引用。   </li>
</ul>
<p>我们看看这条命令的输出：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git rev-list --objects --all</span></span><br><span class="line">c252878ac09a3979a80520b82a71dc2dae4529f9</span><br><span class="line">7bc7d05c6097063f531580ba4c32921464a6c456 _drafts</span><br><span class="line">dcce26ed53fbb869dc7d5b71742d2f9e523bfe42 _layouts</span><br><span class="line">414186c794a0d58695abb75c548bdbfec1de2763 _layouts/default.html</span><br><span class="line">1934eeffe3d242375510dff28cffa6de6b3de367 _layouts/post.html</span><br><span class="line">5f14647875f2177a6d37b8bfbcdb4629af595b64 _posts</span><br><span class="line">6cdbb293d453ced07e6a07e0aa6e580e6a5538f4 _posts/2013-10-12-2.md</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<p>现在就得到了<strong>文件名</strong>（如<code>_posts/2013-10-12-2.md</code>）和<strong>ID</strong>（如<code>6cdbb293d453ced07e6a07e0aa6e580e6a5538f4</code> ）的映射关系。</p>
<h2 id="得到文件名列表"><a href="#得到文件名列表" class="headerlink" title="得到文件名列表"></a>得到文件名列表</h2><p>前面我们通过<code>rev-list</code>得到了<strong>文件名-ID</strong>的对应关系，通过<code>verify-pack</code>得到了最大的5个文件ID。 用后者筛选前者便能得到最大的5个文件的文件名：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git rev-list --objects --all | grep <span class="string">"<span class="variable">$(git verify-pack -v .git/objects/pack/*.idx | sort -k 3 -n | tail -5 | awk '&#123;print$1&#125;')</span>"</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">$ git rev-list --objects --all | grep <span class="string">"<span class="variable">$(git verify-pack -v .git/objects/pack/*.idx | sort -k 3 -n | tail -5 | awk '&#123;print$1&#125;')</span>"</span> &gt; large-files.txt</span></span><br><span class="line">f846f156d16f74243b67e3dabec58a3128744352 assets/img/recent-badge.psd</span><br><span class="line">4a1546e732b2e2a352b7bf220c1a22ad859abf89 assets/img/album/me/IMG_0276.JPG</span><br><span class="line">f72d04efe6d0b41b067f9fbbc62455f28d3670d2 assets/img/album/me/IMG_0389.JPG</span><br><span class="line">49bdf300ddf57d1946bc9c6570d94a38ac9d6a50 assets/img/album/me/IMG_0813.JPG</span><br><span class="line">9c073d4177af5d2e43ada41f92efb18d9462a536 assets/img/album/me/IMG_0891.JPG</span><br></pre></td></tr></table></figure>

<p>先把上面输出存到<code>large-files.txt</code>中。还记得吗？<code>--tree-filter</code>参数中我们需要给出一行的文件名列表。上述列表我们需要处理一下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> cat large-files.txt| awk <span class="string">'&#123;print $2&#125;'</span> | tr <span class="string">'\n'</span> <span class="string">' '</span></span></span><br><span class="line">assets/img/recent-badge.psd assets/img/album/me/IMG_0276.JPG assets/img/album/me/IMG_0389.JPG assets/img/album/me/IMG_0813.JPG assets/img/album/me/IMG_0891.JPG</span><br></pre></td></tr></table></figure>

<p>现在便得到了一行的文件列表。把它存到<code>large-files-inline.txt</code>中。</p>
<h2 id="删除所有大文件"><a href="#删除所有大文件" class="headerlink" title="删除所有大文件"></a>删除所有大文件</h2><p>现在得到了要删除的大文件列表<code>large-files-inline.txt</code>，把它传入到<code>--tree-filter</code>中即可：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git filter-branch -f --prune-empty --index-filter "git rm -rf --cached --ignore-unmatch `cat large-files-inline.txt`" --tag-name-filter cat -- --all</span><br></pre></td></tr></table></figure>

<p>注意这里<code>--index-filter</code>的参数要用双引号，因为<code>cat large-files-inline.txt</code>还需要Bash的解析。    </p>
<p>至此已经干掉了那些大文件，来看看瘦身了多少吧！ 注意filter-branch之后.git目录下会有大量的备份。     </p>
<p>当然到此为止我们更改的都是本地仓库，现在把这些改变Push到远程仓库中去！</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git push origin --force --all</span><br></pre></td></tr></table></figure>

<p>因为不是fast forward，所以需要指定<code>--force</code>参数。</p>
<p>这里的<code>--all</code>会将所有分支都推送到<code>origin</code>上。当然你也可以只推送<code>master</code>分支：<code>git push origin master --force</code>。但是！如果其它远程分支有那些大文件提交的话，仍然没有瘦身！</p>
<h1 id="怎么比较暂存区和HEAD所含文件的差异？"><a href="#怎么比较暂存区和HEAD所含文件的差异？" class="headerlink" title="怎么比较暂存区和HEAD所含文件的差异？"></a>怎么比较暂存区和HEAD所含文件的差异？</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git diff --cached</span><br></pre></td></tr></table></figure>

<p>或者</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git diff --staged</span><br></pre></td></tr></table></figure>

<h1 id="怎么比较工作区和暂存区所含文件的差异？"><a href="#怎么比较工作区和暂存区所含文件的差异？" class="headerlink" title="怎么比较工作区和暂存区所含文件的差异？"></a>怎么比较工作区和暂存区所含文件的差异？</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git diff</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git diff -- [filename/pathname] <span class="comment">#比较具体的文件或者路径</span></span><br></pre></td></tr></table></figure>

<h1 id="如何让暂存区恢复成和HEAD的一样？"><a href="#如何让暂存区恢复成和HEAD的一样？" class="headerlink" title="如何让暂存区恢复成和HEAD的一样？"></a>如何让暂存区恢复成和HEAD的一样？</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git reset HEAD</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git reset 有三个参数</span><br><span class="line">--soft 这个只是把 HEAD 指向的 commit 恢复到你指定的 commit，暂存区 工作区不变</span><br><span class="line">--hard 这个是 把 HEAD， 暂存区， 工作区 都修改为 你指定的 commit 的时候的文件状态</span><br><span class="line">--mixed 这个是不加时候的默认参数，把 HEAD，暂存区 修改为 你指定的 commit 的时候的文件状态，工作区保持不变</span><br></pre></td></tr></table></figure>

<h1 id="如何让工作区的文件恢复为和暂存区一样？"><a href="#如何让工作区的文件恢复为和暂存区一样？" class="headerlink" title="如何让工作区的文件恢复为和暂存区一样？"></a>如何让工作区的文件恢复为和暂存区一样？</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git checkout -- &lt;file&gt;...</span><br></pre></td></tr></table></figure>

<p><strong>恢复工作区用checkout，恢复暂存区用reset。</strong>   </p>
<h1 id="怎样取消暂存区部分文件的更改？"><a href="#怎样取消暂存区部分文件的更改？" class="headerlink" title="怎样取消暂存区部分文件的更改？"></a>怎样取消暂存区部分文件的更改？</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git reset HEAD -- &lt;file&gt;...</span><br></pre></td></tr></table></figure>

<h1 id="看看不同提交的指定文件的差异"><a href="#看看不同提交的指定文件的差异" class="headerlink" title="看看不同提交的指定文件的差异"></a>看看不同提交的指定文件的差异</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git diff commit-id1 commit-id2 -- &lt;file&gt;...</span><br></pre></td></tr></table></figure>

<h1 id="正确删除文件的方法"><a href="#正确删除文件的方法" class="headerlink" title="正确删除文件的方法"></a>正确删除文件的方法</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git rm &lt;file&gt;</span><br></pre></td></tr></table></figure>

<h1 id="开发中临时加塞了紧急任务怎么处理？"><a href="#开发中临时加塞了紧急任务怎么处理？" class="headerlink" title="开发中临时加塞了紧急任务怎么处理？"></a>开发中临时加塞了紧急任务怎么处理？</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git stash list <span class="comment">#查看stash中存放的信息</span></span><br><span class="line">git stash <span class="comment">#将当前工作区内容存放到"堆栈"中</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git stash apply <span class="comment">#把"堆栈"里面的内容弹出到工作区中，同时"堆栈"中信息还在</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git stash pop <span class="comment">#把"堆栈"里面的内容弹出到工作区中，同时丢弃"堆栈"中最新的信息</span></span><br></pre></td></tr></table></figure>

<h1 id="如何指定不需要Git管理的文件？"><a href="#如何指定不需要Git管理的文件？" class="headerlink" title="如何指定不需要Git管理的文件？"></a>如何指定不需要Git管理的文件？</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">.gitignore</span><br></pre></td></tr></table></figure>

<p><strong>【同学提问】</strong> 如果提交commit后，想再忽略一些已经提交的文件，怎么处理。<br><strong>【老师回答】</strong> The problem is that .gitignore ignores just files that weren’t tracked before (by git add). Run git reset name_of_file to unstage the file and keep it. In case you want to also remove given file from the repository (after pushing), use git rm –cached name_of_file.<br>把想忽略的文件添加到 .gitignore ；然后通过 git rm – cached name_of_file 的方式删除掉git仓库里面无需跟踪的文件。    </p>
<h1 id="添加远程仓库"><a href="#添加远程仓库" class="headerlink" title="添加远程仓库"></a>添加远程仓库</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git remote add [shortname] [url]</span><br></pre></td></tr></table></figure>

<h1 id="配置公私钥"><a href="#配置公私钥" class="headerlink" title="配置公私钥"></a>配置公私钥</h1><h2 id="检查是否已存在相应的ssh-key"><a href="#检查是否已存在相应的ssh-key" class="headerlink" title="检查是否已存在相应的ssh key:"></a>检查是否已存在相应的<code>ssh key</code>:</h2><p>打开终端, 输入:   </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ls -al ~/.ssh</span><br></pre></td></tr></table></figure>

<p>核对列出来的ssh key是否有已存在的，假如你没有看到列出的公私钥对，或是不想再用之前的公私钥对，你可以选择下面的步骤生成新的公私钥对.    </p>
<h2 id="生成新的ssh-key-并添加至ssh-agent"><a href="#生成新的ssh-key-并添加至ssh-agent" class="headerlink" title="生成新的ssh key,并添加至ssh-agent:"></a>生成新的<code>ssh key</code>,并添加至<code>ssh-agent</code>:</h2><h3 id="打开终端-使用ssh-key生成命令："><a href="#打开终端-使用ssh-key生成命令：" class="headerlink" title="打开终端, 使用ssh key生成命令："></a>打开终端, 使用<code>ssh key</code>生成命令：</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096 -C "your_email@example.com"</span><br></pre></td></tr></table></figure>

<p><strong>注意</strong> ：后面的邮箱对应相应账号的邮箱，假如是github的账号，且注册账号的邮箱为<code>xxx@gmail.com</code>，则命令行为：    </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096 -C "xxx@gmail.com"`。    </span><br><span class="line">```   </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## 接下来会提示你保存的`ssh key`的名称以及路径。    </span></span></span><br><span class="line">默认路径是`/home/you/.ssh/id_rsa`(`you`为用户个人目录)即`~/.ssh/id_rsa`。这一步很重要，如果你使用默认的，且下一个账号也是使用默认的路径和文件名，那么之前的`ssh key`就会被后来生成的`ssh key`重写，从而导致之前的账号不可用。因此，正确的做法是给它命名，最后以应用名进行命名，因为更容易区分。以下是我个人配的：    </span><br><span class="line">```shell</span><br><span class="line">/home/andy/.ssh/github_rsa</span><br></pre></td></tr></table></figure>

<h3 id="接下来会提示设置ssh安全密码。"><a href="#接下来会提示设置ssh安全密码。" class="headerlink" title="接下来会提示设置ssh安全密码。"></a>接下来会提示设置ssh安全密码。</h3><p>这一步可以使用默认的（即不设置密码），直接按回车即可。<br>这里会生成<code>xxx_rsa</code>和<code>xxx_rsa.pub</code>两个文件,<code>xxx_rsa</code>是生成的<code>ssh key</code>的私钥名，<code>xxx_rsa.pub</code>是生成的<code>ssh key</code>的公钥名，私钥要放在本地，公钥要放在服务器或github的Settings-&gt;SSHand GPG keys-&gt;New SSH key上。<br><img src="/2019/03/21/git教程/git-key.png" alt="git key">     </p>
<h3 id="ssh-key生成后，接下来需要为ssh-key添加代理。"><a href="#ssh-key生成后，接下来需要为ssh-key添加代理。" class="headerlink" title="ssh key生成后，接下来需要为ssh key添加代理。"></a><code>ssh key</code>生成后，接下来需要为<code>ssh key</code>添加代理。</h3><p>这是为了让请求自动对应相应的账号。网上很多文章写到需要另外配置<code>config</code>文件，经本人亲测，其实是不需要的，在生成了<code>ssh key</code>后，通过为生成的<code>ssh key</code>添加代理即可，为<code>ssh key</code>添加代理命令:<strong><code>ssh-add ~/.ssh/xxx_rsa</code></strong>， <code>xxx_rsa</code>是你生成的<code>ssh key</code>的私钥名，我的设置为:    </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh-add ~/.ssh/github_rsa</span><br></pre></td></tr></table></figure>

<p>这里有可能会提示以下错误:<br><img src="/2019/03/21/git教程/git-sshkey-error.png" alt="ssh-add key error"><br>解决方法:<br><em>需要ssh-agent启动bash，或者说把bash挂到ssh-agent下面</em>    </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh-agent bash --login -i</span><br></pre></td></tr></table></figure>

<h2 id="将生成的xxx-rsa-pub公钥内容添加到GitHub的SSH-keys页面上。"><a href="#将生成的xxx-rsa-pub公钥内容添加到GitHub的SSH-keys页面上。" class="headerlink" title="将生成的xxx_rsa.pub公钥内容添加到GitHub的SSH keys页面上。"></a>将生成的<code>xxx_rsa.pub</code>公钥内容添加到GitHub的SSH keys页面上。</h2><p><img src="/2019/03/21/git教程/github-ssh.png" alt="github ssh">    </p>
<h2 id="连接测试"><a href="#连接测试" class="headerlink" title="连接测试"></a>连接测试</h2><p>接下来我们测试是否配置成功，打开终端，输入:    </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>

<p><img src="/2019/03/21/git教程/git-test.png" alt="git test">    </p>
<h1 id="怎么快速淘到感兴趣的开源项目"><a href="#怎么快速淘到感兴趣的开源项目" class="headerlink" title="怎么快速淘到感兴趣的开源项目"></a>怎么快速淘到感兴趣的开源项目</h1><p><strong>UI界面高级搜索</strong>： <a href="https://github.com/search/advanced" target="_blank" rel="noopener">https://github.com/search/advanced</a>     </p>
<p><strong>命令高级搜索</strong>：   </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git 最好 学习 资料 <span class="keyword">in</span>:readme stars:&gt;1000 language:c</span><br></pre></td></tr></table></figure>

<p>上述命令的意思是搜索reademe中包含<code>git、最好、学习、资料</code>”且<code>star大于1000</code>的，用<code>C语言编写</code>的仓库。    </p>
<hr>
<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><blockquote>
<ol>
<li><a href="https://github.com/arslanbilal/git-cheat-sheet" target="_blank" rel="noopener">git-cheat-sheet</a></li>
<li><a href="https://harttle.land/2016/03/22/purge-large-files-in-gitrepo.html" target="_blank" rel="noopener">寻找并删除Git记录中的大文件</a> </li>
<li><a href="https://github.com/github/gitignore" target="_blank" rel="noopener">GitHub官网给出的例子</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>caffe数据格式</title>
    <url>/2019/03/21/caffe%E6%95%B0%E6%8D%AE%E6%A0%BC%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="Google-Protocol-Buffers-概述"><a href="#Google-Protocol-Buffers-概述" class="headerlink" title="Google Protocol Buffers 概述"></a>Google Protocol Buffers 概述</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p><strong>Protocol Buffers</strong> 是一种轻便高效的结构化数据存储格式，可以用于结构化数据串行化，或者说序列化。它很适合做<strong>数据存储</strong>或 <strong>RPC(Remote Procedure Call)</strong> 数据交换格式。可用于通讯协议、数据存储等领域的语言无关、平台无关、可扩展的序列化结构数据格式。目前提供了 <code>C++</code>、<code>Java</code>、<code>Python</code> 三种语言的 API。</p>
<p>本文概述介绍<strong>Protocol Buffers</strong>，以及开始如何开始<strong>Protocol Buffers</strong>之旅，本系列主要以Java为主。</p>
<p>以下<strong>Protocol Buffers</strong>简称PB。</p>
<h2 id="Protocol-Buffers是什么"><a href="#Protocol-Buffers是什么" class="headerlink" title="Protocol Buffers是什么"></a>Protocol Buffers是什么</h2><p>Protocol Buffers提供了一种灵活，高效，自动序列化结构数据的机制，可以联想XML，但是比XML更小，更快，更简单。仅需要自定义一次你所需的数据格式， 然后用户就可以使用Protocol Buffers自动生成的特定的源码，方便的读写用户自定义的格式化的数据。不限语言，不限平台。还可以在不破坏原数据格式的基础上，依据老的数据格式， 更新现有的数据格式。</p>
<h2 id="Protocol-Buffers如何工作的"><a href="#Protocol-Buffers如何工作的" class="headerlink" title="Protocol Buffers如何工作的"></a>Protocol Buffers如何工作的</h2><p>在PB中，有一种.proto类型的文件，用户 在.proto文件中定义PB “Message”来指定所需要序列化的数据的格式。每一个PB Message都是一个小的信息逻辑单元，包含了一些列的name-value对。下面举例说明一个简单地.proto文件，他定义了一条包含一个 Person信息的Message：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">message Person &#123;</span><br><span class="line">  required <span class="built_in">string</span> name = <span class="number">1</span>;</span><br><span class="line">  required int32 id = <span class="number">2</span>;</span><br><span class="line">  optional <span class="built_in">string</span> email = <span class="number">3</span>;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">enum</span> PhoneType &#123;</span><br><span class="line">    MOBILE = <span class="number">0</span>;</span><br><span class="line">    HOME = <span class="number">1</span>;</span><br><span class="line">    WORK = <span class="number">2</span>;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  message PhoneNumber &#123;</span><br><span class="line">    required <span class="built_in">string</span> number = <span class="number">1</span>;</span><br><span class="line">    optional PhoneType type = <span class="number">2</span> [<span class="keyword">default</span> = HOME];</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  repeated PhoneNumber phone = <span class="number">4</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如上代码所示，PB message 格式非常简单。每种类型的message包含一个或者多个唯一编码字段，每个字段由名称和值类型组成，值类型可以使数字(整形或者浮点型)，布尔值，字符 串，原始字节，甚至是其他的PB message。PB允许message中包含message，已达到分层嵌套。可以定义可选字段，必填字段以及重复字段。想要了解更多如何 写.proto 文件，可以访问：Protocol Buffer Language Guide</p>
<p>定 义好PB message后，选择合适语言的PB编译器，编译.proto文件，就可以生成存取数据的相关类。这些类包括简单的设置及读取字段的方法，也包括对整个 数据结构的message与二进制之间的转换。举个例子，如果你使用的语言是java，运行编译器编译上例.proto文件后，生成的类中包含一个 Person类。使用该类，就可以计算，序列化以及检索PB message。如下代码:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> throws IOException </span>&#123;</span><br><span class="line">    Person john = Person</span><br><span class="line">            .newBuilder()</span><br><span class="line">            .setId(<span class="number">1</span>)</span><br><span class="line">            .setName(<span class="string">"john"</span>)</span><br><span class="line">            .setEmail(<span class="string">"john@youku.com"</span>)</span><br><span class="line">            .addPhone(</span><br><span class="line">                PhoneNumber</span><br><span class="line">                    .newBuilder()</span><br><span class="line">                    .setNumber(<span class="string">"1861xxxxxxx"</span>)</span><br><span class="line">                    .setType(PhoneType.WORK)</span><br><span class="line">                    .build())</span><br><span class="line">            .build();</span><br><span class="line">    FileOutputStream output = <span class="keyword">new</span> FileOutputStream(<span class="string">"abc.txt"</span>);</span><br><span class="line">    john.writeTo(output);</span><br><span class="line">    output.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>接下来，你可以用如下代码读取：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> throws IOException </span>&#123;</span><br><span class="line">    FileInputStream input = <span class="keyword">new</span> FileInputStream(<span class="string">"abc.txt"</span>);</span><br><span class="line">    Person person = Person.parseFrom(input);</span><br><span class="line">    System.out.println(person.getId());</span><br><span class="line">    System.out.println(person.getName());</span><br><span class="line">    System.out.println(person.getEmail());</span><br><span class="line">    System.out.println(person.getPhoneCount());</span><br><span class="line">    System.out.println(person.getPhone(<span class="number">0</span>).getNumber());</span><br><span class="line">    System.out.println(person.getPhone(<span class="number">0</span>).getType());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>PB是易于扩展的，可以向后兼容的，我们可以在PB message中添加新的字段，这样，在parse的时候，老版本的数据就会简单的忽略新增加的字段。因此，如果现有通信协议使用了PB作为其数据格式，我们可以直接扩展该通信协议，而不必担心这将会破坏现有的代码。</p>
<p>对于使用.proto文件生成PB 客户端代码，可以参看这方面的完整教程：API Reference section。想要学习了解PB message是如何编码的，可以参见：Protocol Buffer Encoding。</p>
<h2 id="为什么不直接使用XML呢？"><a href="#为什么不直接使用XML呢？" class="headerlink" title="为什么不直接使用XML呢？"></a>为什么不直接使用XML呢？</h2><p>如果要序列化结构化数据，比起XML，PB实在是有许多的优点可以道道~</p>
<p>更简单<br>比XML小3<del>10倍<br>比XML快20</del>100倍<br>语义定义明确<br>自动生成数据存取类，更容易使用<br>假如我们要模拟一个Person，该对象包含name和email属性，如果用XML，我们定义如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">person</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>John Doe<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">email</span>&gt;</span>jdoe@example.com<span class="tag">&lt;/<span class="name">email</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">person</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>对应的，PB如下：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">person &#123;</span><br><span class="line">  name: "John Doe"</span><br><span class="line">  email: "jdoe@example.com"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>请注意：这里仅是PB格式的一种直观表示，真实的PB并非这样存储，实际上，在链路中，PB数据时二进制格式的。</p>
<p>当这段数据编码为PB二进制格式时，其实际大小大概是28bytes，编码时间为100<del>200纳秒。如果用XML的话，即使去除空格，大小也至少为69bytes，编码时间大概需要5000</del>10,000纳秒。</p>
<p>同样，解析这段代码，PB比XML要方便许多。用PB的话：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">person.getName();</span><br><span class="line">person.getEmail();</span><br></pre></td></tr></table></figure>

<p>而用XML的话：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">personNode.getElementsByTagName("name")</span><br><span class="line">personNode.getElementsByTagName("email")</span><br></pre></td></tr></table></figure>

<p>相比起来，PB更直接，而且不需要遍历节点等XML操作。</p>
<p>但是，金无足赤，人无完人，PB也一样。对于有很多标签的，基于文本的数据(例如HTML)，XML就完胜PB。XML是子描述的，可以随机且交错读取读取文本节点。XML是自描述的，而PB不是，PB必须要有格式定义文件(.proto 文件)</p>
<h2 id="一点历史"><a href="#一点历史" class="headerlink" title="一点历史"></a>一点历史</h2><p>PB由Google开发，最初是用于处理索引服务器的请求/响应协议。在有PB之前，Google使用手动编组和解组的方式来处理请求/相应协议。这种方式需要支持许多版本的协议，这就导致一些代码非常的丑陋，例如：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (version == <span class="number">3</span>) &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (version &gt; <span class="number">4</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (version == <span class="number">5</span>) &#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>另外，这种显示格式的协议同样将新发布的协议版本也搞得非常复杂，因为开发者必须在启用新的协议之前，确认所有的服务器，包括请求的发起者以及实际处理请求者，他们都能够理解新的协议。</p>
<p>PB即被设计来解决这些问题：</p>
<p>要可以非常容易的引入新字段，不需要检查数据的中间服务器 能够简单地解析数据，并且无须知道数据所有的字段就可以传输数据。<br>格式能够更加的自描述一些，并且可以被多用语言处理(C ++， Java，Python等)<br>至此，虽然解决了诸多问题，但用户依然需要手写他们的解析及编码代码。</p>
<p>随着系统的发展，PB逐渐形成了许多新的特性及用法：</p>
<p> 自动生成序列化及反序列化代码，避免手动解析<br>除了被用在短生命周期的RPC请求，也开始将PB作为一种方便的自描述格式去存储持久化数据。<br>Server RPC interfaces 开始被声明为协议文件的一部分，使用PB compiler 生成stub类，用户可以使用自己实现的服务器接口来覆盖他们。<br>Google Protocol Buffer( 简称 Protobuf) 是 Google 公司内部的混合语言数据标准，目前已经正在使用的有超过 48,162 种报文格式定义和超过 12,183 个 .proto 文件。他们用于 RPC 系统和持续数据存储系统。</p>
<p>译自：<a href="https://developers.google.com/protocol-buffers/docs/overview" target="_blank" rel="noopener">https://developers.google.com/protocol-buffers/docs/overview</a></p>
<hr>
<h1 id="Google-Protocol-Buffers-入门"><a href="#Google-Protocol-Buffers-入门" class="headerlink" title="Google Protocol Buffers 入门"></a>Google Protocol Buffers 入门</h1><hr>
<h1 id="Protocol-Buffers-语法指南"><a href="#Protocol-Buffers-语法指南" class="headerlink" title="Protocol Buffers 语法指南"></a>Protocol Buffers 语法指南</h1><hr>
<h1 id="Google-Protocol-Buffers-编码-Encoding"><a href="#Google-Protocol-Buffers-编码-Encoding" class="headerlink" title="Google Protocol Buffers 编码(Encoding)"></a>Google Protocol Buffers 编码(Encoding)</h1><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><blockquote>
<p><a href="http://www.cnblogs.com/shitouer/archive/2013/04/08/google-protocol-buffers-overview.html" target="_blank" rel="noopener">Google Protocol Buffers 概述</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Caffe</category>
      </categories>
      <tags>
        <tag>Caffe</tag>
        <tag>AI</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建深度学习服务器环境</title>
    <url>/2019/03/17/%E6%90%AD%E5%BB%BA%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<h1 id="安装Ubuntu和Windows双系统"><a href="#安装Ubuntu和Windows双系统" class="headerlink" title="安装Ubuntu和Windows双系统"></a>安装Ubuntu和Windows双系统</h1><p>详细的安装双系统就不过多介绍了，可以参考<a href="https://blog.csdn.net/s717597589/article/details/79117112/" target="_blank" rel="noopener">这篇文章</a>，但是在安装过程中有几个问题需要说明：      </p>
<ul>
<li><p>安装Ubuntu之前首先要把BIOS的<code>security boot</code>关闭，否则会出现NVIDIA驱动安装完以后重启电脑会反复进入登录界面。</p>
</li>
<li><p>硬盘分区的时候可以只分为<code>swap</code>、<code>UEFI</code>、<code>\</code>和<code>\home</code>四个分区，不分<code>\home</code>也可以，在挂在<code>\</code>分区的时候会自动生成<code>\home</code>和其他分区，但是在重装系统的时候<code>\home</code>无法重新挂在之前的<code>\home</code>分区导致数据丢失（类似于Windows的非系统盘）。</p>
</li>
<li><p>重装Ubuntu系统时请早Windows下用EasyUEFI软件将Ubuntu的引导项删除。</p>
</li>
</ul>
<hr>
<h1 id="安装NVIDIA驱动"><a href="#安装NVIDIA驱动" class="headerlink" title="安装NVIDIA驱动"></a>安装NVIDIA驱动</h1><h2 id="安装驱动NVIDIA所需的依赖包"><a href="#安装驱动NVIDIA所需的依赖包" class="headerlink" title="安装驱动NVIDIA所需的依赖包"></a>安装驱动NVIDIA所需的依赖包</h2><p><em>在终端里依次输入以下命令安装驱动所需的依赖包</em>    </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libhdf5-serial-dev protobuf-compiler</span><br><span class="line">sudo apt-get install --no-install-recommends libboost-all-dev</span><br><span class="line">sudo apt-get install libopenblas-dev liblapack-dev libatlas-base-dev</span><br><span class="line">sudo apt-get install libgflags-dev libgoogle-glog-dev liblmdb-dev</span><br><span class="line">sudo apt-get install git cmake build-essential</span><br></pre></td></tr></table></figure>

<p>假如有安装包一直下载失败，可以使用：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure>

<h2 id="禁用Ubuntu自带的显卡驱动"><a href="#禁用Ubuntu自带的显卡驱动" class="headerlink" title="禁用Ubuntu自带的显卡驱动"></a>禁用Ubuntu自带的显卡驱动</h2><p>Ubuntu 16.04 自带 nouveau显卡驱动，这个自带的驱动是不能用于CUDA的，需要卸载重装。假如重装过显卡驱动则可跳过这一步。没有重装过的就跟着我的步骤往下走。</p>
<p>首先得禁用Ubuntu自带的显卡驱动nouveau，只有在禁用掉 nouveau 后才能顺利安装 NVIDIA 显卡驱动，禁用方法就是在 <code>/etc/modprobe.d/blacklist-nouveau.conf</code>文件中添加一条禁用命令，首先需要打开该文件，通过以下命令打开：   </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo gedit /etc/modprobe.d/blacklist-nouveau.conf</span><br></pre></td></tr></table></figure>

<p>打开后发现该文件中没有任何内容，<strong>写入</strong>：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">blacklist nouveau  </span><br><span class="line">options nouveau modeset=0</span><br></pre></td></tr></table></figure>

<p>保存后关闭文件，注意此时还需执行以下命令使禁用 nouveau 真正生效：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo update-initramfs -u</span><br></pre></td></tr></table></figure>

<p>然后输入以下命令，若什么都没有显示则禁用nouveau生效了(<strong>重启电脑有可能会出现黑屏，原因是禁用了集成显卡，系统没有显卡驱动</strong>)：    </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">lsmod | grep nouveau</span><br></pre></td></tr></table></figure>

<h2 id="安装NVIDIA官方显卡驱动"><a href="#安装NVIDIA官方显卡驱动" class="headerlink" title="安装NVIDIA官方显卡驱动"></a>安装NVIDIA官方显卡驱动</h2><p>通过<code>Ctrl + Alt + F1</code>进入文本模式，输入帐号密码登录，通过<code>Ctrl + Alt + F7</code>可返回图形化模式，在文本模式登录后首先关闭桌面服务：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo service lightdm stop</span><br></pre></td></tr></table></figure>

<p>这里会要求你输入账户的密码。然后通过<code>Ctrl + Alt + F7</code>发现已无法成功返回图形化模式，说明桌面服务已成功关闭，注意此步对接下来的 NVIDIA 显卡驱动安装尤为重要，必需确保桌面服务已关闭。按<code>Ctrl + Alt + F1</code>再次进入终端命令行界面，先卸载之前的显卡驱动(注意以下命令在<code>Zsh</code>的shell环境下不认识*，需要切换到<code>bash</code>的shell环境)：    </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get purge nvidia*</span><br></pre></td></tr></table></figure>

<p>加入官方ppa源：   </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository ppa:graphics-drivers/ppa</span><br></pre></td></tr></table></figure>

<p>之后刷新软件库并安装显卡驱动：   </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install nvidia-418 nvidia-settings nvidia-prime  # CUDA 10.1</span><br><span class="line"><span class="meta">#</span><span class="bash">sudo apt-get install nvidia-390 nvidia-settings nvidia-prime  <span class="comment"># cuda 8.0 或 CUDA 9.0</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">sudo apt-get install nvidia-415 nvidia-settings nvidia-prime  <span class="comment"># CUDA 9.0</span></span></span><br></pre></td></tr></table></figure>

<p><strong>重启电脑</strong>，通过下面命令查看显卡信息：   </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nvidia-settings</span><br></pre></td></tr></table></figure>

<h2 id="配置NVIDIA环境变量"><a href="#配置NVIDIA环境变量" class="headerlink" title="配置NVIDIA环境变量"></a>配置NVIDIA环境变量</h2><p>使用 gedit 命令打开配置文件：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo gedit ~/.bashrc</span><br></pre></td></tr></table></figure>

<p>打开后在<strong>文件最后加入</strong>以下两行内容：   </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH</span><br><span class="line">export LD_LIBRARY_PATH=/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH</span><br></pre></td></tr></table></figure>

<p>保存并退出，运行以下内容使环境变量生效：   </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">source  ~/.bashrc</span><br></pre></td></tr></table></figure>

<h2 id="查看NVIDIA驱动版本"><a href="#查看NVIDIA驱动版本" class="headerlink" title="查看NVIDIA驱动版本"></a>查看NVIDIA驱动版本</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat /proc/driver/nvidia/version</span><br></pre></td></tr></table></figure>

<p><img src="/2019/03/17/搭建深度学习服务器环境/nvidia-driver.png" alt="nvidia driver"><br>或者   </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nvidia-smi</span><br></pre></td></tr></table></figure>

<p><img src="/2019/03/17/搭建深度学习服务器环境/nvidia-smi.png" alt="nvidia smi">    </p>
<hr>
<h1 id="安装CUDA"><a href="#安装CUDA" class="headerlink" title="安装CUDA"></a>安装CUDA</h1><h2 id="安装CUDA步骤"><a href="#安装CUDA步骤" class="headerlink" title="安装CUDA步骤"></a>安装CUDA步骤</h2><p><strong><a href="https://developer.nvidia.com/cuda-toolkit" target="_blank" rel="noopener">推荐下载安装<code>.run</code>格式文件</a>。</strong>  </p>
<ul>
<li><p><strong>安装CUDA9.0以及之前版本</strong><br>  安装完显卡驱动后，<code>CUDA Toolkit</code>和<code>samples</code>可单独安装，直接在终端运行安装，无需进入文本模式：   </p>
  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo sh cuda_9.0.176_384.81_linux.run --no-opengl-libs</span><br></pre></td></tr></table></figure>

<p>  执行此命令约1分钟后会出现安装协议要你看，刚开始是0%，此时长按回车键让此百分比增长，直到100%，然后按照提示操作即可，先输入 <code>accept</code> ，是否安装显卡驱动选择<code>no</code>:   </p>
  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Install NVIDIA Accelerated Graphics Driver for Linux-x86_64 387.26?</span><br><span class="line">(y)es/(n)o/(q)uit: n</span><br></pre></td></tr></table></figure>

<p>  其余的一律按<code>默认</code>或者<code>y</code>进行安装即可。    </p>
<p>  <img src="/2019/03/17/搭建深度学习服务器环境/cuda_finished.png" alt="CUDA安装完成">     </p>
<p>  安装结束以后在<code>/usr/local/</code>目录下查看，可以看到不但生成对应版本的<code>cuda-9.0</code>文件夹，还生成一个相应<code>软连接</code>文件夹<code>cuda</code>:<br>  <img src="/2019/03/17/搭建深度学习服务器环境/cuda1.png" alt="cuda1">    </p>
</li>
<li><p><strong>安装CUDA10.1</strong><br>  <em>按照前面安装<a href="#安装NVIDIA官方显卡驱动">NVIDIA驱动</a>方法安装<strong>NVIDIA-418</strong>驱动</em>    </p>
  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">chmod 777 cuda_10.1.105_418.39_linux.run</span><br><span class="line">sudo sh ./cuda_10.1.105_418.39_linux.run</span><br></pre></td></tr></table></figure>

<p>  输入<code>accept</code>进入安装界面:<br>  <img src="/2019/03/17/搭建深度学习服务器环境/cuda10.1_1.png" alt="CUDA 10.1"><br>  <strong>不要安装<code>CUDA</code>自带的<code>NVIDIA</code>驱动</strong>，将光标移动到<code>Driver</code>选项上，按下<strong>空格键</strong>取消选择安装<code>NVIDIA</code>驱动，移动光标再到<code>Install</code>上然后按回车。<br>  <img src="/2019/03/17/搭建深度学习服务器环境/cuda10.1_2.png" alt="CUDA 1O.1"><br>  若已经安装旧版本的CUDA版本，会出现以下提示，输入yes继续安装即可:<br>  <img src="/2019/03/17/搭建深度学习服务器环境/cuda10.1_install1.png" alt="CUDA 1O.1"><br>  安装成功后提示:<br>  <img src="/2019/03/17/搭建深度学习服务器环境/cuda10.1-finished.png" alt="CUDA success">      </p>
  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">===========</span><br><span class="line">= Summary =</span><br><span class="line">===========</span><br><span class="line"></span><br><span class="line">Driver:   Not Selected</span><br><span class="line">Toolkit:  Installed in /usr/local/cuda-10.1/</span><br><span class="line">Samples:  Installed in /home/andy/, but missing recommended libraries</span><br><span class="line"></span><br><span class="line">Please make sure that</span><br><span class="line">-   PATH includes /usr/local/cuda-10.1/bin</span><br><span class="line">-   LD_LIBRARY_PATH includes /usr/local/cuda-10.1/lib64, or, add /usr/local/cuda-10.1/lib64 to /etc/ld.so.conf and run ldconfig as root</span><br><span class="line"></span><br><span class="line">To uninstall the CUDA Toolkit, run cuda-uninstaller in /usr/local/cuda-10.1/bin</span><br><span class="line"></span><br><span class="line">Please see CUDA_Installation_Guide_Linux.pdf in /usr/local/cuda-10.1/doc/pdf for detailed information on setting up CUDA.</span><br><span class="line">***WARNING: Incomplete installation! This installation did not install the CUDA Driver. A driver of version at least 418.00 is required for CUDA 10.1 functionality to work.</span><br><span class="line">To install the driver using this installer, run the following command, replacing &lt;CudaInstaller&gt; with the name of this run file:</span><br><span class="line">    sudo &lt;CudaInstaller&gt;.run --silent --driver</span><br><span class="line"></span><br><span class="line">Logfile is /var/log/cuda-installer.log</span><br></pre></td></tr></table></figure>

<p>  安装成功以后在<code>/usr/local/</code>目录下查看，可以看到不但生成对应版本的<code>cuda-10.1</code>文件夹，还生成一个相应<code>软连接</code>文件夹<code>cuda</code>或者将之前cuda9.0生成的<strong>cuda软连接</strong>重新指向cuda10.1文件夹:<br>  <img src="/2019/03/17/搭建深度学习服务器环境/cuda10.1-success.png" alt="CUDA 10.1 Sucessful">     </p>
</li>
</ul>
<h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><p>安装完成后配置<code>CUDA</code>环境变量，使用<code>vim</code>配置文件：   </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim ~/.bashrc</span><br></pre></td></tr></table></figure>

<p>在该文件最后加入以下两行并保存：   </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> CUDA</span></span><br><span class="line">export PATH=/usr/local/cuda/bin:$PATH    #/usr/local/cuda和/usr/local/cuda-10.1是同一个文件夹，两者通过软连接相连</span><br><span class="line">export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH</span><br></pre></td></tr></table></figure>

<p><strong>使该配置生效：</strong>   </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">source  ~/.bashrc</span><br></pre></td></tr></table></figure>

<p><strong>检验CUDA 是否安装成功</strong>，输入：   </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /usr/local/cuda/samples/1_Utilities/deviceQuery</span><br><span class="line">sudo make</span><br><span class="line">./deviceQuery</span><br></pre></td></tr></table></figure>

<ul>
<li><p><strong>CUDA 9.0 PASS</strong>:<br>  <img src="/2019/03/17/搭建深度学习服务器环境/cuda9-pass.png" alt="CUDA 9.0 PASS">    </p>
</li>
<li><p><strong>CUDA 10.1 PASS</strong>:<br>  <img src="/2019/03/17/搭建深度学习服务器环境/cuda10.1-pass.png" alt="CUDA 10.1 PASS">    </p>
</li>
</ul>
<h2 id="查看CUDA版本"><a href="#查看CUDA版本" class="headerlink" title="查看CUDA版本"></a>查看CUDA版本</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat /usr/local/cuda/version.txt</span><br></pre></td></tr></table></figure>

<!-- ![cuda](cuda.png)     -->
<ul>
<li><p>CUDA 9.0<br>  <img src="/2019/03/17/搭建深度学习服务器环境/cuda9.0-version.png" alt="CUDA 9.0">     </p>
</li>
<li><p>CUDA 10.1<br>  <img src="/2019/03/17/搭建深度学习服务器环境/cuda-version.png" alt="CUDA 10.1">     </p>
</li>
</ul>
<h2 id="卸载CUDA的方法"><a href="#卸载CUDA的方法" class="headerlink" title="卸载CUDA的方法"></a>卸载CUDA的方法</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /usr/local/cuda/bin</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> CUDA 9.0</span></span><br><span class="line">sudo ./uninstall_cuda_9.0.pl</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> CUDA 10.1</span></span><br><span class="line">sudo ./cuda-uninstaller</span><br></pre></td></tr></table></figure>

<p>卸载完成后如果显示：<code>Not removing directory, it is not empty: /usr/local/cuda-9.0</code> ，假如需要重装<code>CUDA 9.0</code>的话就把这个文件夹删除。在<code>/usr/local/</code>路径下输入：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> CUDA 9.0</span></span><br><span class="line">sudo rm -rf cuda-9.0</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> CUDA 10.1</span></span><br><span class="line">sudo rm -rf cuda-10.1</span><br></pre></td></tr></table></figure>

<h2 id="安装CUDA过程中遇到的问题"><a href="#安装CUDA过程中遇到的问题" class="headerlink" title="安装CUDA过程中遇到的问题"></a>安装CUDA过程中遇到的问题</h2><p><code>CUDA 10.1</code>提示安装失败:<br><img src="/2019/03/17/搭建深度学习服务器环境/cuda-error.png" alt="CUDA Error"><br>查看<code>vim /var/log/cuda-installer.log</code>显示:<br><img src="/2019/03/17/搭建深度学习服务器环境/cuda-error1.png" alt="Error Detail"><br><code>ERROR: You appear to be running an X server; please exit X</code>，是在安装<code>CUDA</code>的时候选择的安装<code>CUDA</code>自带的<code>NVIDIA</code>显卡驱动导致的，解决方法是:<br>(1)在安装<code>CUDA</code>的时候不要选择安装<code>CUDA</code>自带的<code>NVIDIA</code>驱动；<br>(2)若要用<code>CUDA</code>自带的<code>NVIDIA</code>显卡驱动，则<code>Ctrl + Alt + F1</code>在终端命令行进行安装:    </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo service lightdm stop</span><br><span class="line">bash # Switch from zsh environment to bash environment</span><br><span class="line">sudo apt-get purge nvidia*</span><br><span class="line">sudo sh ./cuda_10.1.105_418.39_linux.run</span><br></pre></td></tr></table></figure>

<p>若是在终端命令行下安装的CUDA，则需要安装成功后运行:    </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo service lightdm start</span><br></pre></td></tr></table></figure>

<p>然后再按通过<code>Ctrl + Alt + F7</code>可返回图形化模式。   </p>
<hr>
<h1 id="安装cuDNN"><a href="#安装cuDNN" class="headerlink" title="安装cuDNN"></a>安装cuDNN</h1><h2 id="下载安装cuDNN"><a href="#下载安装cuDNN" class="headerlink" title="下载安装cuDNN"></a>下载安装cuDNN</h2><p><code>cuDNN</code>要根据<code>CUDA</code>选择相应平台版本，在<code>Ubuntu16.04</code>下(<code>Ubuntu</code>其他版本类似)到<a href="https://developer.nvidia.com/rdp/cudnn-archive" target="_blank" rel="noopener">cuDNN官网</a><strong>推荐下载安装<code>.tgz</code>格式的文件</strong>, 不推荐下载安装<code>.deb</code>格式，若误装了<code>.deb</code>格式的cuDNN请用以下命令进行卸载:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">dpkg -l |grep -i libcudnn* # 查看.deb安装的cudnn</span><br><span class="line">sudo apt-get purge libcudnn×</span><br><span class="line">```    </span><br><span class="line">下面以安装**cuDNN v7.5.0**为例安装，其他版本类似，只需要将版本号改一下即可:    </span><br><span class="line">![cuDNN Download](cudnn.png)      </span><br><span class="line"></span><br><span class="line">解压`cudnn-10.1-linux-x64-v7.5.0.56.tgz`到当前文件夹，得到一个`cuda`文件夹，该文件夹下有`include`和 `lib64`两个文件夹:    </span><br><span class="line">![cuDNN folder](cuDNN-folder.png)      </span><br><span class="line"></span><br><span class="line">**若安装了多个`CUDA`版本，要特别注意`/usr/local/cuda`软连接到了哪个版本的`CUDA`。**    </span><br><span class="line"></span><br><span class="line">命令行进入其中的`include`文件夹路径下，然后进行以下操作：</span><br><span class="line">```shell</span><br><span class="line">cd ~/Download/cuda/include/</span><br><span class="line">sudo cp cudnn.h /usr/local/cuda/include/ #复制头文件</span><br></pre></td></tr></table></figure>

<p>然后命令行进入<code>cuda/lib64</code>文件夹路径下(其实<code>cuda/lib64</code>文件夹下通过Beyond Compare查看，<code>libcudnn.so</code>、<code>libcudnn.so.7</code>和<code>libcudnn.so.7.5.0</code>是同一个文件的不同扩展名)，运行以下命令：    </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd ~/Download/cuda/lib64/</span><br><span class="line">sudo cp lib* /usr/local/cuda/lib64/ #复制动态链接库</span><br><span class="line">sudo chmod a+r /usr/local/cuda/include/cudnn.h /usr/local/cuda/lib64/libcudnn*</span><br><span class="line">cd /usr/local/cuda/lib64/</span><br><span class="line">sudo rm -rf libcudnn.so libcudnn.so.7  #删除原有动态文件</span><br><span class="line">sudo ln -s libcudnn.so.7.5.0 libcudnn.so.7  #生成软链接</span><br><span class="line">sudo ln -s libcudnn.so.7 libcudnn.so  #生成软链接</span><br></pre></td></tr></table></figure>

<p><img src="/2019/03/17/搭建深度学习服务器环境/cudnn1.png" alt="cudnn1">    </p>
<p>随后需要将路径<code>/usr/local/cuda/lib64</code>添加到动态库，分两步：<br>1）安装<code>vim</code>, 输入： </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install vim-gtk</span><br></pre></td></tr></table></figure>

<p>2）<strong>配置</strong>，输入：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/ld.so.conf.d/cuda.conf</span><br></pre></td></tr></table></figure>

<p><strong>编辑状态</strong>下，输入：   </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">/usr/local/cuda/lib64</span><br></pre></td></tr></table></figure>

<p>保存退出，输入下面代码使其<strong>生效</strong>：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo ldconfig</span><br></pre></td></tr></table></figure>

<p>安装完成后可用<code>nvcc -V</code>命令验证是否安装成功，若出现以下信息则表示安装成功：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nvcc: NVIDIA (R) Cuda compiler driver</span><br><span class="line">Copyright (c) 2005-2019 NVIDIA Corporation</span><br><span class="line">Built on Fri_Feb__8_19:08:17_PST_2019</span><br><span class="line">Cuda compilation tools, release 10.1, V10.1.105</span><br></pre></td></tr></table></figure>

<p>查看<code>cuDNN</code>版本:    </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat /usr/local/cuda/include/cudnn.h | grep CUDNN_MAJOR -A 2</span><br></pre></td></tr></table></figure>

<p><img src="/2019/03/17/搭建深度学习服务器环境/cudnn2.png" alt="cudnn2">     </p>
<h2 id="cuDNN常见问题"><a href="#cuDNN常见问题" class="headerlink" title="cuDNN常见问题"></a>cuDNN常见问题</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Error : Failed to get convolution algorithm. </span><br><span class="line">This is probably because cuDNN failed to initialize, </span><br><span class="line">so try looking to see if a warning log message was printed above.</span><br></pre></td></tr></table></figure>

<p>出现上述问题是安装的<code>cuDNN</code>版本跟<code>CUDA</code>和<code>TensorFlow</code>相兼容的版本不符合，重新安装指定版本的<code>cuDNN</code>即可。    </p>
<p><strong>参考资料</strong>    </p>
<blockquote>
<p><a href="https://docs.nvidia.com/deeplearning/sdk/cudnn-install/index.html#installlinux" target="_blank" rel="noopener">cuDNN官方安装指导</a>     </p>
</blockquote>
<hr>
<h1 id="CUDA多版本问题"><a href="#CUDA多版本问题" class="headerlink" title="CUDA多版本问题"></a>CUDA多版本问题</h1><p>在实验的时候有些算法跟当前生效(安装)的<code>CUDA</code>和<code>cuDNN</code>版本不一致，所以需要同时安装多个版本，这里就是解决同时管理多个<code>CUDA</code>版本问题.   </p>
<ol>
<li><p>首先按照上述介绍的<a href="#安装cuda">安装CUDA</a>和对应版本的<a href="#安装cudnn">安装cuDNN</a>，安装实验环境依赖的版本；</p>
</li>
<li><p>默认<code>/usr/local/cuda</code>是<strong>软连接</strong>到<strong>最新安装的<code>CUDA</code>文件夹</strong>上的:<br> <img src="/2019/03/17/搭建深度学习服务器环境/cuda10.1-success.png" alt="cuda2">    </p>
</li>
<li><p>删除已经软连接的<code>/usr/local/cuda</code>，将需要的<code>CUDA-X.0安装文件夹</code>软连接到<code>/usr/local/cuda</code>上, 例如需要<code>CUDA 9.0</code>这个版本:      </p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">    cd /usr/local/</span><br><span class="line">    sudo rm cuda</span><br><span class="line">    sudo ln -s /usr/local/cuda-9.0 /usr/local/cuda</span><br><span class="line">    ```    </span><br><span class="line">    ![cuda3](cuda9-cuda10.1.png)       </span><br><span class="line">4. 由于在安装`CUDA`的时候已经将`cuda`加入了环境变量，所以不用再加入了。   </span><br><span class="line">5. 查看`CUDA`版本   </span><br><span class="line">    ```shell</span><br><span class="line">    cat /usr/local/cuda/version.txt</span><br></pre></td></tr></table></figure>

<p> <img src="/2019/03/17/搭建深度学习服务器环境/cuda9.0-version.png" alt="cuda">     </p>
</li>
</ol>
<hr>
<h1 id="Anaconda"><a href="#Anaconda" class="headerlink" title="Anaconda"></a>Anaconda</h1><h2 id="安装Anaconda"><a href="#安装Anaconda" class="headerlink" title="安装Anaconda"></a>安装Anaconda</h2><p>下载<code>Anaconda</code>的<code>sh</code>文件<code>Anaconda3-5.2.0-Linux-x86_64.sh</code>，然后运行以下代码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chmod a+x ./Anaconda3-5.2.0-Linux-x86_64.sh <span class="comment">#chmod 777 ./Anaconda3-5.2.0-Linux-x86_64.sh</span></span><br><span class="line">bash Anaconda3-5.2.0-Linux-x86_64.sh</span><br></pre></td></tr></table></figure>

<p>或者</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chmod 777 Anaconda3-5.3.1-Linux-x86_64.sh</span><br><span class="line">bash Anaconda3-5.3.1-Linux-x86_64.sh</span><br></pre></td></tr></table></figure>

<p><strong><code>conda install -c menpo opencv3</code>命令有时候会显示权限不够<code>permission issue</code>。这是因为你安装<code>anaconda</code>时用的是<code>sudo</code>，这时候需要修改<code>anaconda3</code>文件夹权限</strong>:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo chown -R 你的用户名 /home/你的用户名/anaconda3</span><br></pre></td></tr></table></figure>

<h2 id="屏蔽Anaconda"><a href="#屏蔽Anaconda" class="headerlink" title="屏蔽Anaconda"></a>屏蔽Anaconda</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim ~/.bashrc</span><br></pre></td></tr></table></figure>

<p>然后屏蔽后的结果如下：    </p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"># added by Anaconda3 <span class="number">5.3</span>.<span class="number">1</span> installer</span><br><span class="line">#export PATH=<span class="string">"/home/andy/anaconda3/bin:$PATH"</span></span><br><span class="line">#export LD_LIBRARY_PATH=~/anaconda3/li<span class="variable">b:</span>$LD_LIBRARY_PATH</span><br><span class="line">#export CPLUS_INCLUDE_PATH=~/anaconda3/include/<span class="keyword">python3</span>.<span class="number">6</span><span class="keyword">m</span></span><br></pre></td></tr></table></figure>

<p>其实这里涉及到<code>linux可执行程序搜索路径</code>的问题，上述<code>PATH=&quot;/home/andy/anaconda3/bin:$PATH&quot;</code>将<code>/home/andy/anaconda3/bin</code>放在了原始的<code>$PATH</code>前面，这样系统在执行的时候首先检查要可执行文件是否在<code>/home/andy/anaconda3/bin</code>中，然后再从<code>$PATH</code>中搜索，理解了这个关系，上述代码可以改为，这样改了以后将不需要<a href="#重建anaconda软连接">重建Anaconda软连接</a>这一步操作了:    </p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"># added by Anaconda3 <span class="number">5.3</span>.<span class="number">1</span> installer</span><br><span class="line">export PATH=<span class="string">"$PATH：/home/andy/anaconda3/bin"</span></span><br><span class="line">export LD_LIBRARY_PATH=$LD_LIBRARY_PATH：~/anaconda3/lib</span><br><span class="line">export CPLUS_INCLUDE_PATH=~/anaconda3/include/<span class="keyword">python3</span>.<span class="number">6</span><span class="keyword">m</span></span><br></pre></td></tr></table></figure>

<p><strong>Anaconda最新版屏蔽如下</strong>    </p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"># added by Anaconda3 <span class="number">5.3</span>.<span class="number">1</span> installer</span><br><span class="line"># &gt;&gt;&gt; conda init &gt;&gt;&gt;</span><br><span class="line"># !! Contents within this block are managed by <span class="string">'conda init'</span> !!</span><br><span class="line">#__conda_setup=<span class="string">"$(CONDA_REPORT_ERRORS=false '/home/andy/anaconda3/bin/conda' shell.bash hook 2&gt; /dev/null)"</span></span><br><span class="line">#if [ $? -eq 0 ]; then</span><br><span class="line">#    \<span class="built_in">eval</span> <span class="string">"$__conda_setup"</span></span><br><span class="line">#else</span><br><span class="line">#    if [ -f "/home/andy/anaconda3/etc/profile.d/conda.sh" ]; then</span><br><span class="line">#        . <span class="string">"/home/andy/anaconda3/etc/profile.d/conda.sh"</span></span><br><span class="line">#        CONDA_CHANGEPS1=false conda activate base</span><br><span class="line">#    <span class="keyword">else</span></span><br><span class="line">#        \export PATH=<span class="string">"/home/andy/anaconda3/bin:$PATH"</span></span><br><span class="line">#    fi</span><br><span class="line">#fi</span><br><span class="line">#unset __conda_setup</span><br><span class="line"># &lt;&lt;&lt; conda init &lt;&lt;&lt;</span><br></pre></td></tr></table></figure>

<p>最后命令行输入以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>

<p><strong>必须重启电脑</strong>    </p>
<h2 id="重建Anaconda软连接"><a href="#重建Anaconda软连接" class="headerlink" title="重建Anaconda软连接"></a>重建Anaconda软连接</h2><p><strong>重建原理</strong><br>由于linux系统默认搜索可执行文件的顺序为<code>/bin</code> -&gt; <code>/usr/bin</code> -&gt; <code>/usr/local/bin</code> ，而前两个为系统的可执行文件存放的地方，<code>/usr/local/bin</code>为用户自定义的可执行文件存放区，所以只需要将<code>Anaconda</code>的<code>~/anaconda3/bin/可执行文件</code><strong>软连接</strong>到<code>/usr/local/bin</code>即可。    </p>
<p>当需要<strong>重新使用<code>Anaconda</code>的时候</strong>，只需要将<code>Anaconda</code>的执行文件<strong>软连接</strong>到<code>/usr/local/bin</code>里，注意<strong>这里要用绝对路径，否则不起作用</strong>，如：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo ln  -s  /home/andy/anaconda3/bin/conda  /usr/local/bin/conda</span><br><span class="line">sudo ln  -s  /home/andy/anaconda3/bin/activate  /usr/local/bin/activate</span><br><span class="line">sudo ln  -s  /home/andy/anaconda3/bin/deactivate  /usr/local/bin/deactivate</span><br></pre></td></tr></table></figure>

<p>首先注意<code>usr</code> 指 <code>Unix System Resource</code>，而不是<code>User</code>,    </p>
<ul>
<li><code>/usr/bin</code>下面的都是系统预装的可执行程序，会随着系统升级而改变    </li>
<li><code>/usr/local/bin</code>目录是给用户放置自己的可执行程序的地方，推荐放在这里，不会被系统升级而覆盖同名文件    </li>
</ul>
<p><strong>软连接后使用</strong>时：<br>首先用以下命令查看anaconda环境(自带为base):    </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda env list</span><br></pre></td></tr></table></figure>

<p><img src="/2019/03/17/搭建深度学习服务器环境/conda1.png" alt="conda list">    </p>
<p><strong>激活环境用：</strong>        </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda activate [env name]</span><br><span class="line"><span class="meta">#</span><span class="bash"> or</span></span><br><span class="line">source activate [env name]</span><br></pre></td></tr></table></figure>

<p><strong>注意:</strong> 上面<code>[env name]</code>用具体的环境名代替，如<code>conda activate base</code>.<br><img src="/2019/03/17/搭建深度学习服务器环境/conda2.png" alt="conda list">    </p>
<p><strong>取消激活环境用：</strong>    </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda deactivate</span><br><span class="line"><span class="meta">#</span><span class="bash"> or</span></span><br><span class="line">source deactivate</span><br></pre></td></tr></table></figure>

<p><img src="/2019/03/17/搭建深度学习服务器环境/conda3.png" alt="conda list">    </p>
<h2 id="Anaconda虚拟环境"><a href="#Anaconda虚拟环境" class="headerlink" title="Anaconda虚拟环境"></a>Anaconda虚拟环境</h2><p><strong>创建新的虚拟环境</strong>：    </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda create -n venv python=3.6 # select python version</span><br></pre></td></tr></table></figure>

<p><strong>激活虚拟环境</strong>:    </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">source activate venv</span><br></pre></td></tr></table></figure>

<p><strong>删除虚拟环境</strong>:   </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda env remove -n venv</span><br></pre></td></tr></table></figure>

<hr>
<h1 id="安装opencv"><a href="#安装opencv" class="headerlink" title="安装opencv"></a>安装opencv</h1><h2 id="下载OpenCV"><a href="#下载OpenCV" class="headerlink" title="下载OpenCV"></a>下载OpenCV</h2><p>进入官网 : <a href="http://opencv.org/releases.html" target="_blank" rel="noopener">http://opencv.org/releases.html</a> 或者 <a href="https://github.com/opencv/opencv/releases" target="_blank" rel="noopener">https://github.com/opencv/opencv/releases</a>, 选择 需要的 <code>x.x.x.zip</code>版本, 下载 <code>opencv-x.x.x.zip</code> :</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span></span><br><span class="line">wget https://github.com/opencv/opencv/archive/x.x.x.zip</span><br><span class="line">chmod 777 x.x.x.zip</span><br><span class="line">unzip x.x.x.zip</span><br></pre></td></tr></table></figure>

<h2 id="编译OpenCV"><a href="#编译OpenCV" class="headerlink" title="编译OpenCV"></a>编译OpenCV</h2><p>随后解压到你要安装的位置，命令行进入已解压的文件夹 <code>opencv-x.x.x</code> 目录下，执行：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd opencv-x.x.x</span><br><span class="line">mkdir build # 创建编译的文件目录</span><br><span class="line">cd build</span><br><span class="line">cmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=/usr/local -DBUILD_JPEG=ON -DBUILD_TIFF=ON -DBUILD_PNG=ON ..</span><br><span class="line">make -j8  #编译</span><br></pre></td></tr></table></figure>

<p><strong>遇到一下报错信息有两种可能：</strong><br><img src="/2019/03/17/搭建深度学习服务器环境/opencv-error1.png" alt="编译报错">    </p>
<ul>
<li><p>在编译<code>opencv3.4.0</code>源码的时候，会下载诸如<code>ippicv_2017u3_lnx_intel64_20170822.tgz</code>的压缩包，如果下载失败，请<a href="opencv/opencv-3.4.0-dev.cache.zip">下载离线包</a>，解压该文件，会得到<code>.cache</code>文件夹，用此文件夹覆盖<code>opencv</code>源码文件夹下的<code>.cache</code>文件夹，再重新编译即可。<code>.cahce</code>文件夹为隐藏文件，可用<code>ctrl+h</code>查看。</p>
</li>
<li><p>若本机里安装了<strong>Anaconda</strong>，<strong>推荐<a href="#屏蔽anaconda">屏蔽Anaconda</a></strong>，否则需要在<code>~/.bashrc</code> 或 <code>~/.zshrc</code>中加入：</p>
  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> added by Anaconda3 installer</span></span><br><span class="line">export PATH="/home/andy/anaconda3/bin:$PATH"</span><br><span class="line">export LD_LIBRARY_PATH=~/anaconda3/lib:$LD_LIBRARY_PATH</span><br><span class="line">export CPLUS_INCLUDE_PATH=~/anaconda3/include/python3.6m</span><br><span class="line">export PATH="$PATH:$HOME/bin"</span><br></pre></td></tr></table></figure>

</li>
</ul>
<p>在<code>98%</code>的时候会等很久很久，属于正常现象。</p>
<h2 id="安装OpenCV"><a href="#安装OpenCV" class="headerlink" title="安装OpenCV"></a>安装OpenCV</h2><p>编译成功后安装：   </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo make install <span class="comment">#安装</span></span><br></pre></td></tr></table></figure>

<p>运行以下命令刷新<code>opencv</code>动态链接库：    </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ldconfig</span><br></pre></td></tr></table></figure>

<p>安装完成后通过查看 <code>opencv</code> 版本验证是否安装成功：   </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pkg-config --modversion opencv</span><br></pre></td></tr></table></figure>

<p><strong>若运行以上命令提示一下错误</strong>：<br><img src="/2019/03/17/搭建深度学习服务器环境/opencv-error2.png" alt="编译报错"><br><strong>临时解决方法</strong>    </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> PKG_CONFIG_PATH=/usr/<span class="built_in">local</span>/lib/pkgconfig</span><br><span class="line">```   </span><br><span class="line">**彻底解决方法**    </span><br><span class="line">接下来要给系统加入`opencv`库的环境变量:    </span><br><span class="line">用`gedit`打开`/etc/ld.so.conf`，注意要用sudo打开获得权限，不然无法修改， 如：</span><br><span class="line">```shell</span><br><span class="line">sudo gedit /etc/ld.so.conf</span><br></pre></td></tr></table></figure>

<p>在文件中加上一行:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">/usr/local/lib</span><br></pre></td></tr></table></figure>

<p><code>/user/local</code>是<code>opencv</code>安装路径 就是<code>makefile</code>中指定的安装路径。    </p>
<p>再运行:   </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ldconfig</span><br></pre></td></tr></table></figure>

<ul>
<li><p><strong>bash</strong>    </p>
<ul>
<li><p><strong>所有用户</strong><br>修改<code>/etc/bash.bashrc</code>文件:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/bash.bashrc</span><br></pre></td></tr></table></figure>

<p>在文件末尾加入： </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/local/lib/pkgconfig </span><br><span class="line">export PKG_CONFIG_PATH</span><br></pre></td></tr></table></figure>

<p>运行<code>source /etc/bash.bashrc</code>使其生效。    </p>
</li>
<li><p><strong>当前用户</strong><br>修改<code>~/.bashrc</code>文件:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim ~/.bashrc</span><br></pre></td></tr></table></figure>

<p>在文件末尾加入： </p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/local/lib/pkgconfig </span><br><span class="line">export PKG_CONFIG_PATH</span><br></pre></td></tr></table></figure>

<p>运行<code>source ~/.bashrc</code>使其生效。    </p>
</li>
</ul>
</li>
<li><p><strong>zsh</strong>    </p>
<ul>
<li><p><strong>所有用户</strong>    </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/zsh/zprofile</span><br></pre></td></tr></table></figure>

<p>然后加入以下内容:   </p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/local/lib/pkgconfig </span><br><span class="line">export PKG_CONFIG_PATH</span><br></pre></td></tr></table></figure>

<p>运行<code>source /etc/zsh/zprofile</code>使其生效。</p>
</li>
<li><p><strong>当前用户</strong>    </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim ~/.zshrc</span><br></pre></td></tr></table></figure>

<p>然后加入以下内容:   </p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/local/lib/pkgconfig </span><br><span class="line">export PKG_CONFIG_PATH</span><br></pre></td></tr></table></figure>

<p>运行<code>source ~/.zshrc</code>使其生效。</p>
</li>
</ul>
</li>
</ul>
<h2 id="卸载OpenCV"><a href="#卸载OpenCV" class="headerlink" title="卸载OpenCV"></a>卸载OpenCV</h2><p>进入<code>OpenCV</code>解压文件夹中的<code>buid</code>文件夹：   </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd $HOME/opencv-x.x.x/build</span><br></pre></td></tr></table></figure>

<p>运行：   </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo make uninstall</span><br></pre></td></tr></table></figure>

<p>然后把整个<code>opencv-x.x.x</code>文件夹都删掉。随后再运行：   </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo rm -r /usr/local/include/opencv2 /usr/local/include/opencv \</span><br><span class="line">/usr/include/opencv /usr/include/opencv2 /usr/local/share/opencv \</span><br><span class="line">/usr/local/share/OpenCV /usr/share/opencv /usr/share/OpenCV \</span><br><span class="line">/usr/local/bin/opencv* /usr/local/lib/libopencv</span><br></pre></td></tr></table></figure>

<p>把一些残余的动态链接文件和空文件夹删掉。有些文件夹已经被删掉了所以会找不到路径。    </p>
<hr>
<h1 id="TensorRT"><a href="#TensorRT" class="headerlink" title="TensorRT"></a>TensorRT</h1><h2 id="安装TensorRT"><a href="#安装TensorRT" class="headerlink" title="安装TensorRT"></a>安装TensorRT</h2><blockquote>
<p><a href="https://docs.nvidia.com/deeplearning/sdk/tensorrt-install-guide/index.html" target="_blank" rel="noopener">TensorRT官方安装指南</a>    </p>
</blockquote>
<h3 id="TensorRT环境变量设置"><a href="#TensorRT环境变量设置" class="headerlink" title="TensorRT环境变量设置"></a>TensorRT环境变量设置</h3><p>首先<a href="https://developer.nvidia.com/nvidia-tensorrt-download" target="_blank" rel="noopener">下载<strong>tar</strong>版本的安装包</a>，需要登陆NVIDIA账号。<br>安装<code>TensorRT</code>前需要<a href="#安装cuda">安装<code>Cuda</code></a>和<a href="#安装cudnn">安装<code>cudnn</code></a>，安装步骤可以参考上方。<br>打开下载的<code>TensorRT</code>所在路径，解压下载的<code>tar</code>文件：   </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chmod 777 TensorRT-XXX.tar.gz</span><br><span class="line">tar -xzvf TensorRT-XXX.tar.gz</span><br></pre></td></tr></table></figure>

<p>将加压后的<code>TensorRT-XXX</code>文件夹移动到<code>HOME</code>目录下，并创建软连接，这样可以安装多个版本的<code>TensorRT-XXX</code>，在切换的时候只需要将用到的<code>TensorRT-XXX</code>版本软连接到<code>TensorRT</code>上就可以了:    </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mv TensorRT-XXX  ~/TensorRT-XXX</span><br><span class="line">cd</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Create Symbol Link</span></span><br><span class="line">ln -s ~/TensorRT-XXX  TensorRT</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> TensorRT 3</span></span><br><span class="line">sudo ln -s ~/TensorRT/bin/giexec /usr/local/bin/</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> TensorRT &gt;= 4</span></span><br><span class="line">sudo ln -s ~/TensorRT/bin/trtexec /usr/local/bin/</span><br></pre></td></tr></table></figure>

<p>然后设置<strong>环境变量</strong>：    </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> bash</span></span><br><span class="line">vim ~/.bashrc # 打开环境变量文件</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> zsh</span></span><br><span class="line">vim ~/.zshrc # 打开环境变量文件</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 将下面三个环境变量写入环境变量文件并保存</span></span><br><span class="line">export LD_LIBRARY_PATH=~/TensorRT/lib:$LD_LIBRARY_PATH</span><br><span class="line">export CUDA_INSTALL_DIR=/usr/local/cuda</span><br><span class="line">export CUDNN_INSTALL_DIR=/usr/local/cuda</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> bash</span></span><br><span class="line">source ~/.bashrc   # 使刚刚修改的环境变量文件生效</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> zsh</span></span><br><span class="line">source ~/.zshrc</span><br></pre></td></tr></table></figure>

<h3 id="安装Python的TensorRT包"><a href="#安装Python的TensorRT包" class="headerlink" title="安装Python的TensorRT包"></a>安装Python的TensorRT包</h3><p>进到解压后的<code>TensorRT</code>的<strong>Python</strong>文件下：   </p>
<h4 id="非虚拟环境下"><a href="#非虚拟环境下" class="headerlink" title="非虚拟环境下"></a>非虚拟环境下</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/TensorRT/python/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对于python2</span></span><br><span class="line">sudo pip2 install tensorrt-XXX-cp27-cp27mu-linux_x86_64.whl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对于python3</span></span><br><span class="line">sudo pip3 install tensorrt-XXX-cp35-cp35m-linux_x86_64.whl</span><br></pre></td></tr></table></figure>

<p>或者：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> TensorRT/python/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对于python2</span></span><br><span class="line">pip2 install tensorrt-XXX-cp27-cp27mu-linux_x86_64.whl --user</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对于python3</span></span><br><span class="line">pip3 install tensorrt-XXX-cp35-cp35m-linux_x86_64.whl --user</span><br></pre></td></tr></table></figure>

<h4 id="虚拟环境下"><a href="#虚拟环境下" class="headerlink" title="虚拟环境下"></a>虚拟环境下</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span>  activate venv</span><br><span class="line"><span class="built_in">cd</span> TensorRT/python/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对于python2</span></span><br><span class="line">pip install tensorrt-XXX-cp27-cp27mu-linux_x86_64.whl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对于python3</span></span><br><span class="line">pip install tensorrt-XXX-cp35-cp35m-linux_x86_64.whl</span><br></pre></td></tr></table></figure>

<p><strong>如安装失败请参考<a href="#安装过程中遇到的问题以及解决方法">安装过程中遇到的问题以及解决方法</a>。</strong>   </p>
<h3 id="安装uff"><a href="#安装uff" class="headerlink" title="安装uff"></a>安装uff</h3><p>转到<strong>uff</strong>目录下安装<code>uff</code>文件夹下安装：   </p>
<h4 id="非虚拟环境下-1"><a href="#非虚拟环境下-1" class="headerlink" title="非虚拟环境下"></a>非虚拟环境下</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/TensorRT/uff/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对于python2</span></span><br><span class="line">sudo pip2 install uff-XXX-py2.py3-none-any.whl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对于python3</span></span><br><span class="line">sudo pip3 install uff-XXX-py2.py3-none-any.whl</span><br></pre></td></tr></table></figure>

<p>或者：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> TensorRT/uff/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对于python2</span></span><br><span class="line">pip2 install uff-XXX-py2.py3-none-any --user</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对于python3</span></span><br><span class="line">pip3 install uff-XXX-py2.py3-none-any --user</span><br></pre></td></tr></table></figure>

<h4 id="虚拟环境下-1"><a href="#虚拟环境下-1" class="headerlink" title="虚拟环境下"></a>虚拟环境下</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span>  activate venv</span><br><span class="line"><span class="built_in">cd</span> TensorRT/uff/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对于python2</span></span><br><span class="line">pip install uff-XXX-py2.py3-none-any.whl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对于python3</span></span><br><span class="line">pip install uff-XXX-py2.py3-none-any.whl</span><br></pre></td></tr></table></figure>

<h3 id="验证TensorRT是否安装成功"><a href="#验证TensorRT是否安装成功" class="headerlink" title="验证TensorRT是否安装成功"></a>验证TensorRT是否安装成功</h3><p><strong>测试TensorRT是否安装成功</strong>：   </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">which</span> tensorrt</span><br></pre></td></tr></table></figure>

<p>会输出<code>TensorRT</code>的安装路径:    </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/bin/tensorrt</span><br></pre></td></tr></table></figure>

<p><strong>测试uff是否安装成功</strong>：   </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">which</span> convert-to-uff</span><br></pre></td></tr></table></figure>

<p>会输出<code>uff</code>的安装路径:    </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/bin/convert-to-uff</span><br></pre></td></tr></table></figure>

<p>拷贝<code>lenet5.uff</code>到python相关目录进行验证：   </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo cp TensorRT/data/mnist/lenet5.uff TensorRT/python/data/mnist/lenet5.uff</span><br><span class="line"><span class="built_in">cd</span> TensorRT/samples/sampleMNIST</span><br><span class="line">make clean</span><br><span class="line">make</span><br><span class="line"><span class="built_in">cd</span> /TensorRT/bin（转到bin目录下面，make后的可执行文件在此目录下）</span><br><span class="line">./sample_mnist</span><br></pre></td></tr></table></figure>

<p>命令执行顺利即安装成功。   </p>
<h3 id="TensorRT安装过程中遇到的问题以及解决方法"><a href="#TensorRT安装过程中遇到的问题以及解决方法" class="headerlink" title="TensorRT安装过程中遇到的问题以及解决方法"></a>TensorRT安装过程中遇到的问题以及解决方法</h3><h4 id="在安装Python的TensorRT包时可能出现的错误"><a href="#在安装Python的TensorRT包时可能出现的错误" class="headerlink" title="在安装Python的TensorRT包时可能出现的错误"></a>在安装<code>Python</code>的<code>TensorRT</code>包时可能出现的错误</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">In file included from src/cpp/cuda.cpp:1:0:</span><br><span class="line">src/cpp/cuda.hpp:14:18: fatal error: cuda.h: No such file or directory</span><br><span class="line">compilation terminated.</span><br><span class="line">error: <span class="built_in">command</span> <span class="string">'x86_64-linux-gnu-gcc'</span> failed with <span class="built_in">exit</span> status 1</span><br></pre></td></tr></table></figure>

<p><img src="/2019/03/17/搭建深度学习服务器环境/tensorrt_error.png" alt="TensorRT报错"><br><strong>原因</strong><br>显示是找不到cuda.h，根据网上分析是因为用了sudo之后环境变量用的是root的环境变量。    </p>
<p><strong>解决方案</strong><br>将cuda的安装路径添加到root的环境变量中，在root角色下安装Python的TensorRT包:   </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo gedit /etc/profile.d/cuda.sh</span><br><span class="line">``` </span><br><span class="line">添加：  </span><br><span class="line"></span><br><span class="line">```shell</span><br><span class="line">export PATH=/usr/local/cuda/bin:$PATH</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo su -</span><br><span class="line"><span class="meta">#</span><span class="bash"> 对于python2</span></span><br><span class="line">pip2 install tensorrt-XXX-cp27-cp27mu-linux_x86_64.whl</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 对于python3</span></span><br><span class="line">pip3 install tensorrt-XXX-cp35-cp35m-linux_x86_64.whl</span><br><span class="line">exit</span><br></pre></td></tr></table></figure>

<h4 id="Python导入tensorrt或者tensorflow的时候提示ImportError-numpy-core-multiarray-failed-to-import"><a href="#Python导入tensorrt或者tensorflow的时候提示ImportError-numpy-core-multiarray-failed-to-import" class="headerlink" title="Python导入tensorrt或者tensorflow的时候提示ImportError: numpy.core.multiarray failed to import"></a><code>Python</code>导入<code>tensorrt</code>或者<code>tensorflow</code>的时候提示<code>ImportError: numpy.core.multiarray failed to import</code></h4><p><strong>解决方法</strong>:    </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install -U numpy</span><br></pre></td></tr></table></figure>

<h2 id="TensorRT生成Engine"><a href="#TensorRT生成Engine" class="headerlink" title="TensorRT生成Engine"></a>TensorRT生成Engine</h2><h3 id="Caffe模型用TensorRT生成Engine"><a href="#Caffe模型用TensorRT生成Engine" class="headerlink" title="Caffe模型用TensorRT生成Engine"></a>Caffe模型用TensorRT生成Engine</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">~/TensorRT/bin/giexec \</span><br><span class="line">--deploy=path_to_prototxt/intputdeploy.prototxt \</span><br><span class="line">--output=prob \</span><br><span class="line">--model=path_to_caffemodel/caffeModelName.caffemodel \</span><br><span class="line">--engine=path_to_output_engine/outputEngineName.engine</span><br></pre></td></tr></table></figure>

<h3 id="Tensorflow模型用TensorRT生成Engine"><a href="#Tensorflow模型用TensorRT生成Engine" class="headerlink" title="Tensorflow模型用TensorRT生成Engine"></a>Tensorflow模型用TensorRT生成Engine</h3><p>源码文件在<a href="tensorrt/tools"><code>src/tensorrt/tools</code></a>中。     </p>
<p>首先将<code>TensorFlow</code>模型生成<code>uff</code>文件，然后再将<code>uff</code>文件转为<code>engine</code>:    </p>
<h4 id="将TensorFlow模型生成UFF文件"><a href="#将TensorFlow模型生成UFF文件" class="headerlink" title="将TensorFlow模型生成UFF文件"></a>将TensorFlow模型生成UFF文件</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author : Andy Liu</span></span><br><span class="line"><span class="comment"># Last modified: 2019-03-15</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># This script is used to convert tensorflow model file to uff file</span></span><br><span class="line"><span class="comment"># Using: </span></span><br><span class="line"><span class="comment">#        python tf_to_uff.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> uff</span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">import</span> tensorrt <span class="keyword">as</span> trt</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os.environ[<span class="string">'CUDA_VISIBLE_DEVICES'</span>] = <span class="string">'0'</span></span><br><span class="line"></span><br><span class="line">ckpt_path = <span class="string">"model/model.ckpt"</span></span><br><span class="line">forzen_model_path = <span class="string">"model/frozen_graphs/frozen_graph.pb"</span></span><br><span class="line">uff_path = <span class="string">"model/uff/model.uff"</span></span><br><span class="line"></span><br><span class="line">frozen_input_name = <span class="string">"input"</span></span><br><span class="line">net_input_shape = (<span class="number">3</span>, <span class="number">32</span>, <span class="number">32</span>)</span><br><span class="line">frozen_output_names = [<span class="string">"fc_3/frozen"</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getChatBotModel</span><span class="params">(ckpt_path)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> tf.Session() <span class="keyword">as</span> sess:</span><br><span class="line">        sess.run(tf.global_variables_initializer())</span><br><span class="line">        saver = tf.train.import_meta_graph(ckpt_path+<span class="string">'.meta'</span>)</span><br><span class="line">        saver.restore(sess, ckpt_path)</span><br><span class="line">        graph = tf.get_default_graph().as_graph_def()</span><br><span class="line">        <span class="comment">#graph = tf.get_default_graph()</span></span><br><span class="line">        <span class="comment">#print('graph list:', graph.get_operations())</span></span><br><span class="line">        frozen_graph = tf.graph_util.convert_variables_to_constants(sess, graph, frozen_output_names)</span><br><span class="line">        <span class="keyword">return</span> tf.graph_util.remove_training_nodes(frozen_graph)</span><br><span class="line"></span><br><span class="line">tf_model = getChatBotModel(ckpt_path)</span><br><span class="line"><span class="keyword">with</span> tf.gfile.FastGFile(forzen_model_path, mode=<span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(tf_model.SerializeToString())</span><br><span class="line"><span class="comment">#uff_model = uff.from_tensorflow(tf_model, output_nodes=frozen_output_names, output_filename=uff_path, text=True)</span></span><br><span class="line">uff_model = uff.from_tensorflow_frozen_model(forzen_model_path, output_nodes=frozen_output_names, output_filename=uff_path, text=<span class="keyword">True</span>)</span><br><span class="line">print(<span class="string">'Success! UFF file is in '</span>, os.path.abspath(uff_path))</span><br></pre></td></tr></table></figure>

<h4 id="将UFF文件转为Engine"><a href="#将UFF文件转为Engine" class="headerlink" title="将UFF文件转为Engine"></a>将UFF文件转为Engine</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author : Andy Liu</span></span><br><span class="line"><span class="comment"># Last modified: 2019-03-15</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># This script is used to convert .uff file to .engine for TX2/PX2 or other NVIDIA Platform</span></span><br><span class="line"><span class="comment"># Using: </span></span><br><span class="line"><span class="comment">#        python uff_to_engine.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="comment"># import tensorflow as tf</span></span><br><span class="line"><span class="keyword">import</span> tensorrt <span class="keyword">as</span> trt</span><br><span class="line"><span class="keyword">from</span> tensorrt.parsers <span class="keyword">import</span> uffparser</span><br><span class="line"><span class="keyword">import</span> uff</span><br><span class="line"></span><br><span class="line">print(<span class="string">"TensorRT version = "</span>, trt.__version__)</span><br><span class="line">os.environ[<span class="string">'CUDA_VISIBLE_DEVICES'</span>] = <span class="string">'0'</span></span><br><span class="line"></span><br><span class="line">frozen_input_name = <span class="string">"input"</span></span><br><span class="line">net_input_shape = (<span class="number">3</span>, <span class="number">32</span>, <span class="number">32</span>)</span><br><span class="line">frozen_output_name = <span class="string">"fc_3/frozen"</span></span><br><span class="line">uff_path = <span class="string">'model.uff'</span></span><br><span class="line">engine_path = <span class="string">"model.engine"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">uff2engine</span><span class="params">(frozen_input_name, net_input_shape,frozen_output_name,uff_path,engine_path)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(uff_path, <span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        uff_model = f.read()</span><br><span class="line">        G_LOGGER = trt.infer.ConsoleLogger(trt.infer.LogSeverity.ERROR)</span><br><span class="line">        parser = uffparser.create_uff_parser()</span><br><span class="line">        parser.register_input(frozen_input_name, net_input_shape, <span class="number">0</span>)</span><br><span class="line">        <span class="comment"># parser.register_input("input", (3, 128, 128), 0)</span></span><br><span class="line">        parser.register_output(frozen_output_name)</span><br><span class="line">        engine = trt.utils.uff_to_trt_engine(G_LOGGER, uff_model, parser, <span class="number">1</span>, <span class="number">1</span>&lt;&lt;<span class="number">20</span> )</span><br><span class="line">        parser.destroy()</span><br><span class="line">        trt.utils.write_engine_to_file(engine_path, engine.serialize())</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    engine_dir = os.path.dirname(engine_path)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(engine_dir) <span class="keyword">and</span> <span class="keyword">not</span> engine_dir == <span class="string">'.'</span> <span class="keyword">and</span> <span class="keyword">not</span> engine_dir ==<span class="string">''</span>:</span><br><span class="line">        print(<span class="string">"Warning !!! %s is not exists, now has create "</span>%engine_dir)</span><br><span class="line">        os.makedirs(engine_dir)</span><br><span class="line"></span><br><span class="line">    uff2engine(frozen_input_name, net_input_shape,frozen_output_name,uff_path,engine_path)</span><br><span class="line">    print(<span class="string">"Success! Engine file has saved in "</span>, os.path.abspath(engine_path))</span><br></pre></td></tr></table></figure>

<h4 id="调用Engine进行推理"><a href="#调用Engine进行推理" class="headerlink" title="调用Engine进行推理"></a>调用Engine进行推理</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="comment"># import tensorflow as tf</span></span><br><span class="line"><span class="keyword">import</span> tensorrt <span class="keyword">as</span> trt</span><br><span class="line"><span class="keyword">from</span> tensorrt.parsers <span class="keyword">import</span> uffparser</span><br><span class="line"><span class="keyword">import</span> pycuda.driver <span class="keyword">as</span> cuda</span><br><span class="line"><span class="comment"># import uff</span></span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">IMG_PATH = <span class="string">"./img/1.png"</span></span><br><span class="line">LABEL = <span class="number">1</span></span><br><span class="line">ENGINE_PATH = <span class="string">"./model/engine/model.engine"</span></span><br><span class="line">NET_INPUT_SHAPE = (<span class="number">32</span>, <span class="number">32</span>)</span><br><span class="line">NET_OUTPUT_SHAPE = <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">normalize_img</span><span class="params">(img)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Normalize image data to [-1,+1]</span></span><br><span class="line"><span class="string">    Arguments:</span></span><br><span class="line"><span class="string">        img: source image</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">return</span> (img<span class="number">-128.</span>)/<span class="number">128.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Load Image</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">load_image</span><span class="params">(img_path, net_input_shape)</span>:</span></span><br><span class="line">    img = Image.open(img_path)</span><br><span class="line">    img = img.resize(net_input_shape)</span><br><span class="line">    <span class="keyword">return</span> np.asarray(img, dtype=np.float32)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">img = load_image(IMG_PATH, NET_INPUT_SHAPE)</span><br><span class="line">img = normalize_img(img)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Load Engine file</span></span><br><span class="line">G_LOGGER = trt.infer.ConsoleLogger(trt.infer.LogSeverity.ERROR)</span><br><span class="line">engine = trt.utils.load_engine(G_LOGGER, ENGINE_PATH)</span><br><span class="line">context = engine.create_execution_context()</span><br><span class="line">runtime = trt.infer.create_infer_runtime(G_LOGGER)</span><br><span class="line"></span><br><span class="line">output = np.empty(<span class="number">5</span>, dtype = np.float32)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Alocate device memory</span></span><br><span class="line">d_input = cuda.mem_alloc(<span class="number">1</span> * img.nbytes)</span><br><span class="line">d_output = cuda.mem_alloc(NET_OUTPUT_SHAPE * output.nbytes)</span><br><span class="line"></span><br><span class="line">bindings = [int(d_input), int(d_output)]</span><br><span class="line"></span><br><span class="line">stream = cuda.Stream()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Transfer input data to device</span></span><br><span class="line">cuda.memcpy_htod_async(d_input, img, stream)</span><br><span class="line"><span class="comment"># Execute model </span></span><br><span class="line">context.enqueue(<span class="number">1</span>, bindings, stream.handle, <span class="keyword">None</span>)</span><br><span class="line"><span class="comment"># Transfer predictions back</span></span><br><span class="line">cuda.memcpy_dtoh_async(output, d_output, stream)</span><br><span class="line"><span class="comment"># Syncronize threads</span></span><br><span class="line">stream.synchronize()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(<span class="string">"Test Case: "</span> + str(LABEL))</span><br><span class="line"><span class="keyword">print</span> (<span class="string">"Prediction: "</span> + str(np.argmax(output)))</span><br></pre></td></tr></table></figure>

<h3 id="TensorRT官方实例"><a href="#TensorRT官方实例" class="headerlink" title="TensorRT官方实例"></a>TensorRT官方实例</h3><p>资料在本仓库<code>src/tensorrt</code>目录下:    </p>
<ul>
<li><a href="https://github.com/aimuch/AiPlay/blob/master/src/tensorrt/tensorrt-4.0.1.6/caffe_to_tensorrt.ipynb" target="_blank" rel="noopener">TensorRT Caffe Engine</a>    </li>
<li><a href="https://github.com/aimuch/AiPlay/blob/master/src/tensorrt/tensorrt-4.0.1.6/tf_to_tensorrt.ipynb" target="_blank" rel="noopener">TensorRT Tensorflow Engine</a>    </li>
<li><a href="https://github.com/aimuch/AiPlay/blob/master/src/tensorrt/tensorrt-4.0.1.6/manually_construct_tensorrt_engine.ipynb" target="_blank" rel="noopener">Manually Construct Tensorrt Engine</a>    </li>
</ul>
<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><blockquote>
<p><a href="https://docs.nvidia.com/deeplearning/sdk/tensorrt-install-guide/index.html" target="_blank" rel="noopener">TensorRT官方安装指南</a>   </p>
</blockquote>
<hr>
<h1 id="安装caffe"><a href="#安装caffe" class="headerlink" title="安装caffe"></a>安装caffe</h1><h2 id="Python2下安装Cafe"><a href="#Python2下安装Cafe" class="headerlink" title="Python2下安装Cafe"></a>Python2下安装Cafe</h2><h3 id="安装依赖库"><a href="#安装依赖库" class="headerlink" title="安装依赖库"></a>安装依赖库</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get upgrade</span><br><span class="line">sudo apt-get install -y build-essential cmake git pkg-config</span><br><span class="line">sudo apt-get install -y libprotobuf-dev libleveldb-dev libsnappy-dev protobuf-compiler</span><br><span class="line"></span><br><span class="line">sudo apt-get install -y libatlas-base-dev</span><br><span class="line">sudo apt-get install -y --no-install-recommends libboost-all-dev</span><br><span class="line"></span><br><span class="line">sudo apt-get install -y libgflags-dev libgoogle-glog-dev liblmdb-dev</span><br><span class="line">sudo apt-get -y install build-essential cmake git libgtk2.0-dev pkg-config python-dev python-numpy libdc1394-22 libdc1394-22-dev libjpeg-dev libpng12-dev libtiff5-dev libjasper-dev libavcodec-dev libavformat-dev libswscale-dev libxine2-dev libgstreamer0.10-dev libgstreamer-plugins-base0.10-dev libv4l-dev libtbb-dev libqt4-dev libfaac-dev libmp3lame-dev libopencore-amrnb-dev libopencore-amrwb-dev libtheora-dev libvorbis-dev libxvidcore-dev x264 v4l-utils unzip</span><br></pre></td></tr></table></figure>

<h3 id="配置CUDA-及-CUDNN"><a href="#配置CUDA-及-CUDNN" class="headerlink" title="配置CUDA 及 CUDNN"></a>配置<code>CUDA</code> 及 <code>CUDNN</code></h3><p>添加 CUDA 环境变量   </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim ~/.bashrc</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> CUDA</span></span><br><span class="line">export PATH=/usr/local/cuda/bin:$PATH  # cuda -&gt; /usr/local/cuda-9.0</span><br><span class="line">export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH</span><br></pre></td></tr></table></figure>

<h3 id="安装OpenCV，方法同-安装OpenCV"><a href="#安装OpenCV，方法同-安装OpenCV" class="headerlink" title="安装OpenCV，方法同: 安装OpenCV"></a>安装<code>OpenCV</code>，方法同: <a href="#安装opencv">安装OpenCV</a></h3><h3 id="然后按照前面的方法屏蔽Anaconda"><a href="#然后按照前面的方法屏蔽Anaconda" class="headerlink" title="然后按照前面的方法屏蔽Anaconda"></a>然后按照前面的方法<a href="#屏蔽anaconda">屏蔽Anaconda</a></h3><h3 id="配置Caffe"><a href="#配置Caffe" class="headerlink" title="配置Caffe"></a>配置<code>Caffe</code></h3><p><strong>首先cd 到你要安装的路径下运行</strong>：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/BVLC/caffe.git</span><br></pre></td></tr></table></figure>

<p>这时候会出现一个 <code>caffe</code> 文件夹。命令行进入此文件夹，运行：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cp Makefile.config.example Makefile.config</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 若无法拷贝则运行以下命令</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> chmod 777 Makefile.config.example</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> cp Makefile.config.example Makefile.config</span></span><br><span class="line">```    </span><br><span class="line">此命令是将 `Makefile.config.example` 文件复制一份并更名为 `Makefile.config` ，复制一份的原因是编译 `caffe` 时需要的是 `Makefile.config` 文件，而Makefile.config.example 只是 `caffe` 给出的配置文件例子，不能用来编译 `caffe`。   </span><br><span class="line"></span><br><span class="line">**然后修改 Makefile.config 文件**，在 `caffe` 目录下打开该文件：</span><br><span class="line">```shell</span><br><span class="line">vim Makefile.config</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 或者用右键选择gedit/vscode打开该文件</span></span><br></pre></td></tr></table></figure>

<h4 id="修改-Makefile-config-文件内容"><a href="#修改-Makefile-config-文件内容" class="headerlink" title="修改 Makefile.config 文件内容"></a>修改 <code>Makefile.config</code> 文件内容</h4><ul>
<li><p><strong>应用 cudnn</strong><br>将：<code>#USE_CUDNN := 1</code>修改为：<code>USE_CUDNN := 1</code>   </p>
</li>
<li><p><strong>应用 opencv 3 版本</strong><br>将：<code>#OPENCV_VERSION := 3</code>修改为：<code>OPENCV_VERSION := 3</code>   </p>
</li>
<li><p><strong>使用 python 接口</strong><br>将： <code>#WITH_PYTHON_LAYER := 1</code>修改为<code>WITH_PYTHON_LAYER := 1</code>   </p>
</li>
<li><p><strong>修改 python 路径</strong><br>将：   </p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">INCLUDE_DIRS := $(PYTHON_INCLUDE) /usr/local/include</span><br><span class="line">LIBRARY_DIRS := $(PYTHON_LIB) /usr/local/lib /usr/lib</span><br></pre></td></tr></table></figure>

<p>修改为：         </p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">INCLUDE_DIRS := $(PYTHON_INCLUDE) /usr/local/include /usr/include/hdf5/serial</span><br><span class="line">LIBRARY_DIRS := $(PYTHON_LIB) /usr/local/lib /usr/lib /usr/lib/x86_64-linux-gnu /usr/lib/x86_64-linux-gnu/hdf5/serial</span><br></pre></td></tr></table></figure>

<p>此python路径为系统自带python的路径，假如想使用<code>Anaconda</code>的python的话需要在其他地方修改。</p>
</li>
<li><p><strong>去掉compute_20</strong><br>找到</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> CUDA architecture setting: going with all of them.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> For CUDA &lt; 6.0, comment the *_50 through *_61 lines <span class="keyword">for</span> compatibility.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> For CUDA &lt; 8.0, comment the *_60 and *_61 lines <span class="keyword">for</span> compatibility.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> For CUDA &gt;= 9.0, comment the *_20 and *_21 lines <span class="keyword">for</span> compatibility.</span></span><br><span class="line">CUDA_ARCH := -gencode arch=compute_20,code=sm_20 \</span><br><span class="line">            -gencode arch=compute_20,code=sm_21 \</span><br><span class="line">            -gencode arch=compute_30,code=sm_30 \</span><br><span class="line">            -gencode arch=compute_35,code=sm_35 \</span><br><span class="line">            -gencode arch=compute_50,code=sm_50 \</span><br><span class="line">            -gencode arch=compute_52,code=sm_52 \</span><br><span class="line">            -gencode arch=compute_60,code=sm_60 \</span><br><span class="line">            -gencode arch=compute_61,code=sm_61 \</span><br><span class="line">            -gencode arch=compute_61,code=compute_61</span><br></pre></td></tr></table></figure>

<p>改为：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> CUDA architecture setting: going with all of them.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> For CUDA &lt; 6.0, comment the *_50 through *_61 lines <span class="keyword">for</span> compatibility.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> For CUDA &lt; 8.0, comment the *_60 and *_61 lines <span class="keyword">for</span> compatibility.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> For CUDA &gt;= 9.0, comment the *_20 and *_21 lines <span class="keyword">for</span> compatibility.</span></span><br><span class="line">CUDA_ARCH := -gencode arch=compute_30,code=sm_30 \</span><br><span class="line">            -gencode arch=compute_35,code=sm_35 \</span><br><span class="line">            -gencode arch=compute_50,code=sm_50 \</span><br><span class="line">            -gencode arch=compute_52,code=sm_52 \</span><br><span class="line">            -gencode arch=compute_60,code=sm_60 \</span><br><span class="line">            -gencode arch=compute_61,code=sm_61 \</span><br><span class="line">            -gencode arch=compute_61,code=compute_61</span><br></pre></td></tr></table></figure>

<p>由于<strong>CUDA 9.x +并不支持compute_20</strong>，此处不修改的话编译<code>caffe</code>时会报错：    </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nvcc fatal  : Unsupported gpu architecture 'compute_20'</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h4 id="配置好的完整的Makefile-config文件"><a href="#配置好的完整的Makefile-config文件" class="headerlink" title="配置好的完整的Makefile.config文件"></a>配置好的完整的<code>Makefile.config</code>文件</h4><p>在caffe源码目录中修改后的完整<code>Makefile.config</code>文件，内容如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Refer to http://caffe.berkeleyvision.org/installation.html</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Contributions simplifying and improving our build system are welcome!</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> cuDNN acceleration switch (uncomment to build with cuDNN).</span></span><br><span class="line">USE_CUDNN := 1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> CPU-only switch (uncomment to build without GPU support).</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> CPU_ONLY := 1</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> uncomment to <span class="built_in">disable</span> IO dependencies and corresponding data layers</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> USE_OPENCV := 0</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> USE_LEVELDB := 0</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> USE_LMDB := 0</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> uncomment to allow MDB_NOLOCK when reading LMDB files (only <span class="keyword">if</span> necessary)</span></span><br><span class="line"><span class="meta">#</span><span class="bash">	You should not <span class="built_in">set</span> this flag <span class="keyword">if</span> you will be reading LMDBs with any</span></span><br><span class="line"><span class="meta">#</span><span class="bash">	possibility of simultaneous <span class="built_in">read</span> and write</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ALLOW_LMDB_NOLOCK := 1</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Uncomment <span class="keyword">if</span> you<span class="string">'re using OpenCV 3</span></span></span><br><span class="line">OPENCV_VERSION := 3</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> To customize your choice of compiler, uncomment and <span class="built_in">set</span> the following.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> N.B. the default <span class="keyword">for</span> Linux is g++ and the default <span class="keyword">for</span> OSX is clang++</span></span><br><span class="line">CUSTOM_CXX := g++</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> CUDA directory contains bin/ and lib/ directories that we need.</span></span><br><span class="line">CUDA_DIR := /usr/local/cuda</span><br><span class="line"><span class="meta">#</span><span class="bash"> On Ubuntu 14.04, <span class="keyword">if</span> cuda tools are installed via</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="string">"sudo apt-get install nvidia-cuda-toolkit"</span> <span class="keyword">then</span> use this instead:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> CUDA_DIR := /usr</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> CUDA architecture setting: going with all of them.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> For CUDA &lt; 6.0, comment the *_50 through *_61 lines <span class="keyword">for</span> compatibility.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> For CUDA &lt; 8.0, comment the *_60 and *_61 lines <span class="keyword">for</span> compatibility.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> For CUDA &gt;= 9.0, comment the *_20 and *_21 lines <span class="keyword">for</span> compatibility.</span></span><br><span class="line">CUDA_ARCH := -gencode arch=compute_30,code=sm_30 \</span><br><span class="line">            -gencode arch=compute_35,code=sm_35 \</span><br><span class="line">            -gencode arch=compute_50,code=sm_50 \</span><br><span class="line">            -gencode arch=compute_52,code=sm_52 \</span><br><span class="line">            -gencode arch=compute_60,code=sm_60 \</span><br><span class="line">            -gencode arch=compute_61,code=sm_61 \</span><br><span class="line">            -gencode arch=compute_61,code=compute_61</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> BLAS choice:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> atlas <span class="keyword">for</span> ATLAS (default)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> mkl <span class="keyword">for</span> MKL</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> open <span class="keyword">for</span> OpenBlas</span></span><br><span class="line">BLAS := atlas</span><br><span class="line"><span class="meta">#</span><span class="bash"> Custom (MKL/ATLAS/OpenBLAS) include and lib directories.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Leave commented to accept the defaults <span class="keyword">for</span> your choice of BLAS</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> (<span class="built_in">which</span> should work)!</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> BLAS_INCLUDE := /path/to/your/blas</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> BLAS_LIB := /path/to/your/blas</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Homebrew puts openblas <span class="keyword">in</span> a directory that is not on the standard search path</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> BLAS_INCLUDE := $(shell brew --prefix openblas)/include</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> BLAS_LIB := $(shell brew --prefix openblas)/lib</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> This is required only <span class="keyword">if</span> you will compile the matlab interface.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> MATLAB directory should contain the mex binary <span class="keyword">in</span> /bin.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> MATLAB_DIR := /usr/<span class="built_in">local</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> MATLAB_DIR := /Applications/MATLAB_R2012b.app</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> NOTE: this is required only <span class="keyword">if</span> you will compile the python interface.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> We need to be able to find Python.h and numpy/arrayobject.h.</span></span><br><span class="line">PYTHON_INCLUDE := /usr/include/python2.7 \</span><br><span class="line">                  /usr/lib/python2.7/dist-packages/numpy/core/include</span><br><span class="line"><span class="meta">#</span><span class="bash"> Anaconda Python distribution is quite popular. Include path:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Verify anaconda location, sometimes it<span class="string">'s in root.</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ANACONDA_HOME := $(HOME)/anaconda</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> PYTHON_INCLUDE := $(ANACONDA_HOME)/include \</span></span><br><span class="line">    # $(ANACONDA_HOME)/include/python2.7 \</span><br><span class="line">    # $(ANACONDA_HOME)/lib/python2.7/site-packages/numpy/core/include</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Uncomment to use Python 3 (default is Python 2)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> PYTHON_LIBRARIES := boost_python3 python3.5m</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> PYTHON_INCLUDE := /usr/include/python3.5m \</span></span><br><span class="line"><span class="meta">#</span><span class="bash">                 /usr/lib/python3.5/dist-packages/numpy/core/include</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> We need to be able to find libpythonX.X.so or .dylib.</span></span><br><span class="line">PYTHON_LIB := /usr/lib</span><br><span class="line"><span class="meta">#</span><span class="bash"> PYTHON_LIB := $(ANACONDA_HOME)/lib</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Homebrew installs numpy <span class="keyword">in</span> a non standard path (keg only)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> PYTHON_INCLUDE += $(dir $(shell python -c <span class="string">'import numpy.core; print(numpy.core.__file__)'</span>))/include</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> PYTHON_LIB += $(shell brew --prefix numpy)/lib</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Uncomment to support layers written <span class="keyword">in</span> Python (will link against Python libs)</span></span><br><span class="line">WITH_PYTHON_LAYER := 1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Whatever <span class="keyword">else</span> you find you need goes here.</span></span><br><span class="line">INCLUDE_DIRS := $(PYTHON_INCLUDE) /usr/local/include /usr/include/hdf5/serial/</span><br><span class="line">LIBRARY_DIRS := $(PYTHON_LIB) /usr/local/lib /usr/lib /usr/lib/x86_64-linux-gnu /usr/lib/x86_64-linux-gnu/hdf5/serial</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> If Homebrew is installed at a non standard location (<span class="keyword">for</span> example your home directory) and you use it <span class="keyword">for</span> general dependencies</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> INCLUDE_DIRS += $(shell brew --prefix)/include</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> LIBRARY_DIRS += $(shell brew --prefix)/lib</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> NCCL acceleration switch (uncomment to build with NCCL)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> https://github.com/NVIDIA/nccl (last tested version: v1.2.3-1+cuda8.0)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> USE_NCCL := 1</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Uncomment to use `pkg-config` to specify OpenCV library paths.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> (Usually not necessary -- OpenCV libraries are normally installed <span class="keyword">in</span> one of the above <span class="variable">$LIBRARY_DIRS</span>.)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> USE_PKG_CONFIG := 1</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> N.B. both build and distribute <span class="built_in">dirs</span> are cleared on `make clean`</span></span><br><span class="line">BUILD_DIR := build</span><br><span class="line">DISTRIBUTE_DIR := distribute</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Uncomment <span class="keyword">for</span> debugging. Does not work on OSX due to https://github.com/BVLC/caffe/issues/171</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> DEBUG := 1</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> The ID of the GPU that <span class="string">'make runtest'</span> will use to run unit tests.</span></span><br><span class="line">TEST_GPUID := 0</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">enable</span> pretty build (comment to see full commands)</span></span><br><span class="line">Q ?= @</span><br></pre></td></tr></table></figure>

<h4 id="修改caffe-目录下的Makefile文件"><a href="#修改caffe-目录下的Makefile文件" class="headerlink" title="修改caffe 目录下的Makefile文件"></a>修改<code>caffe 目录</code>下的<code>Makefile</code>文件</h4><p><em>修改的地方找起来比较困难的话可以复制到word里查找</em><br>将：   </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">NVCCFLAGS +=-ccbin=$(CXX) -Xcompiler-fPIC $(COMMON_FLAGS)</span><br></pre></td></tr></table></figure>

<p>替换为：   </p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">NVCCFLAGS += -D_FORCE_INLINES -ccbin=$(CXX) -Xcompiler -fPIC $(COMMON_FLAGS)</span><br></pre></td></tr></table></figure>


<p>将：</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">LIBRARIES += glog gflags protobuf boost_system boost_filesystem <span class="keyword">m</span> hdf5_hl hdf5</span><br></pre></td></tr></table></figure>

<p>改为：    </p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">LIBRARIES += glog gflags protobuf boost_system boost_filesystem <span class="keyword">m</span> hdf5_serial_hl hdf5_serial</span><br></pre></td></tr></table></figure>

<p>至此caffe配置文件修改完毕，可以开始编译了。假如显卡不是feimi架构的可以输入如下命令防止出现<code>Unsupported gpu architecture &#39;compute_20&#39;</code>的问题：    </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cmake -D CMAKE_BUILD_TYPE=RELEASE  -D CUDA_GENERATION=Kepler ..</span><br></pre></td></tr></table></figure>

<h3 id="编译安装Caffe"><a href="#编译安装Caffe" class="headerlink" title="编译安装Caffe"></a>编译安装<code>Caffe</code></h3><p>在 <code>caffe</code> 目录下执行：    </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd caffe</span><br><span class="line">make all -j $(($(nproc) + 1))</span><br><span class="line">make test -j $(($(nproc) + 1))</span><br><span class="line">make runtest -j $(($(nproc) + 1))</span><br><span class="line">make pycaffe -j $(($(nproc) + 1))</span><br></pre></td></tr></table></figure>

<p><code>runtest</code>之后成功成功的界面如下:<br><img src="/2019/03/17/搭建深度学习服务器环境/caffe_install.png" alt="png"></p>
<p><strong>添加<code>Caffe</code>环境变量</strong>    </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim ~/.bashrc</span><br><span class="line">export PYTHONPATH=~/caffe/python:$PYTHONPATH</span><br></pre></td></tr></table></figure>

<h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><p><strong>常见问题 1</strong><br>在caffe源码目录中修改<code>Makefile</code>文件中这一行如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">LIBRARIES += glog gflags protobuf boost_system boost_filesystem m hdf5_serial_hl hdf5_serial</span><br></pre></td></tr></table></figure>

<p>上述中<code>Makefile.config</code>和<code>Makefile</code>文件都要添加<code>hdf5</code>相关选项，否则会提示以下错误：<br><img src="/2019/03/17/搭建深度学习服务器环境/caffe-error1.png" alt="hdf5报错">    </p>
<p><strong>常见问题 2</strong><br>在<code>python</code>中导入<code>caffe</code>库的时候会提示以下信息：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">/usr/local/lib/python2.7/dist-packages/scipy/sparse/lil.py:19: RuntimeWarning: numpy.dtype </span><br><span class="line">size changed, may indicate binary incompatibility. Expected 96, got 88</span><br></pre></td></tr></table></figure>

<p><strong>解决方法</strong><br>将<code>numpy</code>降版本：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip uninstall numpy</span><br><span class="line">pip install numpy==1.14.5</span><br></pre></td></tr></table></figure>


<p><strong>常见问题 3</strong><br>导入<code>caffe</code>的时候还有一个<strong>错误</strong>:<br><img src="/2019/03/17/搭建深度学习服务器环境/caffe-error2.png" alt="导入caffe报错"><br>原因是我在<code>ubutnu</code>下用的<code>linuxbrew</code>安装的<code>Python2</code>设为默认<code>Python</code>了，然后<code>caffe</code>编译配置文件里用的是系统的<code>Python2</code>路径，导致系统自带的<code>Python</code>与<code>linuxbrew</code>安装的<code>Python</code>环境混乱。<br>解决方法是屏蔽掉<code>linuxbrew</code>环境。只用系统自带的<code>Python</code>，将<code>~/.profile</code>文件中的<code>eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)</code>这一行屏蔽:    </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> linuxbrew</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="built_in">eval</span> $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)</span></span><br></pre></td></tr></table></figure>

<p>然后重启电脑.     </p>
<p><strong>常见问题 4</strong><br><img src="/2019/03/17/搭建深度学习服务器环境/caffe-error3.png" alt="导入caffe报错"><br>导致上述原因是<code>pip2</code>同时存在于<code>/usr/bin/pip2</code>和<code>/usr/local/bin/pip2</code>两个地方:   </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看pip2位于哪里</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">where</span> pip2</span></span><br><span class="line">/usr/local/bin/pip2</span><br><span class="line">/usr/bin/pip2</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看当前用到的pip2是哪一个</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">which</span> pip</span></span><br><span class="line">/usr/local/bin/pip</span><br></pre></td></tr></table></figure>

<p>解决方法是用<code>/usr/local/bin/pip2</code>安装<code>protobuf</code>:   </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">/usr/local/bin/pip2 install protobuf</span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="https://stackoverflow.com/questions/37666241/importing-caffe-results-in-importerror-no-module-named-google-protobuf-interna" target="_blank" rel="noopener">Importing caffe results in ImportError: “No module named google.protobuf.internal”
</a><br>This is probably because you have two python environments in your machine, the one provided by your linux distribution(pip) and the other by the anaconda environment (/home/username/anaconda2/bin/pip).<br>Try installing protobuf for both environments to be sure<br><code>pip install protobuf</code><br><code>/home/username/anaconda2/bin/pip</code> install protobuf</p>
</blockquote>
<h2 id="Python3下安装Cafe"><a href="#Python3下安装Cafe" class="headerlink" title="Python3下安装Cafe"></a>Python3下安装Cafe</h2><h3 id="切换系统Python版本到Python3"><a href="#切换系统Python版本到Python3" class="headerlink" title="切换系统Python版本到Python3"></a>切换系统<code>Python</code>版本到<code>Python3</code></h3><p>将系统Python切换到Python3版本:    </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">which python3</span><br><span class="line">which python</span><br><span class="line">sudo rm /usr/bin/python # 删掉Python软连接</span><br><span class="line">sudo ln -s /usr/bin/python3 /usr/bin/python # 将Python3软连接到Python</span><br></pre></td></tr></table></figure>

<h3 id="装依赖库"><a href="#装依赖库" class="headerlink" title="装依赖库"></a>装依赖库</h3><blockquote>
<p><a href="#python2下安装cafe">同Python2.7安装依赖库</a>    </p>
</blockquote>
<h3 id="配置CUDA-及-CUDNN-1"><a href="#配置CUDA-及-CUDNN-1" class="headerlink" title="配置CUDA 及 CUDNN"></a>配置<code>CUDA</code> 及 <code>CUDNN</code></h3><blockquote>
<p><a href="#python2下安装cafe">同Python2.7配置CUDA以及CUDNN</a>    </p>
</blockquote>
<h3 id="pip-安装依赖模块"><a href="#pip-安装依赖模块" class="headerlink" title="pip 安装依赖模块"></a>pip 安装依赖模块</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install opencv-python==3.4.0.12 # OpenCV的Python版本要跟opencv源码安装的版本对应起来</span><br><span class="line">pip install protobuf</span><br></pre></td></tr></table></figure>

<h3 id="安装OpenCV，方法同-安装OpenCV-1"><a href="#安装OpenCV，方法同-安装OpenCV-1" class="headerlink" title="安装OpenCV，方法同: 安装OpenCV"></a>安装<code>OpenCV</code>，方法同: <a href="#安装opencv">安装OpenCV</a></h3><h3 id="然后按照前面的方法屏蔽Anaconda-1"><a href="#然后按照前面的方法屏蔽Anaconda-1" class="headerlink" title="然后按照前面的方法屏蔽Anaconda"></a>然后按照前面的方法<a href="#若需要将anaconda屏蔽">屏蔽Anaconda</a></h3><h3 id="配置Caffe-1"><a href="#配置Caffe-1" class="headerlink" title="配置Caffe"></a>配置<code>Caffe</code></h3><p><strong>首先cd 到你要安装的路径下运行</strong>：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/BVLC/caffe.git</span><br></pre></td></tr></table></figure>

<p>这时候会出现一个 <code>caffe</code> 文件夹。命令行进入此文件夹，运行：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cp Makefile.config.example Makefile.config</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 若无法拷贝则运行以下命令</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> chmod 777 Makefile.config.example</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> cp Makefile.config.example Makefile.config</span></span><br><span class="line">```    </span><br><span class="line">此命令是将 `Makefile.config.example` 文件复制一份并更名为 `Makefile.config` ，复制一份的原因是编译 `caffe` 时需要的是 `Makefile.config` 文件，而Makefile.config.example 只是 `caffe` 给出的配置文件例子，不能用来编译 `caffe`。   </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#### 然后修改 Makefile.config 文件**，在 `caffe` 目录下打开该文件</span></span></span><br><span class="line"></span><br><span class="line">```shell</span><br><span class="line">vim Makefile.config</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 或者用右键选择gedit/vscode打开该文件</span></span><br></pre></td></tr></table></figure>

<p>在<code>caffe</code>源码目录中修改<code>Makefile.config</code>内容如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Refer to http://caffe.berkeleyvision.org/installation.html</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Contributions simplifying and improving our build system are welcome!</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> cuDNN acceleration switch (uncomment to build with cuDNN).</span></span><br><span class="line">USE_CUDNN := 1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> CPU-only switch (uncomment to build without GPU support).</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> CPU_ONLY := 1</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> uncomment to <span class="built_in">disable</span> IO dependencies and corresponding data layers</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> USE_OPENCV := 0</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> USE_LEVELDB := 0</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> USE_LMDB := 0</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> uncomment to allow MDB_NOLOCK when reading LMDB files (only <span class="keyword">if</span> necessary)</span></span><br><span class="line"><span class="meta">#</span><span class="bash">	You should not <span class="built_in">set</span> this flag <span class="keyword">if</span> you will be reading LMDBs with any</span></span><br><span class="line"><span class="meta">#</span><span class="bash">	possibility of simultaneous <span class="built_in">read</span> and write</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ALLOW_LMDB_NOLOCK := 1</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Uncomment <span class="keyword">if</span> you<span class="string">'re using OpenCV 3</span></span></span><br><span class="line">OPENCV_VERSION := 3</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> To customize your choice of compiler, uncomment and <span class="built_in">set</span> the following.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> N.B. the default <span class="keyword">for</span> Linux is g++ and the default <span class="keyword">for</span> OSX is clang++</span></span><br><span class="line">CUSTOM_CXX := g++</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> CUDA directory contains bin/ and lib/ directories that we need.</span></span><br><span class="line">CUDA_DIR := /usr/local/cuda</span><br><span class="line"><span class="meta">#</span><span class="bash"> On Ubuntu 14.04, <span class="keyword">if</span> cuda tools are installed via</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="string">"sudo apt-get install nvidia-cuda-toolkit"</span> <span class="keyword">then</span> use this instead:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> CUDA_DIR := /usr</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> CUDA architecture setting: going with all of them.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> For CUDA &lt; 6.0, comment the *_50 through *_61 lines <span class="keyword">for</span> compatibility.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> For CUDA &lt; 8.0, comment the *_60 and *_61 lines <span class="keyword">for</span> compatibility.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> For CUDA &gt;= 9.0, comment the *_20 and *_21 lines <span class="keyword">for</span> compatibility.</span></span><br><span class="line">CUDA_ARCH := -gencode arch=compute_30,code=sm_30 \</span><br><span class="line">             -gencode arch=compute_35,code=sm_35 \</span><br><span class="line">             -gencode arch=compute_50,code=sm_50 \</span><br><span class="line">             -gencode arch=compute_52,code=sm_52 \</span><br><span class="line">             -gencode arch=compute_60,code=sm_60 \</span><br><span class="line">             -gencode arch=compute_61,code=sm_61 \</span><br><span class="line">             -gencode arch=compute_61,code=compute_61</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> BLAS choice:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> atlas <span class="keyword">for</span> ATLAS (default)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> mkl <span class="keyword">for</span> MKL</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> open <span class="keyword">for</span> OpenBlas</span></span><br><span class="line">BLAS := atlas</span><br><span class="line"><span class="meta">#</span><span class="bash"> Custom (MKL/ATLAS/OpenBLAS) include and lib directories.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Leave commented to accept the defaults <span class="keyword">for</span> your choice of BLAS</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> (<span class="built_in">which</span> should work)!</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> BLAS_INCLUDE := /path/to/your/blas</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> BLAS_LIB := /path/to/your/blas</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Homebrew puts openblas <span class="keyword">in</span> a directory that is not on the standard search path</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> BLAS_INCLUDE := $(shell brew --prefix openblas)/include</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> BLAS_LIB := $(shell brew --prefix openblas)/lib</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> This is required only <span class="keyword">if</span> you will compile the matlab interface.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> MATLAB directory should contain the mex binary <span class="keyword">in</span> /bin.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> MATLAB_DIR := /usr/<span class="built_in">local</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> MATLAB_DIR := /Applications/MATLAB_R2012b.app</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> NOTE: this is required only <span class="keyword">if</span> you will compile the python interface.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> We need to be able to find Python.h and numpy/arrayobject.h.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> PYTHON_INCLUDE := /usr/include/python2.7 \</span></span><br><span class="line"><span class="meta">#</span><span class="bash">                  /usr/lib/python2.7/dist-packages/numpy/core/include</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Anaconda Python distribution is quite popular. Include path:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Verify anaconda location, sometimes it<span class="string">'s in root.</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ANACONDA_HOME := $(HOME)/anaconda</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> PYTHON_INCLUDE := $(ANACONDA_HOME)/include \</span></span><br><span class="line"><span class="meta">		#</span><span class="bash"> $(ANACONDA_HOME)/include/python2.7 \</span></span><br><span class="line"><span class="meta">		#</span><span class="bash"> $(ANACONDA_HOME)/lib/python2.7/site-packages/numpy/core/include</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Uncomment to use Python 3 (default is Python 2)</span></span><br><span class="line">PYTHON_LIBRARIES := boost_python3 python3.5m</span><br><span class="line">PYTHON_INCLUDE := /usr/include/python3.5m \</span><br><span class="line">                 /usr/lib/python3.5/dist-packages/numpy/core/include</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> We need to be able to find libpythonX.X.so or .dylib.</span></span><br><span class="line">PYTHON_LIB := /usr/lib</span><br><span class="line"><span class="meta">#</span><span class="bash"> PYTHON_LIB := $(ANACONDA_HOME)/lib</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Homebrew installs numpy <span class="keyword">in</span> a non standard path (keg only)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> PYTHON_INCLUDE += $(dir $(shell python -c <span class="string">'import numpy.core; print(numpy.core.__file__)'</span>))/include</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> PYTHON_LIB += $(shell brew --prefix numpy)/lib</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Uncomment to support layers written <span class="keyword">in</span> Python (will link against Python libs)</span></span><br><span class="line">WITH_PYTHON_LAYER := 1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Whatever <span class="keyword">else</span> you find you need goes here.</span></span><br><span class="line">INCLUDE_DIRS := $(PYTHON_INCLUDE) /usr/local/include /usr/include/hdf5/serial/</span><br><span class="line">LIBRARY_DIRS := $(PYTHON_LIB) /usr/local/lib /usr/lib /usr/lib/x86_64-linux-gnu /usr/lib/x86_64-linux-gnu/hdf5/serial</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> If Homebrew is installed at a non standard location (<span class="keyword">for</span> example your home directory) and you use it <span class="keyword">for</span> general dependencies</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> INCLUDE_DIRS += $(shell brew --prefix)/include</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> LIBRARY_DIRS += $(shell brew --prefix)/lib</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> NCCL acceleration switch (uncomment to build with NCCL)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> https://github.com/NVIDIA/nccl (last tested version: v1.2.3-1+cuda8.0)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> USE_NCCL := 1</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Uncomment to use `pkg-config` to specify OpenCV library paths.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> (Usually not necessary -- OpenCV libraries are normally installed <span class="keyword">in</span> one of the above <span class="variable">$LIBRARY_DIRS</span>.)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> USE_PKG_CONFIG := 1</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> N.B. both build and distribute <span class="built_in">dirs</span> are cleared on `make clean`</span></span><br><span class="line">BUILD_DIR := build</span><br><span class="line">DISTRIBUTE_DIR := distribute</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Uncomment <span class="keyword">for</span> debugging. Does not work on OSX due to https://github.com/BVLC/caffe/issues/171</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> DEBUG := 1</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> The ID of the GPU that <span class="string">'make runtest'</span> will use to run unit tests.</span></span><br><span class="line">TEST_GPUID := 0</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">enable</span> pretty build (comment to see full commands)</span></span><br><span class="line">Q ?= @</span><br><span class="line">```    </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#### 修改` caffe 目录`下的` Makefile `文件</span></span></span><br><span class="line"></span><br><span class="line">*修改的地方找起来比较困难的话可以复制到word里查找*    </span><br><span class="line">将：   </span><br><span class="line">```shell</span><br><span class="line">NVCCFLAGS +=-ccbin=$(CXX) -Xcompiler-fPIC $(COMMON_FLAGS)</span><br></pre></td></tr></table></figure>

<p>替换为：   </p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">NVCCFLAGS += -D_FORCE_INLINES -ccbin=$(CXX) -Xcompiler -fPIC $(COMMON_FLAGS)</span><br></pre></td></tr></table></figure>


<p>将：</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">LIBRARIES += glog gflags protobuf boost_system boost_filesystem <span class="keyword">m</span> hdf5_hl hdf5</span><br></pre></td></tr></table></figure>

<p>改为：    </p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">LIBRARIES += glog gflags protobuf boost_system boost_filesystem <span class="keyword">m</span> hdf5_serial_hl hdf5_serial</span><br></pre></td></tr></table></figure>

<p>至此caffe配置文件修改完毕，可以开始编译了。假如显卡不是feimi架构的可以输入如下命令防止出现<code>Unsupported gpu architecture &#39;compute_20&#39;</code>的问题：    </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cmake -D CMAKE_BUILD_TYPE=RELEASE  -D CUDA_GENERATION=Kepler ..</span><br></pre></td></tr></table></figure>

<h3 id="编译安装Caffe-1"><a href="#编译安装Caffe-1" class="headerlink" title="编译安装Caffe"></a>编译安装<code>Caffe</code></h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd caffe</span><br><span class="line">make all -j $(($(nproc) + 1))</span><br><span class="line">make test -j $(($(nproc) + 1))</span><br><span class="line">make runtest -j $(($(nproc) + 1))</span><br><span class="line">make pycaffe -j $(($(nproc) + 1))</span><br></pre></td></tr></table></figure>

<p><strong>添加<code>Caffe</code>环境变量</strong>    </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim ~/.bashrc</span><br><span class="line">export PYTHONPATH=~/caffe/python:$PYTHONPATH</span><br></pre></td></tr></table></figure>

<h3 id="常见问题-1"><a href="#常见问题-1" class="headerlink" title="常见问题"></a>常见问题</h3><p><strong>常见问题 1</strong><br><img src="/2019/03/17/搭建深度学习服务器环境/caffe-error4.png" alt="编译caffe报错"><br><strong>解决方法</strong>    </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/madler/zlib</span><br><span class="line">cd path/to/zlib</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install  # you may add 'sudo'</span><br><span class="line">```    </span><br><span class="line"></span><br><span class="line">**常见问题 2**    </span><br><span class="line">&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=Violet&gt;protoc: error while loading shared libraries: libprotoc.so.10: cannot open shared object file: No such file or directory&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</span><br><span class="line"></span><br><span class="line">**解决：**</span><br><span class="line"></span><br><span class="line">```shell</span><br><span class="line">export LD_LIBRARY_PATH=/usr/local/lib</span><br></pre></td></tr></table></figure>

<p><strong>常见问题 3</strong>    </p>
<table><tr><td bgcolor="Violet">/sbin/ldconfig.real: /usr/local/cuda-9.0/lib64/libcudnn.so.5 不是符号连接</td></tr></table>

<p><strong>解决：</strong><br>在sudo ldconfig时遇到<code>usr/local/cuda-9.0/lib64/libcudnn.so.5</code>不是符号连接的问题，解决办法也很简单，重新建立链接并删除原链接</p>
<p>首先找到<code>usr/local/cuda-8.0/lib64/</code>目录，搜索<code>libcudnn</code>然后发现两个文件<code>libcudnn.so.5</code>和<code>libcudnn.so.5.0.5</code>理论上只有一个<code>libcudnn.so.5.0.5</code></p>
<p>终端执行:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ln -sf /usr/local/cuda-9.0/lib64/libcudnn.so.5.0.5 /usr/local/cuda-9.0/lib64/libcudnn.so.5</span><br></pre></td></tr></table></figure>

<p>再<code>sudo ldconfig</code>时就可以了，这时候会发现usr/local/cuda-9.0/lib64/目录下只有<code>libcudnn.so.5.0.5</code>文件了，<code>libcudnn.so.5</code>消失了。</p>
<p><strong>常见问题 4</strong>    </p>
<table><tr><td bgcolor="Violet">.build_release/tools/caffe: error while loading shared libraries: libhdf5.so.10: cannot open shared object file: No such file    or directory</td></tr></table>

<p><strong>解决：</strong>    </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">echo "export LD_LIBRARY_PATH=/home/abc/anaconda2/lib:$LD_LIBRARY_PATH" &gt;&gt;~/.bashrc</span><br></pre></td></tr></table></figure>

<p><strong>常见问题 5</strong>    </p>
<table><tr><td bgcolor="Violet">错误：python/caffe/_caffe.cpp:1:52:致命错误：Python.h：没有那个文件或目录
编译中断。
make:***    
[python/caffe/_caffe.so]错误1</td></tr></table>

<p><strong>解决：</strong><br>执行：<code>sudo find / -name &#39;Python.h&#39;</code>找到他的路径，<br>在<code>Makefile.config</code>的PYTHON_INCLUDE加上<code>/home/abc/anaconda2/include/python2.7</code>（路径是自己的）    </p>
<p><strong>常见问题 6</strong>    </p>
<table><tr><td bgcolor="Violet">错误：import caffe时：ImportError:No module named skimage.io</td></tr></table>

<p><strong>解决：</strong><br>可能是我们没有安装所谓的skimage.io模块，所以可以用以下的命令来安装：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install scikit-image  # you may need use sudo</span><br></pre></td></tr></table></figure>

<p><strong>常见问题 7</strong>    </p>
<table><tr><td bgcolor="Violet">
import caffe 
Traceback(most recent call last):   
File"<stdin>", line 1, in <module>     
ImportError:No module named caffe</module></stdin></td></tr></table>

<p><strong>解决：</strong>    </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">echo'export PATH="/home/andy/caffe/python:$PATH"' &gt;&gt;~/.bashrc</span><br><span class="line">source~/.bashrc</span><br></pre></td></tr></table></figure>

<p>关掉终端，重新进入。   </p>
<hr>
<h1 id="安装protobuf"><a href="#安装protobuf" class="headerlink" title="安装protobuf"></a>安装protobuf</h1><h2 id="protobuf是什么"><a href="#protobuf是什么" class="headerlink" title="protobuf是什么"></a>protobuf是什么</h2><p>protobuf（Protocol Buffer）它是google提供的一个开源库，是一种语言无关、平台无关、扩展性好的用于通信协议、数据存储的结构化数据串行化方法。有如XML，不过它更小、更快、也更简单。你可以定义自己的数据结构，然后使用代码生成器生成的代码来读写这个数据结构。</p>
<h2 id="protobuf-c-是什么"><a href="#protobuf-c-是什么" class="headerlink" title="protobuf-c 是什么"></a>protobuf-c 是什么</h2><p>由于Protocol Buffer原生没有对C的支持，只能使用protobuf-c这个第三方库，它提供了支持C语言的API接口。</p>
<p>下面先安装protobuf，然后安装protobuf-c 。   </p>
<h2 id="安装protocbuf"><a href="#安装protocbuf" class="headerlink" title="安装protocbuf"></a>安装protocbuf</h2><h3 id="下载源码安装包"><a href="#下载源码安装包" class="headerlink" title="下载源码安装包"></a>下载源码安装包</h3><p><a href="https://developers.google.com/protocol-buffers/" target="_blank" rel="noopener">https://developers.google.com/protocol-buffers/</a><br><img src="/2019/03/17/搭建深度学习服务器环境/img3.png" alt="下载界面"></p>
<p><img src="/2019/03/17/搭建深度学习服务器环境/img4.png" alt="GitHub界面"><br>在release下可以找到所有的版本，我这里用的是2.4.1版本，复制protobuf-2.4.1.tar.gz的链接然后用wget命令下载。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://github.com/google/protobuf/releases/download/v2.4.1/protobuf-2.4.1.tar.gz</span><br></pre></td></tr></table></figure>

<h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar -zxvf protobuf-2.4.1.tar.gz</span><br></pre></td></tr></table></figure>

<h3 id="编译-安装"><a href="#编译-安装" class="headerlink" title="编译/安装"></a>编译/安装</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd protobuf-2.4.1</span><br></pre></td></tr></table></figure>

<p>（可以参考README思路来做。）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make check  #(check结果可能会有错误，但不用管她，因为暂时那些功能用不到)</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>

<p>（完了之后会在 /usr/local/bin 目录下生成一个可执行文件 protoc）</p>
<h3 id="检查安装是否成功"><a href="#检查安装是否成功" class="headerlink" title="检查安装是否成功"></a>检查安装是否成功</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">protoc --version</span><br></pre></td></tr></table></figure>

<p>如果成功，则会输出版本号信息。如果有问题，则会输出错误内容。</p>
<h3 id="错误及解决方法"><a href="#错误及解决方法" class="headerlink" title="错误及解决方法"></a>错误及解决方法</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">protoc: error while loading shared libraries: libprotoc.so.8: cannot open shared</span><br></pre></td></tr></table></figure>

<p><strong>错误原因</strong>：<br>protobuf的默认安装路径是/usr/local/lib，而/usr/local/lib 不在Ubuntu体系默认的 LD_LIBRARY_PATH 里，所以就找不到该lib<br>解决方法：<br>1). 创建文件<code>sudo gedit /etc/ld.so.conf.d/libprotobuf.conf</code>，在该文件中输入如下内容：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">/usr/local/lib</span><br></pre></td></tr></table></figure>

<p>2). 执行命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo ldconfig</span><br></pre></td></tr></table></figure>

<p>这时，再运行protoc –version 就可以正常看到版本号了</p>
<h2 id="安装protobuf-c"><a href="#安装protobuf-c" class="headerlink" title="安装protobuf-c"></a>安装protobuf-c</h2><p>（这里使用的是protobuf-c-0.15版本，较高版本的安装类似）</p>
<p>进入下面的链接<br><a href="https://code.google.com/p/protobuf-c/" target="_blank" rel="noopener">https://code.google.com/p/protobuf-c/</a><br>进入Downloads界面<br><img src="/2019/03/17/搭建深度学习服务器环境/img5.png" alt="下载界面"></p>
<p><img src="/2019/03/17/搭建深度学习服务器环境/img6.png" alt="下载界面"></p>
<p><img src="/2019/03/17/搭建深度学习服务器环境/img7.png" alt="下载界面"></p>
<p>不知怎地，wget无法下载途中的<code>protobuf-c-0.15.tar.gz</code>文件。</p>
<p>怎么办呢，我们可以点击上图中的Export to GitHub，将代码导入到GitHub（当然你得有并登录自己的github账号），不过只有源码，没有release版。我们先wget下载源码，解包。由于是源码，所以没有configure文件，但是可以通过执行<code>autogen.sh</code>来生成configure文件，之后的操作就和安装protobuf类似了，这里就不细说了。<br>安装完成后会在<code>/usr/local/bin</code>目录下便会生成一个可执行文件 protoc-c</p>
<p>在安装完protobuf-c后，我们来检验一下protobuf-c是否安装成功。到 protobuf-c-0.15/src/test 目录下，执行如下命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">protoc-c --c_out=. test.proto</span><br></pre></td></tr></table></figure>

<p>（c_out 标志是用来指定编译后所生成文件的输出路径，这里c_out指定的是当前目录。）<br>如果在c_out指定目录下能够生成 test.pb-c.c 和 test.pb-c.h 这两个文件则说明安装成功了。</p>
<h2 id="Protobuf的使用示例"><a href="#Protobuf的使用示例" class="headerlink" title="Protobuf的使用示例"></a>Protobuf的使用示例</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">touch person.proto</span><br></pre></td></tr></table></figure>

<p>输入如下内容：</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">message Person &#123;</span><br><span class="line">  required string name = 1;</span><br><span class="line">  required int32 id = 2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>编译.proto文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">protoc-c --c_out=. person.proto</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">touch main.c</span><br></pre></td></tr></table></figure>

<p>输入如下代码：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"person.pb-c.h"</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 定义一个Person元素，并往其中存入数据</span></span><br><span class="line">    Person person = PERSON__INIT;</span><br><span class="line">    person.id = <span class="number">1314</span>;</span><br><span class="line">    person.name = <span class="string">"lily"</span>;  <span class="comment">// 字符串 lily 位于常量区</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"id = %d\n"</span>, person.id);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"name = %s\n"</span>, person.name);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 打包</span></span><br><span class="line">    <span class="keyword">int</span> len = person__get_packed_size(&amp;person);</span><br><span class="line">    <span class="comment">//printf("len = %d\n", len);</span></span><br><span class="line">    <span class="keyword">void</span> *sendpack = <span class="built_in">malloc</span>(len);</span><br><span class="line">    person__pack(&amp;person, sendpack);</span><br><span class="line">        <span class="comment">// sendpack是打好的包，可以通过socket通讯将其发送出去。</span></span><br><span class="line">    <span class="comment">//（这里主要讲protobuf，就不发送了）</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 接收端解包</span></span><br><span class="line">    Person *recvbuf = person__unpack(<span class="literal">NULL</span>, len, sendpack);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"id = %d\n"</span>, recvbuf-&gt;id);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"name = %s\n"</span>, recvbuf-&gt;name);</span><br><span class="line">    <span class="comment">// 包用完了要释放</span></span><br><span class="line">    person__free_unpacked(recvbuf, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="built_in">free</span>(sendpack);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>编译</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">gcc person.pb-c.c main.c -lprotobuf-c</span><br></pre></td></tr></table></figure>

<p>执行<code>./a.out</code>，输出结果如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">id = 1314</span><br><span class="line">name = lily</span><br><span class="line">id = 1314</span><br><span class="line">name = lily</span><br></pre></td></tr></table></figure>

<hr>
<h1 id="Linux-MATLAB安装"><a href="#Linux-MATLAB安装" class="headerlink" title="Linux MATLAB安装"></a>Linux MATLAB安装</h1><h2 id="安装前准备工作"><a href="#安装前准备工作" class="headerlink" title="安装前准备工作"></a>安装前准备工作</h2><p>下载<code>MATLAB for Linux</code>文件, 这里用到的是<a href="https://blog.csdn.net/m0_37775034/article/details/80876362" target="_blank" rel="noopener">@晨曦月下</a>提供的百度网盘链接下载:    </p>
<blockquote>
<p>链接: <a href="https://pan.baidu.com/s/1W6jWkaXEMpMUEmIl8qmRwg" target="_blank" rel="noopener">https://pan.baidu.com/s/1W6jWkaXEMpMUEmIl8qmRwg</a><br>密码: igx6    </p>
</blockquote>
<p>进入下载后的文件夹(假如下载后的文件放在了<code>/home/Download/</code>, 解压破解文件<code>Matlab2018aLinux64Crack.tar.gz</code>文件, 创建一个文件夹<code>Crack</code>来放置解压后的文件:    </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd ~/Download</span><br><span class="line">sudo mkdir Crack</span><br></pre></td></tr></table></figure>

<p>解压文件:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd ~/Download</span><br><span class="line">tar -xvf Matlab2018aLinux64Crack.tar.gz -C Crack</span><br></pre></td></tr></table></figure>

<p>在<code>/mnt</code>中创建一个文件夹用来挂载<code>R2018a_glnxa64_dvd1.iso</code>和<code>R2018a_glnxa64_dvd2.iso</code>:    </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /mnt</span><br><span class="line">sudo mkdir iso</span><br></pre></td></tr></table></figure>

<p>先挂载<code>R2018a_glnxa64_dvd1.iso</code>:    </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd ~</span><br><span class="line">sudo mount -t auto -o loop R2018a_glnxa64_dvd1.iso /mnt/iso</span><br></pre></td></tr></table></figure>

<p>如果这个时候提示<code>/mnt/iso: WARNING:device write-protected, mounted read-only</code>,那就修改下<code>/mnt</code>的权限:    </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /</span><br><span class="line">sudo chmod 755 mnt</span><br></pre></td></tr></table></figure>

<h2 id="Matlab安装过程"><a href="#Matlab安装过程" class="headerlink" title="Matlab安装过程"></a>Matlab安装过程</h2><p>安装开始，从挂载的文件夹<code>iso</code>中:    </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd ~</span><br><span class="line">sudo ./mnt/iso/install</span><br></pre></td></tr></table></figure>

<ol>
<li><p>选择 <code>Use a File Installation Key</code>:<br><img src="/2019/03/17/搭建深度学习服务器环境/matlab1.png" alt="matlab1">     </p>
</li>
<li><p>选择<code>Yes</code>,同意条约:<br><img src="/2019/03/17/搭建深度学习服务器环境/matlab2.png" alt="matlab2">     </p>
</li>
<li><p>选择默认安装目录,默认放在<code>/usr/local</code>中</p>
</li>
<li><p>选择<code>I have the File Installation Key for my license</code>,输入:<br> <code>09806-07443-53955-64350-21751-41297</code></p>
</li>
<li><p>安装到某个进度会提示插入<code>iso2</code>,这个时候挂载<code>R2018a_glnxa64_dvd2.iso</code></p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd ~</span><br><span class="line">sudo mount -t auto -o loop R2018a_glnxa64_dvd2.iso /mnt/iso</span><br></pre></td></tr></table></figure>
</li>
<li><p>最后安装完成选择<code>finsh</code></p>
</li>
</ol>
<h2 id="激活"><a href="#激活" class="headerlink" title="激活"></a>激活</h2><ol>
<li><p>复制破解文件<code>Crack</code>中<code>license_standalone.lic</code>到安装目录中</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd ~/Crack</span><br><span class="line">sudo cp license_standalone.lic /usr/loca/MATLAB/R2018a/licenses</span><br></pre></td></tr></table></figure>
</li>
<li><p>复制<code>Crack</code>中的<code>R2018a</code>到<code>安装目录</code></p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd ~/Crack</span><br><span class="line">sudo cp -r R2018a /usr/local/MATLAB</span><br></pre></td></tr></table></figure>

</li>
</ol>
<p>至此激活完成!    </p>
<p><strong>收拾残局</strong>, 取消挂载,删除文件:   </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo umunt /mnt/iso</span><br><span class="line">cd /mnt</span><br><span class="line">sudo rmdir iso</span><br></pre></td></tr></table></figure>

<h2 id="Matlab设置"><a href="#Matlab设置" class="headerlink" title="Matlab设置"></a>Matlab设置</h2><p>创建命令方便在任何终端都可以打开<code>matlab</code>,采用软链接的方式在<code>/usr/local/bin</code>中创建启动命令<code>matlab</code>:    </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /usr/lcoal/bin</span><br><span class="line">sudo ln -s /usr/local/MATLAB/R2018a/bin/matlab matlab</span><br></pre></td></tr></table></figure>

<p><strong>参考资料</strong>    </p>
<blockquote>
<p><a href="https://blog.csdn.net/m0_37775034/article/details/80876362" target="_blank" rel="noopener">linux安装MATLAB R2018a步骤</a>    </p>
</blockquote>
]]></content>
      <categories>
        <category>AI</category>
      </categories>
      <tags>
        <tag>AI</tag>
        <tag>Ubuntu</tag>
        <tag>NVIDIA</tag>
      </tags>
  </entry>
</search>
