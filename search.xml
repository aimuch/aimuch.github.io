<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[ELF File]]></title>
    <url>%2F2019%2F07%2F28%2Felf-file%2F</url>
    <content type="text"><![CDATA[简介分类 可重定位文件(Relocatable File) .o)包含适合于与其他目标文件链接来创建可执行文件或者共享目标文件的代码和数据。 可执行文件(Executable File) .exe) 包含适合于执行的一个程序，此文件规定了 exec() 如何创建一个程序的进程映像。 共享目标文件(Shared Object File) .so) 包含可在两种上下文中链接的代码和数据。 首先链接编辑器可以将它和其它可重定位文件和共享目标文件一起处理， 生成另外一个目标文件。 其次动态链接器(Dynamic Linker)可能将它与某 个可执行文件以及其它共享目标一起组合，创建进程映像。 作用ELF文件参与程序的连接(建立一个程序)和程序的执行(运行一个程序)，所以可以从不同的角度来看待elf格式的文件： 如果用于编译和链接（可重定位文件），则编译器和链接器将把elf文件看作是节头表描述的节的集合,程序头表可选。 如果用于加载执行（可执行文件），则加载器则将把elf文件看作是程序头表描述的段的集合，一个段可能包含多个节，节头表可选。 如果是共享文件，则两者都含有。 ELF头文件ELF头文件在/usr/include/elf.h中，内容如下: * This file defines standard ELF types, structures, and macros. Copyright (C) 1995-2016 Free Software Foundation, Inc. This file is part of the GNU C Library. The GNU C Library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version. The GNU C Library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details. You should have received a copy of the GNU Lesser General Public License along with the GNU C Library; if not, see &lt;http://www.gnu.org/licenses/&gt;. */#ifndef _ELF_H#define _ELF_H 1#include &lt;features.h&gt;__BEGIN_DECLS/* Standard ELF types. */#include &lt;stdint.h&gt;/* Type for a 16-bit quantity. */typedef uint16_t Elf32_Half;typedef uint16_t Elf64_Half;/* Types for signed and unsigned 32-bit quantities. */typedef uint32_t Elf32_Word;typedef int32_t Elf32_Sword;typedef uint32_t Elf64_Word;typedef int32_t Elf64_Sword;/* Types for signed and unsigned 64-bit quantities. */typedef uint64_t Elf32_Xword;typedef int64_t Elf32_Sxword;typedef uint64_t Elf64_Xword;typedef int64_t Elf64_Sxword;/* Type of addresses. */typedef uint32_t Elf32_Addr;typedef uint64_t Elf64_Addr;/* Type of file offsets. */typedef uint32_t Elf32_Off;typedef uint64_t Elf64_Off;/* Type for section indices, which are 16-bit quantities. */typedef uint16_t Elf32_Section;typedef uint16_t Elf64_Section;/* Type for version symbol information. */typedef Elf32_Half Elf32_Versym;typedef Elf64_Half Elf64_Versym;/* The ELF file header. This appears at the start of every ELF file. */#define EI_NIDENT (16)typedef struct&#123; unsigned char e_ident[EI_NIDENT]; /* Magic number and other info */ Elf32_Half e_type; /* Object file type */ Elf32_Half e_machine; /* Architecture */ Elf32_Word e_version; /* Object file version */ Elf32_Addr e_entry; /* Entry point virtual address */ Elf32_Off e_phoff; /* Program header table file offset */ Elf32_Off e_shoff; /* Section header table file offset */ Elf32_Word e_flags; /* Processor-specific flags */ Elf32_Half e_ehsize; /* ELF header size in bytes */ Elf32_Half e_phentsize; /* Program header table entry size */ Elf32_Half e_phnum; /* Program header table entry count */ Elf32_Half e_shentsize; /* Section header table entry size */ Elf32_Half e_shnum; /* Section header table entry count */ Elf32_Half e_shstrndx; /* Section header string table index */&#125; Elf32_Ehdr;typedef struct&#123; unsigned char e_ident[EI_NIDENT]; /* Magic number and other info */ Elf64_Half e_type; /* Object file type */ Elf64_Half e_machine; /* Architecture */ Elf64_Word e_version; /* Object file version */ Elf64_Addr e_entry; /* Entry point virtual address */ Elf64_Off e_phoff; /* Program header table file offset */ Elf64_Off e_shoff; /* Section header table file offset */ Elf64_Word e_flags; /* Processor-specific flags */ Elf64_Half e_ehsize; /* ELF header size in bytes */ Elf64_Half e_phentsize; /* Program header table entry size */ Elf64_Half e_phnum; /* Program header table entry count */ Elf64_Half e_shentsize; /* Section header table entry size */ Elf64_Half e_shnum; /* Section header table entry count */ Elf64_Half e_shstrndx; /* Section header string table index */&#125; Elf64_Ehdr;/* Fields in the e_ident array. The EI_* macros are indices into the array. The macros under each EI_* macro are the values the byte may have. */#define EI_MAG0 0 /* File identification byte 0 index */#define ELFMAG0 0x7f /* Magic number byte 0 */#define EI_MAG1 1 /* File identification byte 1 index */#define ELFMAG1 'E' /* Magic number byte 1 */#define EI_MAG2 2 /* File identification byte 2 index */#define ELFMAG2 'L' /* Magic number byte 2 */#define EI_MAG3 3 /* File identification byte 3 index */#define ELFMAG3 'F' /* Magic number byte 3 *//* Conglomeration of the identification bytes, for easy testing as a word. */#define ELFMAG "\177ELF"#define SELFMAG 4#define EI_CLASS 4 /* File class byte index */#define ELFCLASSNONE 0 /* Invalid class */#define ELFCLASS32 1 /* 32-bit objects */#define ELFCLASS64 2 /* 64-bit objects */#define ELFCLASSNUM 3#define EI_DATA 5 /* Data encoding byte index */#define ELFDATANONE 0 /* Invalid data encoding */#define ELFDATA2LSB 1 /* 2's complement, little endian */#define ELFDATA2MSB 2 /* 2's complement, big endian */#define ELFDATANUM 3#define EI_VERSION 6 /* File version byte index */truetruetruetruetrue/* Value must be EV_CURRENT */#define EI_OSABI 7 /* OS ABI identification */#define ELFOSABI_NONE 0 /* UNIX System V ABI */#define ELFOSABI_SYSV 0 /* Alias. */#define ELFOSABI_HPUX 1 /* HP-UX */#define ELFOSABI_NETBSD 2 /* NetBSD. */#define ELFOSABI_GNU 3 /* Object uses GNU ELF extensions. */#define ELFOSABI_LINUX ELFOSABI_GNU /* Compatibility alias. */#define ELFOSABI_SOLARIS 6 /* Sun Solaris. */#define ELFOSABI_AIX 7 /* IBM AIX. */#define ELFOSABI_IRIX 8 /* SGI Irix. */#define ELFOSABI_FREEBSD 9 /* FreeBSD. */#define ELFOSABI_TRU64 10 /* Compaq TRU64 UNIX. */#define ELFOSABI_MODESTO 11 /* Novell Modesto. */#define ELFOSABI_OPENBSD 12 /* OpenBSD. */#define ELFOSABI_ARM_AEABI 64 /* ARM EABI */#define ELFOSABI_ARM 97 /* ARM */#define ELFOSABI_STANDALONE 255 /* Standalone (embedded) application */#define EI_ABIVERSION 8 /* ABI version */#define EI_PAD 9 /* Byte index of padding bytes *//* Legal values for e_type (object file type). */#define ET_NONE 0 /* No file type */#define ET_REL 1 /* Relocatable file */#define ET_EXEC 2 /* Executable file */#define ET_DYN 3 /* Shared object file */#define ET_CORE 4 /* Core file */#define ET_NUM 5 /* Number of defined types */#define ET_LOOS 0xfe00 /* OS-specific range start */#define ET_HIOS 0xfeff /* OS-specific range end */#define ET_LOPROC 0xff00 /* Processor-specific range start */#define ET_HIPROC 0xffff /* Processor-specific range end *//* Legal values for e_machine (architecture). */#define EM_NONE 0 /* No machine */#define EM_M32 1 /* AT&amp;T WE 32100 */#define EM_SPARC 2 /* SUN SPARC */#define EM_386 3 /* Intel 80386 */#define EM_68K 4 /* Motorola m68k family */#define EM_88K 5 /* Motorola m88k family */#define EM_860 7 /* Intel 80860 */#define EM_MIPS 8 /* MIPS R3000 big-endian */#define EM_S370 9 /* IBM System/370 */#define EM_MIPS_RS3_LE 10 /* MIPS R3000 little-endian */#define EM_PARISC 15 /* HPPA */#define EM_VPP500 17 /* Fujitsu VPP500 */#define EM_SPARC32PLUS 18 /* Sun's "v8plus" */#define EM_960 19 /* Intel 80960 */#define EM_PPC 20 /* PowerPC */#define EM_PPC64 21 /* PowerPC 64-bit */#define EM_S390 22 /* IBM S390 */#define EM_V800 36 /* NEC V800 series */#define EM_FR20 37 /* Fujitsu FR20 */#define EM_RH32 38 /* TRW RH-32 */#define EM_RCE 39 /* Motorola RCE */#define EM_ARM 40 /* ARM */#define EM_FAKE_ALPHA 41 /* Digital Alpha */#define EM_SH 42 /* Hitachi SH */#define EM_SPARCV9 43 /* SPARC v9 64-bit */#define EM_TRICORE 44 /* Siemens Tricore */#define EM_ARC 45 /* Argonaut RISC Core */#define EM_H8_300 46 /* Hitachi H8/300 */#define EM_H8_300H 47 /* Hitachi H8/300H */#define EM_H8S 48 /* Hitachi H8S */#define EM_H8_500 49 /* Hitachi H8/500 */#define EM_IA_64 50 /* Intel Merced */#define EM_MIPS_X 51 /* Stanford MIPS-X */#define EM_COLDFIRE 52 /* Motorola Coldfire */#define EM_68HC12 53 /* Motorola M68HC12 */#define EM_MMA 54 /* Fujitsu MMA Multimedia Accelerator*/#define EM_PCP 55 /* Siemens PCP */#define EM_NCPU 56 /* Sony nCPU embeeded RISC */#define EM_NDR1 57 /* Denso NDR1 microprocessor */#define EM_STARCORE 58 /* Motorola Start*Core processor */#define EM_ME16 59 /* Toyota ME16 processor */#define EM_ST100 60 /* STMicroelectronic ST100 processor */#define EM_TINYJ 61 /* Advanced Logic Corp. Tinyj emb.fam*/#define EM_X86_64 62 /* AMD x86-64 architecture */#define EM_PDSP 63 /* Sony DSP Processor */#define EM_FX66 66 /* Siemens FX66 microcontroller */#define EM_ST9PLUS 67 /* STMicroelectronics ST9+ 8/16 mc */#define EM_ST7 68 /* STmicroelectronics ST7 8 bit mc */#define EM_68HC16 69 /* Motorola MC68HC16 microcontroller */#define EM_68HC11 70 /* Motorola MC68HC11 microcontroller */#define EM_68HC08 71 /* Motorola MC68HC08 microcontroller */#define EM_68HC05 72 /* Motorola MC68HC05 microcontroller */#define EM_SVX 73 /* Silicon Graphics SVx */#define EM_ST19 74 /* STMicroelectronics ST19 8 bit mc */#define EM_VAX 75 /* Digital VAX */#define EM_CRIS 76 /* Axis Communications 32-bit embedded processor */#define EM_JAVELIN 77 /* Infineon Technologies 32-bit embedded processor */#define EM_FIREPATH 78 /* Element 14 64-bit DSP Processor */#define EM_ZSP 79 /* LSI Logic 16-bit DSP Processor */#define EM_MMIX 80 /* Donald Knuth's educational 64-bit processor */#define EM_HUANY 81 /* Harvard University machine-independent object files */#define EM_PRISM 82 /* SiTera Prism */#define EM_AVR 83 /* Atmel AVR 8-bit microcontroller */#define EM_FR30 84 /* Fujitsu FR30 */#define EM_D10V 85 /* Mitsubishi D10V */#define EM_D30V 86 /* Mitsubishi D30V */#define EM_V850 87 /* NEC v850 */#define EM_M32R 88 /* Mitsubishi M32R */#define EM_MN10300 89 /* Matsushita MN10300 */#define EM_MN10200 90 /* Matsushita MN10200 */#define EM_PJ 91 /* picoJava */#define EM_OPENRISC 92 /* OpenRISC 32-bit embedded processor */#define EM_ARC_A5 93 /* ARC Cores Tangent-A5 */#define EM_XTENSA 94 /* Tensilica Xtensa Architecture */#define EM_ALTERA_NIOS2 113 /* Altera Nios II */#define EM_AARCH64 183 /* ARM AARCH64 */#define EM_TILEPRO 188 /* Tilera TILEPro */#define EM_MICROBLAZE 189 /* Xilinx MicroBlaze */#define EM_TILEGX 191 /* Tilera TILE-Gx */#define EM_NUM 192/* If it is necessary to assign new unofficial EM_* values, please pick large random numbers (0x8523, 0xa7f2, etc.) to minimize the chances of collision with official or non-GNU unofficial values. */#define EM_ALPHA 0x9026/* Legal values for e_version (version). */#define EV_NONE 0 /* Invalid ELF version */#define EV_CURRENT 1 /* Current version */#define EV_NUM 2/* Section header. */typedef struct&#123; Elf32_Word sh_name; /* Section name (string tbl index) */ Elf32_Word sh_type; /* Section type */ Elf32_Word sh_flags; /* Section flags */ Elf32_Addr sh_addr; /* Section virtual addr at execution */ Elf32_Off sh_offset; /* Section file offset */ Elf32_Word sh_size; /* Section size in bytes */ Elf32_Word sh_link; /* Link to another section */ Elf32_Word sh_info; /* Additional section information */ Elf32_Word sh_addralign; /* Section alignment */ Elf32_Word sh_entsize; /* Entry size if section holds table */&#125; Elf32_Shdr;typedef struct&#123; Elf64_Word sh_name; /* Section name (string tbl index) */ Elf64_Word sh_type; /* Section type */ Elf64_Xword sh_flags; /* Section flags */ Elf64_Addr sh_addr; /* Section virtual addr at execution */ Elf64_Off sh_offset; /* Section file offset */ Elf64_Xword sh_size; /* Section size in bytes */ Elf64_Word sh_link; /* Link to another section */ Elf64_Word sh_info; /* Additional section information */ Elf64_Xword sh_addralign; /* Section alignment */ Elf64_Xword sh_entsize; /* Entry size if section holds table */&#125; Elf64_Shdr;/* Special section indices. */#define SHN_UNDEF 0 /* Undefined section */#define SHN_LORESERVE 0xff00 /* Start of reserved indices */#define SHN_LOPROC 0xff00 /* Start of processor-specific */#define SHN_BEFORE 0xff00 /* Order section before all others (Solaris). */#define SHN_AFTER 0xff01 /* Order section after all others (Solaris). */#define SHN_HIPROC 0xff1f /* End of processor-specific */#define SHN_LOOS 0xff20 /* Start of OS-specific */#define SHN_HIOS 0xff3f /* End of OS-specific */#define SHN_ABS 0xfff1 /* Associated symbol is absolute */#define SHN_COMMON 0xfff2 /* Associated symbol is common */#define SHN_XINDEX 0xffff /* Index is in extra table. */#define SHN_HIRESERVE 0xffff /* End of reserved indices *//* Legal values for sh_type (section type). */#define SHT_NULL 0 /* Section header table entry unused */#define SHT_PROGBITS 1 /* Program data */#define SHT_SYMTAB 2 /* Symbol table */#define SHT_STRTAB 3 /* String table */#define SHT_RELA 4 /* Relocation entries with addends */#define SHT_HASH 5 /* Symbol hash table */#define SHT_DYNAMIC 6 /* Dynamic linking information */#define SHT_NOTE 7 /* Notes */#define SHT_NOBITS 8 /* Program space with no data (bss) */#define SHT_REL 9 /* Relocation entries, no addends */#define SHT_SHLIB 10 /* Reserved */#define SHT_DYNSYM 11 /* Dynamic linker symbol table */#define SHT_INIT_ARRAY 14 /* Array of constructors */#define SHT_FINI_ARRAY 15 /* Array of destructors */#define SHT_PREINIT_ARRAY 16 /* Array of pre-constructors */#define SHT_GROUP 17 /* Section group */#define SHT_SYMTAB_SHNDX 18 /* Extended section indeces */#define SHT_NUM 19 /* Number of defined types. */#define SHT_LOOS 0x60000000 /* Start OS-specific. */#define SHT_GNU_ATTRIBUTES 0x6ffffff5 /* Object attributes. */#define SHT_GNU_HASH 0x6ffffff6 /* GNU-style hash table. */#define SHT_GNU_LIBLIST 0x6ffffff7 /* Prelink library list */#define SHT_CHECKSUM 0x6ffffff8 /* Checksum for DSO content. */#define SHT_LOSUNW 0x6ffffffa /* Sun-specific low bound. */#define SHT_SUNW_move 0x6ffffffa#define SHT_SUNW_COMDAT 0x6ffffffb#define SHT_SUNW_syminfo 0x6ffffffc#define SHT_GNU_verdef 0x6ffffffd /* Version definition section. */#define SHT_GNU_verneed 0x6ffffffe /* Version needs section. */#define SHT_GNU_versym 0x6fffffff /* Version symbol table. */#define SHT_HISUNW 0x6fffffff /* Sun-specific high bound. */#define SHT_HIOS 0x6fffffff /* End OS-specific type */#define SHT_LOPROC 0x70000000 /* Start of processor-specific */#define SHT_HIPROC 0x7fffffff /* End of processor-specific */#define SHT_LOUSER 0x80000000 /* Start of application-specific */#define SHT_HIUSER 0x8fffffff /* End of application-specific *//* Legal values for sh_flags (section flags). */#define SHF_WRITE (1 &lt;&lt; 0) /* Writable */#define SHF_ALLOC (1 &lt;&lt; 1) /* Occupies memory during execution */#define SHF_EXECINSTR (1 &lt;&lt; 2) /* Executable */#define SHF_MERGE (1 &lt;&lt; 4) /* Might be merged */#define SHF_STRINGS (1 &lt;&lt; 5) /* Contains nul-terminated strings */#define SHF_INFO_LINK (1 &lt;&lt; 6) /* `sh_info' contains SHT index */#define SHF_LINK_ORDER (1 &lt;&lt; 7) /* Preserve order after combining */#define SHF_OS_NONCONFORMING (1 &lt;&lt; 8) /* Non-standard OS specific handling required */#define SHF_GROUP (1 &lt;&lt; 9) /* Section is member of a group. */#define SHF_TLS (1 &lt;&lt; 10) /* Section hold thread-local data. */#define SHF_COMPRESSED (1 &lt;&lt; 11) /* Section with compressed data. */#define SHF_MASKOS 0x0ff00000 /* OS-specific. */#define SHF_MASKPROC 0xf0000000 /* Processor-specific */#define SHF_ORDERED (1 &lt;&lt; 30) /* Special ordering requirement (Solaris). */#define SHF_EXCLUDE (1U &lt;&lt; 31) /* Section is excluded unless referenced or allocated (Solaris).*//* Section compression header. Used when SHF_COMPRESSED is set. */typedef struct&#123; Elf32_Word ch_type; /* Compression format. */ Elf32_Word ch_size; /* Uncompressed data size. */ Elf32_Word ch_addralign; /* Uncompressed data alignment. */&#125; Elf32_Chdr;typedef struct&#123; Elf64_Word ch_type; /* Compression format. */ Elf64_Word ch_reserved; Elf64_Xword ch_size; /* Uncompressed data size. */ Elf64_Xword ch_addralign; /* Uncompressed data alignment. */&#125; Elf64_Chdr;/* Legal values for ch_type (compression algorithm). */#define ELFCOMPRESS_ZLIB 1 /* ZLIB/DEFLATE algorithm. */#define ELFCOMPRESS_LOOS 0x60000000 /* Start of OS-specific. */#define ELFCOMPRESS_HIOS 0x6fffffff /* End of OS-specific. */#define ELFCOMPRESS_LOPROC 0x70000000 /* Start of processor-specific. */#define ELFCOMPRESS_HIPROC 0x7fffffff /* End of processor-specific. *//* Section group handling. */#define GRP_COMDAT 0x1 /* Mark group as COMDAT. *//* Symbol table entry. */typedef struct&#123; Elf32_Word st_name; /* Symbol name (string tbl index) */ Elf32_Addr st_value; /* Symbol value */ Elf32_Word st_size; /* Symbol size */ unsigned char st_info; /* Symbol type and binding */ unsigned char st_other; /* Symbol visibility */ Elf32_Section st_shndx; /* Section index */&#125; Elf32_Sym;typedef struct&#123; Elf64_Word st_name; /* Symbol name (string tbl index) */ unsigned char st_info; /* Symbol type and binding */ unsigned char st_other; /* Symbol visibility */ Elf64_Section st_shndx; /* Section index */ Elf64_Addr st_value; /* Symbol value */ Elf64_Xword st_size; /* Symbol size */&#125; Elf64_Sym;/* The syminfo section if available contains additional information about every dynamic symbol. */typedef struct&#123; Elf32_Half si_boundto; /* Direct bindings, symbol bound to */ Elf32_Half si_flags; /* Per symbol flags */&#125; Elf32_Syminfo;typedef struct&#123; Elf64_Half si_boundto; /* Direct bindings, symbol bound to */ Elf64_Half si_flags; /* Per symbol flags */&#125; Elf64_Syminfo;/* Possible values for si_boundto. */#define SYMINFO_BT_SELF 0xffff /* Symbol bound to self */#define SYMINFO_BT_PARENT 0xfffe /* Symbol bound to parent */#define SYMINFO_BT_LOWRESERVE 0xff00 /* Beginning of reserved entries *//* Possible bitmasks for si_flags. */#define SYMINFO_FLG_DIRECT 0x0001 /* Direct bound symbol */#define SYMINFO_FLG_PASSTHRU 0x0002 /* Pass-thru symbol for translator */#define SYMINFO_FLG_COPY 0x0004 /* Symbol is a copy-reloc */#define SYMINFO_FLG_LAZYLOAD 0x0008 /* Symbol bound to object to be lazy loaded *//* Syminfo version values. */#define SYMINFO_NONE 0#define SYMINFO_CURRENT 1#define SYMINFO_NUM 2/* How to extract and insert information held in the st_info field. */#define ELF32_ST_BIND(val) (((unsigned char) (val)) &gt;&gt; 4)#define ELF32_ST_TYPE(val) ((val) &amp; 0xf)#define ELF32_ST_INFO(bind, type) (((bind) &lt;&lt; 4) + ((type) &amp; 0xf))/* Both Elf32_Sym and Elf64_Sym use the same one-byte st_info field. */#define ELF64_ST_BIND(val) ELF32_ST_BIND (val)#define ELF64_ST_TYPE(val) ELF32_ST_TYPE (val)#define ELF64_ST_INFO(bind, type) ELF32_ST_INFO ((bind), (type))/* Legal values for ST_BIND subfield of st_info (symbol binding). */#define STB_LOCAL 0 /* Local symbol */#define STB_GLOBAL 1 /* Global symbol */#define STB_WEAK 2 /* Weak symbol */#define STB_NUM 3 /* Number of defined types. */#define STB_LOOS 10 /* Start of OS-specific */#define STB_GNU_UNIQUE 10 /* Unique symbol. */#define STB_HIOS 12 /* End of OS-specific */#define STB_LOPROC 13 /* Start of processor-specific */#define STB_HIPROC 15 /* End of processor-specific *//* Legal values for ST_TYPE subfield of st_info (symbol type). */#define STT_NOTYPE 0 /* Symbol type is unspecified */#define STT_OBJECT 1 /* Symbol is a data object */#define STT_FUNC 2 /* Symbol is a code object */#define STT_SECTION 3 /* Symbol associated with a section */#define STT_FILE 4 /* Symbol's name is file name */#define STT_COMMON 5 /* Symbol is a common data object */#define STT_TLS 6 /* Symbol is thread-local data object*/#define STT_NUM 7 /* Number of defined types. */#define STT_LOOS 10 /* Start of OS-specific */#define STT_GNU_IFUNC 10 /* Symbol is indirect code object */#define STT_HIOS 12 /* End of OS-specific */#define STT_LOPROC 13 /* Start of processor-specific */#define STT_HIPROC 15 /* End of processor-specific *//* Symbol table indices are found in the hash buckets and chain table of a symbol hash table section. This special index value indicates the end of a chain, meaning no further symbols are found in that bucket. */#define STN_UNDEF 0 /* End of a chain. *//* How to extract and insert information held in the st_other field. */#define ELF32_ST_VISIBILITY(o) ((o) &amp; 0x03)/* For ELF64 the definitions are the same. */#define ELF64_ST_VISIBILITY(o) ELF32_ST_VISIBILITY (o)/* Symbol visibility specification encoded in the st_other field. */#define STV_DEFAULT 0 /* Default symbol visibility rules */#define STV_INTERNAL 1 /* Processor specific hidden class */#define STV_HIDDEN 2 /* Sym unavailable in other modules */#define STV_PROTECTED 3 /* Not preemptible, not exported *//* Relocation table entry without addend (in section of type SHT_REL). */typedef struct&#123; Elf32_Addr r_offset; /* Address */ Elf32_Word r_info; /* Relocation type and symbol index */&#125; Elf32_Rel;/* I have seen two different definitions of the Elf64_Rel and Elf64_Rela structures, so we'll leave them out until Novell (or whoever) gets their act together. *//* The following, at least, is used on Sparc v9, MIPS, and Alpha. */typedef struct&#123; Elf64_Addr r_offset; /* Address */ Elf64_Xword r_info; /* Relocation type and symbol index */&#125; Elf64_Rel;/* Relocation table entry with addend (in section of type SHT_RELA). */typedef struct&#123; Elf32_Addr r_offset; /* Address */ Elf32_Word r_info; /* Relocation type and symbol index */ Elf32_Sword r_addend; /* Addend */&#125; Elf32_Rela;typedef struct&#123; Elf64_Addr r_offset; /* Address */ Elf64_Xword r_info; /* Relocation type and symbol index */ Elf64_Sxword r_addend; /* Addend */&#125; Elf64_Rela;/* How to extract and insert information held in the r_info field. */#define ELF32_R_SYM(val) ((val) &gt;&gt; 8)#define ELF32_R_TYPE(val) ((val) &amp; 0xff)#define ELF32_R_INFO(sym, type) (((sym) &lt;&lt; 8) + ((type) &amp; 0xff))#define ELF64_R_SYM(i) ((i) &gt;&gt; 32)#define ELF64_R_TYPE(i) ((i) &amp; 0xffffffff)#define ELF64_R_INFO(sym,type) ((((Elf64_Xword) (sym)) &lt;&lt; 32) + (type))/* Program segment header. */typedef struct&#123; Elf32_Word p_type; /* Segment type */ Elf32_Off p_offset; /* Segment file offset */ Elf32_Addr p_vaddr; /* Segment virtual address */ Elf32_Addr p_paddr; /* Segment physical address */ Elf32_Word p_filesz; /* Segment size in file */ Elf32_Word p_memsz; /* Segment size in memory */ Elf32_Word p_flags; /* Segment flags */ Elf32_Word p_align; /* Segment alignment */&#125; Elf32_Phdr;typedef struct&#123; Elf64_Word p_type; /* Segment type */ Elf64_Word p_flags; /* Segment flags */ Elf64_Off p_offset; /* Segment file offset */ Elf64_Addr p_vaddr; /* Segment virtual address */ Elf64_Addr p_paddr; /* Segment physical address */ Elf64_Xword p_filesz; /* Segment size in file */ Elf64_Xword p_memsz; /* Segment size in memory */ Elf64_Xword p_align; /* Segment alignment */&#125; Elf64_Phdr;/* Special value for e_phnum. This indicates that the real number of program headers is too large to fit into e_phnum. Instead the real value is in the field sh_info of section 0. */#define PN_XNUM 0xffff/* Legal values for p_type (segment type). */#define PT_NULL 0 /* Program header table entry unused */#define PT_LOAD 1 /* Loadable program segment */#define PT_DYNAMIC 2 /* Dynamic linking information */#define PT_INTERP 3 /* Program interpreter */#define PT_NOTE 4 /* Auxiliary information */#define PT_SHLIB 5 /* Reserved */#define PT_PHDR 6 /* Entry for header table itself */#define PT_TLS 7 /* Thread-local storage segment */#define PT_NUM 8 /* Number of defined types */#define PT_LOOS 0x60000000 /* Start of OS-specific */#define PT_GNU_EH_FRAME 0x6474e550 /* GCC .eh_frame_hdr segment */#define PT_GNU_STACK 0x6474e551 /* Indicates stack executability */#define PT_GNU_RELRO 0x6474e552 /* Read-only after relocation */#define PT_LOSUNW 0x6ffffffa#define PT_SUNWBSS 0x6ffffffa /* Sun Specific segment */#define PT_SUNWSTACK 0x6ffffffb /* Stack segment */#define PT_HISUNW 0x6fffffff#define PT_HIOS 0x6fffffff /* End of OS-specific */#define PT_LOPROC 0x70000000 /* Start of processor-specific */#define PT_HIPROC 0x7fffffff /* End of processor-specific *//* Legal values for p_flags (segment flags). */#define PF_X (1 &lt;&lt; 0) /* Segment is executable */#define PF_W (1 &lt;&lt; 1) /* Segment is writable */#define PF_R (1 &lt;&lt; 2) /* Segment is readable */#define PF_MASKOS 0x0ff00000 /* OS-specific */#define PF_MASKPROC 0xf0000000 /* Processor-specific *//* Legal values for note segment descriptor types for core files. */#define NT_PRSTATUS 1 /* Contains copy of prstatus struct */#define NT_FPREGSET 2 /* Contains copy of fpregset struct */#define NT_PRPSINFO 3 /* Contains copy of prpsinfo struct */#define NT_PRXREG 4 /* Contains copy of prxregset struct */#define NT_TASKSTRUCT 4 /* Contains copy of task structure */#define NT_PLATFORM 5 /* String from sysinfo(SI_PLATFORM) */#define NT_AUXV 6 /* Contains copy of auxv array */#define NT_GWINDOWS 7 /* Contains copy of gwindows struct */#define NT_ASRS 8 /* Contains copy of asrset struct */#define NT_PSTATUS 10 /* Contains copy of pstatus struct */#define NT_PSINFO 13 /* Contains copy of psinfo struct */#define NT_PRCRED 14 /* Contains copy of prcred struct */#define NT_UTSNAME 15 /* Contains copy of utsname struct */#define NT_LWPSTATUS 16 /* Contains copy of lwpstatus struct */#define NT_LWPSINFO 17 /* Contains copy of lwpinfo struct */#define NT_PRFPXREG 20 /* Contains copy of fprxregset struct */#define NT_SIGINFO 0x53494749 /* Contains copy of siginfo_t, size might increase */#define NT_FILE 0x46494c45 /* Contains information about mapped files */#define NT_PRXFPREG 0x46e62b7f /* Contains copy of user_fxsr_struct */#define NT_PPC_VMX 0x100 /* PowerPC Altivec/VMX registers */#define NT_PPC_SPE 0x101 /* PowerPC SPE/EVR registers */#define NT_PPC_VSX 0x102 /* PowerPC VSX registers */#define NT_386_TLS 0x200 /* i386 TLS slots (struct user_desc) */#define NT_386_IOPERM 0x201 /* x86 io permission bitmap (1=deny) */#define NT_X86_XSTATE 0x202 /* x86 extended state using xsave */#define NT_S390_HIGH_GPRS 0x300 /* s390 upper register halves */#define NT_S390_TIMER 0x301 /* s390 timer register */#define NT_S390_TODCMP 0x302 /* s390 TOD clock comparator register */#define NT_S390_TODPREG 0x303 /* s390 TOD programmable register */#define NT_S390_CTRS 0x304 /* s390 control registers */#define NT_S390_PREFIX 0x305 /* s390 prefix register */#define NT_S390_LAST_BREAK 0x306 /* s390 breaking event address */#define NT_S390_SYSTEM_CALL 0x307 /* s390 system call restart data */#define NT_S390_TDB 0x308 /* s390 transaction diagnostic block */#define NT_ARM_VFP 0x400 /* ARM VFP/NEON registers */#define NT_ARM_TLS 0x401 /* ARM TLS register */#define NT_ARM_HW_BREAK 0x402 /* ARM hardware breakpoint registers */#define NT_ARM_HW_WATCH 0x403 /* ARM hardware watchpoint registers *//* Legal values for the note segment descriptor types for object files. */#define NT_VERSION 1 /* Contains a version string. *//* Dynamic section entry. */typedef struct&#123; Elf32_Sword d_tag; /* Dynamic entry type */ union &#123; Elf32_Word d_val; /* Integer value */ Elf32_Addr d_ptr; /* Address value */ &#125; d_un;&#125; Elf32_Dyn;typedef struct&#123; Elf64_Sxword d_tag; /* Dynamic entry type */ union &#123; Elf64_Xword d_val; /* Integer value */ Elf64_Addr d_ptr; /* Address value */ &#125; d_un;&#125; Elf64_Dyn;/* Legal values for d_tag (dynamic entry type). */#define DT_NULL 0 /* Marks end of dynamic section */#define DT_NEEDED 1 /* Name of needed library */#define DT_PLTRELSZ 2 /* Size in bytes of PLT relocs */#define DT_PLTGOT 3 /* Processor defined value */#define DT_HASH 4 /* Address of symbol hash table */#define DT_STRTAB 5 /* Address of string table */#define DT_SYMTAB 6 /* Address of symbol table */#define DT_RELA 7 /* Address of Rela relocs */#define DT_RELASZ 8 /* Total size of Rela relocs */#define DT_RELAENT 9 /* Size of one Rela reloc */#define DT_STRSZ 10 /* Size of string table */#define DT_SYMENT 11 /* Size of one symbol table entry */#define DT_INIT 12 /* Address of init function */#define DT_FINI 13 /* Address of termination function */#define DT_SONAME 14 /* Name of shared object */#define DT_RPATH 15 /* Library search path (deprecated) */#define DT_SYMBOLIC 16 /* Start symbol search here */#define DT_REL 17 /* Address of Rel relocs */#define DT_RELSZ 18 /* Total size of Rel relocs */#define DT_RELENT 19 /* Size of one Rel reloc */#define DT_PLTREL 20 /* Type of reloc in PLT */#define DT_DEBUG 21 /* For debugging; unspecified */#define DT_TEXTREL 22 /* Reloc might modify .text */#define DT_JMPREL 23 /* Address of PLT relocs */#define DT_BIND_NOW 24 /* Process relocations of object */#define DT_INIT_ARRAY 25 /* Array with addresses of init fct */#define DT_FINI_ARRAY 26 /* Array with addresses of fini fct */#define DT_INIT_ARRAYSZ 27 /* Size in bytes of DT_INIT_ARRAY */#define DT_FINI_ARRAYSZ 28 /* Size in bytes of DT_FINI_ARRAY */#define DT_RUNPATH 29 /* Library search path */#define DT_FLAGS 30 /* Flags for the object being loaded */#define DT_ENCODING 32 /* Start of encoded range */#define DT_PREINIT_ARRAY 32 /* Array with addresses of preinit fct*/#define DT_PREINIT_ARRAYSZ 33 /* size in bytes of DT_PREINIT_ARRAY */#define DT_NUM 34 /* Number used */#define DT_LOOS 0x6000000d /* Start of OS-specific */#define DT_HIOS 0x6ffff000 /* End of OS-specific */#define DT_LOPROC 0x70000000 /* Start of processor-specific */#define DT_HIPROC 0x7fffffff /* End of processor-specific */#define DT_PROCNUM DT_MIPS_NUM /* Most used by any processor *//* DT_* entries which fall between DT_VALRNGHI &amp; DT_VALRNGLO use the Dyn.d_un.d_val field of the Elf*_Dyn structure. This follows Sun's approach. */#define DT_VALRNGLO 0x6ffffd00#define DT_GNU_PRELINKED 0x6ffffdf5 /* Prelinking timestamp */#define DT_GNU_CONFLICTSZ 0x6ffffdf6 /* Size of conflict section */#define DT_GNU_LIBLISTSZ 0x6ffffdf7 /* Size of library list */#define DT_CHECKSUM 0x6ffffdf8#define DT_PLTPADSZ 0x6ffffdf9#define DT_MOVEENT 0x6ffffdfa#define DT_MOVESZ 0x6ffffdfb#define DT_FEATURE_1 0x6ffffdfc /* Feature selection (DTF_*). */#define DT_POSFLAG_1 0x6ffffdfd /* Flags for DT_* entries, effecting the following DT_* entry. */#define DT_SYMINSZ 0x6ffffdfe /* Size of syminfo table (in bytes) */#define DT_SYMINENT 0x6ffffdff /* Entry size of syminfo */#define DT_VALRNGHI 0x6ffffdff#define DT_VALTAGIDX(tag) (DT_VALRNGHI - (tag)) /* Reverse order! */#define DT_VALNUM 12/* DT_* entries which fall between DT_ADDRRNGHI &amp; DT_ADDRRNGLO use the Dyn.d_un.d_ptr field of the Elf*_Dyn structure. If any adjustment is made to the ELF object after it has been built these entries will need to be adjusted. */#define DT_ADDRRNGLO 0x6ffffe00#define DT_GNU_HASH 0x6ffffef5 /* GNU-style hash table. */#define DT_TLSDESC_PLT 0x6ffffef6#define DT_TLSDESC_GOT 0x6ffffef7#define DT_GNU_CONFLICT 0x6ffffef8 /* Start of conflict section */#define DT_GNU_LIBLIST 0x6ffffef9 /* Library list */#define DT_CONFIG 0x6ffffefa /* Configuration information. */#define DT_DEPAUDIT 0x6ffffefb /* Dependency auditing. */#define DT_AUDIT 0x6ffffefc /* Object auditing. */#define DT_PLTPAD 0x6ffffefd /* PLT padding. */#define DT_MOVETAB 0x6ffffefe /* Move table. */#define DT_SYMINFO 0x6ffffeff /* Syminfo table. */#define DT_ADDRRNGHI 0x6ffffeff#define DT_ADDRTAGIDX(tag) (DT_ADDRRNGHI - (tag)) /* Reverse order! */#define DT_ADDRNUM 11/* The versioning entry types. The next are defined as part of the GNU extension. */#define DT_VERSYM 0x6ffffff0#define DT_RELACOUNT 0x6ffffff9#define DT_RELCOUNT 0x6ffffffa/* These were chosen by Sun. */#define DT_FLAGS_1 0x6ffffffb /* State flags, see DF_1_* below. */#define DT_VERDEF 0x6ffffffc /* Address of version definition table */#define DT_VERDEFNUM 0x6ffffffd /* Number of version definitions */#define DT_VERNEED 0x6ffffffe /* Address of table with needed versions */#define DT_VERNEEDNUM 0x6fffffff /* Number of needed versions */#define DT_VERSIONTAGIDX(tag) (DT_VERNEEDNUM - (tag)) /* Reverse order! */#define DT_VERSIONTAGNUM 16/* Sun added these machine-independent extensions in the "processor-specific" range. Be compatible. */#define DT_AUXILIARY 0x7ffffffd /* Shared object to load before self */#define DT_FILTER 0x7fffffff /* Shared object to get values from */#define DT_EXTRATAGIDX(tag) ((Elf32_Word)-((Elf32_Sword) (tag) &lt;&lt;1&gt;&gt;1)-1)#define DT_EXTRANUM 3/* Values of `d_un.d_val' in the DT_FLAGS entry. */#define DF_ORIGIN 0x00000001 /* Object may use DF_ORIGIN */#define DF_SYMBOLIC 0x00000002 /* Symbol resolutions starts here */#define DF_TEXTREL 0x00000004 /* Object contains text relocations */#define DF_BIND_NOW 0x00000008 /* No lazy binding for this object */#define DF_STATIC_TLS 0x00000010 /* Module uses the static TLS model *//* State flags selectable in the `d_un.d_val' element of the DT_FLAGS_1 entry in the dynamic section. */#define DF_1_NOW 0x00000001 /* Set RTLD_NOW for this object. */#define DF_1_GLOBAL 0x00000002 /* Set RTLD_GLOBAL for this object. */#define DF_1_GROUP 0x00000004 /* Set RTLD_GROUP for this object. */#define DF_1_NODELETE 0x00000008 /* Set RTLD_NODELETE for this object.*/#define DF_1_LOADFLTR 0x00000010 /* Trigger filtee loading at runtime.*/#define DF_1_INITFIRST 0x00000020 /* Set RTLD_INITFIRST for this object*/#define DF_1_NOOPEN 0x00000040 /* Set RTLD_NOOPEN for this object. */#define DF_1_ORIGIN 0x00000080 /* $ORIGIN must be handled. */#define DF_1_DIRECT 0x00000100 /* Direct binding enabled. */#define DF_1_TRANS 0x00000200#define DF_1_INTERPOSE 0x00000400 /* Object is used to interpose. */#define DF_1_NODEFLIB 0x00000800 /* Ignore default lib search path. */#define DF_1_NODUMP 0x00001000 /* Object can't be dldump'ed. */#define DF_1_CONFALT 0x00002000 /* Configuration alternative created.*/#define DF_1_ENDFILTEE 0x00004000 /* Filtee terminates filters search. */#define DF_1_DISPRELDNE 0x00008000 /* Disp reloc applied at build time. */#define DF_1_DISPRELPND 0x00010000 /* Disp reloc applied at run-time. */#define DF_1_NODIRECT 0x00020000 /* Object has no-direct binding. */#define DF_1_IGNMULDEF 0x00040000#define DF_1_NOKSYMS 0x00080000#define DF_1_NOHDR 0x00100000#define DF_1_EDITED 0x00200000 /* Object is modified after built. */#define DF_1_NORELOC 0x00400000#define DF_1_SYMINTPOSE 0x00800000 /* Object has individual interposers. */#define DF_1_GLOBAUDIT 0x01000000 /* Global auditing required. */#define DF_1_SINGLETON 0x02000000 /* Singleton symbols are used. *//* Flags for the feature selection in DT_FEATURE_1. */#define DTF_1_PARINIT 0x00000001#define DTF_1_CONFEXP 0x00000002/* Flags in the DT_POSFLAG_1 entry effecting only the next DT_* entry. */#define DF_P1_LAZYLOAD 0x00000001 /* Lazyload following object. */#define DF_P1_GROUPPERM 0x00000002 /* Symbols from next object are not generally available. *//* Version definition sections. */typedef struct&#123; Elf32_Half vd_version; /* Version revision */ Elf32_Half vd_flags; /* Version information */ Elf32_Half vd_ndx; /* Version Index */ Elf32_Half vd_cnt; /* Number of associated aux entries */ Elf32_Word vd_hash; /* Version name hash value */ Elf32_Word vd_aux; /* Offset in bytes to verdaux array */ Elf32_Word vd_next; /* Offset in bytes to next verdef entry */&#125; Elf32_Verdef;typedef struct&#123; Elf64_Half vd_version; /* Version revision */ Elf64_Half vd_flags; /* Version information */ Elf64_Half vd_ndx; /* Version Index */ Elf64_Half vd_cnt; /* Number of associated aux entries */ Elf64_Word vd_hash; /* Version name hash value */ Elf64_Word vd_aux; /* Offset in bytes to verdaux array */ Elf64_Word vd_next; /* Offset in bytes to next verdef entry */&#125; Elf64_Verdef;/* Legal values for vd_version (version revision). */#define VER_DEF_NONE 0 /* No version */#define VER_DEF_CURRENT 1 /* Current version */#define VER_DEF_NUM 2 /* Given version number *//* Legal values for vd_flags (version information flags). */#define VER_FLG_BASE 0x1 /* Version definition of file itself */#define VER_FLG_WEAK 0x2 /* Weak version identifier *//* Versym symbol index values. */#define VER_NDX_LOCAL 0 /* Symbol is local. */#define VER_NDX_GLOBAL 1 /* Symbol is global. */#define VER_NDX_LORESERVE 0xff00 /* Beginning of reserved entries. */#define VER_NDX_ELIMINATE 0xff01 /* Symbol is to be eliminated. *//* Auxialiary version information. */typedef struct&#123; Elf32_Word vda_name; /* Version or dependency names */ Elf32_Word vda_next; /* Offset in bytes to next verdaux entry */&#125; Elf32_Verdaux;typedef struct&#123; Elf64_Word vda_name; /* Version or dependency names */ Elf64_Word vda_next; /* Offset in bytes to next verdaux entry */&#125; Elf64_Verdaux;/* Version dependency section. */typedef struct&#123; Elf32_Half vn_version; /* Version of structure */ Elf32_Half vn_cnt; /* Number of associated aux entries */ Elf32_Word vn_file; /* Offset of filename for this dependency */ Elf32_Word vn_aux; /* Offset in bytes to vernaux array */ Elf32_Word vn_next; /* Offset in bytes to next verneed entry */&#125; Elf32_Verneed;typedef struct&#123; Elf64_Half vn_version; /* Version of structure */ Elf64_Half vn_cnt; /* Number of associated aux entries */ Elf64_Word vn_file; /* Offset of filename for this dependency */ Elf64_Word vn_aux; /* Offset in bytes to vernaux array */ Elf64_Word vn_next; /* Offset in bytes to next verneed entry */&#125; Elf64_Verneed;/* Legal values for vn_version (version revision). */#define VER_NEED_NONE 0 /* No version */#define VER_NEED_CURRENT 1 /* Current version */#define VER_NEED_NUM 2 /* Given version number *//* Auxiliary needed version information. */typedef struct&#123; Elf32_Word vna_hash; /* Hash value of dependency name */ Elf32_Half vna_flags; /* Dependency specific information */ Elf32_Half vna_other; /* Unused */ Elf32_Word vna_name; /* Dependency name string offset */ Elf32_Word vna_next; /* Offset in bytes to next vernaux entry */&#125; Elf32_Vernaux;typedef struct&#123; Elf64_Word vna_hash; /* Hash value of dependency name */ Elf64_Half vna_flags; /* Dependency specific information */ Elf64_Half vna_other; /* Unused */ Elf64_Word vna_name; /* Dependency name string offset */ Elf64_Word vna_next; /* Offset in bytes to next vernaux entry */&#125; Elf64_Vernaux;/* Legal values for vna_flags. */#define VER_FLG_WEAK 0x2 /* Weak version identifier *//* Auxiliary vector. *//* This vector is normally only used by the program interpreter. The usual definition in an ABI supplement uses the name auxv_t. The vector is not usually defined in a standard &lt;elf.h&gt; file, but it can't hurt. We rename it to avoid conflicts. The sizes of these types are an arrangement between the exec server and the program interpreter, so we don't fully specify them here. */typedef struct&#123; uint32_t a_type; /* Entry type */ union &#123; uint32_t a_val; /* Integer value */ /* We use to have pointer elements added here. We cannot do that, though, since it does not work when using 32-bit definitions on 64-bit platforms and vice versa. */ &#125; a_un;&#125; Elf32_auxv_t;typedef struct&#123; uint64_t a_type; /* Entry type */ union &#123; uint64_t a_val; /* Integer value */ /* We use to have pointer elements added here. We cannot do that, though, since it does not work when using 32-bit definitions on 64-bit platforms and vice versa. */ &#125; a_un;&#125; Elf64_auxv_t;#include &lt;bits/auxv.h&gt;/* Note section contents. Each entry in the note section begins with a header of a fixed form. */typedef struct&#123; Elf32_Word n_namesz; /* Length of the note's name. */ Elf32_Word n_descsz; /* Length of the note's descriptor. */ Elf32_Word n_type; /* Type of the note. */&#125; Elf32_Nhdr;typedef struct&#123; Elf64_Word n_namesz; /* Length of the note's name. */ Elf64_Word n_descsz; /* Length of the note's descriptor. */ Elf64_Word n_type; /* Type of the note. */&#125; Elf64_Nhdr;/* Known names of notes. *//* Solaris entries in the note section have this name. */#define ELF_NOTE_SOLARIS "SUNW Solaris"/* Note entries for GNU systems have this name. */#define ELF_NOTE_GNU "GNU"/* Defined types of notes for Solaris. *//* Value of descriptor (one word) is desired pagesize for the binary. */#define ELF_NOTE_PAGESIZE_HINT 1/* Defined note types for GNU systems. *//* ABI information. The descriptor consists of words: word 0: OS descriptor word 1: major version of the ABI word 2: minor version of the ABI word 3: subminor version of the ABI*/#define NT_GNU_ABI_TAG 1#define ELF_NOTE_ABI NT_GNU_ABI_TAG /* Old name. *//* Known OSes. These values can appear in word 0 of an NT_GNU_ABI_TAG note section entry. */#define ELF_NOTE_OS_LINUX 0#define ELF_NOTE_OS_GNU 1#define ELF_NOTE_OS_SOLARIS2 2#define ELF_NOTE_OS_FREEBSD 3/* Synthetic hwcap information. The descriptor begins with two words: word 0: number of entries word 1: bitmask of enabled entries Then follow variable-length entries, one byte followed by a '\0'-terminated hwcap name string. The byte gives the bit number to test if enabled, (1U &lt;&lt; bit) &amp; bitmask. */#define NT_GNU_HWCAP 2/* Build ID bits as generated by ld --build-id. The descriptor consists of any nonzero number of bytes. */#define NT_GNU_BUILD_ID 3/* Version note generated by GNU gold containing a version string. */#define NT_GNU_GOLD_VERSION 4/* Move records. */typedef struct&#123; Elf32_Xword m_value; /* Symbol value. */ Elf32_Word m_info; /* Size and index. */ Elf32_Word m_poffset; /* Symbol offset. */ Elf32_Half m_repeat; /* Repeat count. */ Elf32_Half m_stride; /* Stride info. */&#125; Elf32_Move;typedef struct&#123; Elf64_Xword m_value; /* Symbol value. */ Elf64_Xword m_info; /* Size and index. */ Elf64_Xword m_poffset; /* Symbol offset. */ Elf64_Half m_repeat; /* Repeat count. */ Elf64_Half m_stride; /* Stride info. */&#125; Elf64_Move;/* Macro to construct move records. */#define ELF32_M_SYM(info) ((info) &gt;&gt; 8)#define ELF32_M_SIZE(info) ((unsigned char) (info))#define ELF32_M_INFO(sym, size) (((sym) &lt;&lt; 8) + (unsigned char) (size))#define ELF64_M_SYM(info) ELF32_M_SYM (info)#define ELF64_M_SIZE(info) ELF32_M_SIZE (info)#define ELF64_M_INFO(sym, size) ELF32_M_INFO (sym, size)/* Motorola 68k specific definitions. *//* Values for Elf32_Ehdr.e_flags. */#define EF_CPU32 0x00810000/* m68k relocs. */#define R_68K_NONE 0 /* No reloc */#define R_68K_32 1 /* Direct 32 bit */#define R_68K_16 2 /* Direct 16 bit */#define R_68K_8 3 /* Direct 8 bit */#define R_68K_PC32 4 /* PC relative 32 bit */#define R_68K_PC16 5 /* PC relative 16 bit */#define R_68K_PC8 6 /* PC relative 8 bit */#define R_68K_GOT32 7 /* 32 bit PC relative GOT entry */#define R_68K_GOT16 8 /* 16 bit PC relative GOT entry */#define R_68K_GOT8 9 /* 8 bit PC relative GOT entry */#define R_68K_GOT32O 10 /* 32 bit GOT offset */#define R_68K_GOT16O 11 /* 16 bit GOT offset */#define R_68K_GOT8O 12 /* 8 bit GOT offset */#define R_68K_PLT32 13 /* 32 bit PC relative PLT address */#define R_68K_PLT16 14 /* 16 bit PC relative PLT address */#define R_68K_PLT8 15 /* 8 bit PC relative PLT address */#define R_68K_PLT32O 16 /* 32 bit PLT offset */#define R_68K_PLT16O 17 /* 16 bit PLT offset */#define R_68K_PLT8O 18 /* 8 bit PLT offset */#define R_68K_COPY 19 /* Copy symbol at runtime */#define R_68K_GLOB_DAT 20 /* Create GOT entry */#define R_68K_JMP_SLOT 21 /* Create PLT entry */#define R_68K_RELATIVE 22 /* Adjust by program base */#define R_68K_TLS_GD32 25 /* 32 bit GOT offset for GD */#define R_68K_TLS_GD16 26 /* 16 bit GOT offset for GD */#define R_68K_TLS_GD8 27 /* 8 bit GOT offset for GD */#define R_68K_TLS_LDM32 28 /* 32 bit GOT offset for LDM */#define R_68K_TLS_LDM16 29 /* 16 bit GOT offset for LDM */#define R_68K_TLS_LDM8 30 /* 8 bit GOT offset for LDM */#define R_68K_TLS_LDO32 31 /* 32 bit module-relative offset */#define R_68K_TLS_LDO16 32 /* 16 bit module-relative offset */#define R_68K_TLS_LDO8 33 /* 8 bit module-relative offset */#define R_68K_TLS_IE32 34 /* 32 bit GOT offset for IE */#define R_68K_TLS_IE16 35 /* 16 bit GOT offset for IE */#define R_68K_TLS_IE8 36 /* 8 bit GOT offset for IE */#define R_68K_TLS_LE32 37 /* 32 bit offset relative to static TLS block */#define R_68K_TLS_LE16 38 /* 16 bit offset relative to static TLS block */#define R_68K_TLS_LE8 39 /* 8 bit offset relative to static TLS block */#define R_68K_TLS_DTPMOD32 40 /* 32 bit module number */#define R_68K_TLS_DTPREL32 41 /* 32 bit module-relative offset */#define R_68K_TLS_TPREL32 42 /* 32 bit TP-relative offset *//* Keep this the last entry. */#define R_68K_NUM 43/* Intel 80386 specific definitions. *//* i386 relocs. */#define R_386_NONE 0 /* No reloc */#define R_386_32 1 /* Direct 32 bit */#define R_386_PC32 2 /* PC relative 32 bit */#define R_386_GOT32 3 /* 32 bit GOT entry */#define R_386_PLT32 4 /* 32 bit PLT address */#define R_386_COPY 5 /* Copy symbol at runtime */#define R_386_GLOB_DAT 6 /* Create GOT entry */#define R_386_JMP_SLOT 7 /* Create PLT entry */#define R_386_RELATIVE 8 /* Adjust by program base */#define R_386_GOTOFF 9 /* 32 bit offset to GOT */#define R_386_GOTPC 10 /* 32 bit PC relative offset to GOT */#define R_386_32PLT 11#define R_386_TLS_TPOFF 14 /* Offset in static TLS block */#define R_386_TLS_IE 15 /* Address of GOT entry for static TLS block offset */#define R_386_TLS_GOTIE 16 /* GOT entry for static TLS block offset */#define R_386_TLS_LE 17 /* Offset relative to static TLS block */#define R_386_TLS_GD 18 /* Direct 32 bit for GNU version of general dynamic thread local data */#define R_386_TLS_LDM 19 /* Direct 32 bit for GNU version of local dynamic thread local data in LE code */#define R_386_16 20#define R_386_PC16 21#define R_386_8 22#define R_386_PC8 23#define R_386_TLS_GD_32 24 /* Direct 32 bit for general dynamic thread local data */#define R_386_TLS_GD_PUSH 25 /* Tag for pushl in GD TLS code */#define R_386_TLS_GD_CALL 26 /* Relocation for call to __tls_get_addr() */#define R_386_TLS_GD_POP 27 /* Tag for popl in GD TLS code */#define R_386_TLS_LDM_32 28 /* Direct 32 bit for local dynamic thread local data in LE code */#define R_386_TLS_LDM_PUSH 29 /* Tag for pushl in LDM TLS code */#define R_386_TLS_LDM_CALL 30 /* Relocation for call to __tls_get_addr() in LDM code */#define R_386_TLS_LDM_POP 31 /* Tag for popl in LDM TLS code */#define R_386_TLS_LDO_32 32 /* Offset relative to TLS block */#define R_386_TLS_IE_32 33 /* GOT entry for negated static TLS block offset */#define R_386_TLS_LE_32 34 /* Negated offset relative to static TLS block */#define R_386_TLS_DTPMOD32 35 /* ID of module containing symbol */#define R_386_TLS_DTPOFF32 36 /* Offset in TLS block */#define R_386_TLS_TPOFF32 37 /* Negated offset in static TLS block */#define R_386_SIZE32 38 /* 32-bit symbol size */#define R_386_TLS_GOTDESC 39 /* GOT offset for TLS descriptor. */#define R_386_TLS_DESC_CALL 40 /* Marker of call through TLS descriptor for relaxation. */#define R_386_TLS_DESC 41 /* TLS descriptor containing pointer to code and to argument, returning the TLS offset for the symbol. */#define R_386_IRELATIVE 42 /* Adjust indirectly by program base *//* Keep this the last entry. */#define R_386_NUM 43/* SUN SPARC specific definitions. *//* Legal values for ST_TYPE subfield of st_info (symbol type). */#define STT_SPARC_REGISTER 13 /* Global register reserved to app. *//* Values for Elf64_Ehdr.e_flags. */#define EF_SPARCV9_MM 3#define EF_SPARCV9_TSO 0#define EF_SPARCV9_PSO 1#define EF_SPARCV9_RMO 2#define EF_SPARC_LEDATA 0x800000 /* little endian data */#define EF_SPARC_EXT_MASK 0xFFFF00#define EF_SPARC_32PLUS 0x000100 /* generic V8+ features */#define EF_SPARC_SUN_US1 0x000200 /* Sun UltraSPARC1 extensions */#define EF_SPARC_HAL_R1 0x000400 /* HAL R1 extensions */#define EF_SPARC_SUN_US3 0x000800 /* Sun UltraSPARCIII extensions *//* SPARC relocs. */#define R_SPARC_NONE 0 /* No reloc */#define R_SPARC_8 1 /* Direct 8 bit */#define R_SPARC_16 2 /* Direct 16 bit */#define R_SPARC_32 3 /* Direct 32 bit */#define R_SPARC_DISP8 4 /* PC relative 8 bit */#define R_SPARC_DISP16 5 /* PC relative 16 bit */#define R_SPARC_DISP32 6 /* PC relative 32 bit */#define R_SPARC_WDISP30 7 /* PC relative 30 bit shifted */#define R_SPARC_WDISP22 8 /* PC relative 22 bit shifted */#define R_SPARC_HI22 9 /* High 22 bit */#define R_SPARC_22 10 /* Direct 22 bit */#define R_SPARC_13 11 /* Direct 13 bit */#define R_SPARC_LO10 12 /* Truncated 10 bit */#define R_SPARC_GOT10 13 /* Truncated 10 bit GOT entry */#define R_SPARC_GOT13 14 /* 13 bit GOT entry */#define R_SPARC_GOT22 15 /* 22 bit GOT entry shifted */#define R_SPARC_PC10 16 /* PC relative 10 bit truncated */#define R_SPARC_PC22 17 /* PC relative 22 bit shifted */#define R_SPARC_WPLT30 18 /* 30 bit PC relative PLT address */#define R_SPARC_COPY 19 /* Copy symbol at runtime */#define R_SPARC_GLOB_DAT 20 /* Create GOT entry */#define R_SPARC_JMP_SLOT 21 /* Create PLT entry */#define R_SPARC_RELATIVE 22 /* Adjust by program base */#define R_SPARC_UA32 23 /* Direct 32 bit unaligned *//* Additional Sparc64 relocs. */#define R_SPARC_PLT32 24 /* Direct 32 bit ref to PLT entry */#define R_SPARC_HIPLT22 25 /* High 22 bit PLT entry */#define R_SPARC_LOPLT10 26 /* Truncated 10 bit PLT entry */#define R_SPARC_PCPLT32 27 /* PC rel 32 bit ref to PLT entry */#define R_SPARC_PCPLT22 28 /* PC rel high 22 bit PLT entry */#define R_SPARC_PCPLT10 29 /* PC rel trunc 10 bit PLT entry */#define R_SPARC_10 30 /* Direct 10 bit */#define R_SPARC_11 31 /* Direct 11 bit */#define R_SPARC_64 32 /* Direct 64 bit */#define R_SPARC_OLO10 33 /* 10bit with secondary 13bit addend */#define R_SPARC_HH22 34 /* Top 22 bits of direct 64 bit */#define R_SPARC_HM10 35 /* High middle 10 bits of ... */#define R_SPARC_LM22 36 /* Low middle 22 bits of ... */#define R_SPARC_PC_HH22 37 /* Top 22 bits of pc rel 64 bit */#define R_SPARC_PC_HM10 38 /* High middle 10 bit of ... */#define R_SPARC_PC_LM22 39 /* Low miggle 22 bits of ... */#define R_SPARC_WDISP16 40 /* PC relative 16 bit shifted */#define R_SPARC_WDISP19 41 /* PC relative 19 bit shifted */#define R_SPARC_GLOB_JMP 42 /* was part of v9 ABI but was removed */#define R_SPARC_7 43 /* Direct 7 bit */#define R_SPARC_5 44 /* Direct 5 bit */#define R_SPARC_6 45 /* Direct 6 bit */#define R_SPARC_DISP64 46 /* PC relative 64 bit */#define R_SPARC_PLT64 47 /* Direct 64 bit ref to PLT entry */#define R_SPARC_HIX22 48 /* High 22 bit complemented */#define R_SPARC_LOX10 49 /* Truncated 11 bit complemented */#define R_SPARC_H44 50 /* Direct high 12 of 44 bit */#define R_SPARC_M44 51 /* Direct mid 22 of 44 bit */#define R_SPARC_L44 52 /* Direct low 10 of 44 bit */#define R_SPARC_REGISTER 53 /* Global register usage */#define R_SPARC_UA64 54 /* Direct 64 bit unaligned */#define R_SPARC_UA16 55 /* Direct 16 bit unaligned */#define R_SPARC_TLS_GD_HI22 56#define R_SPARC_TLS_GD_LO10 57#define R_SPARC_TLS_GD_ADD 58#define R_SPARC_TLS_GD_CALL 59#define R_SPARC_TLS_LDM_HI22 60#define R_SPARC_TLS_LDM_LO10 61#define R_SPARC_TLS_LDM_ADD 62#define R_SPARC_TLS_LDM_CALL 63#define R_SPARC_TLS_LDO_HIX22 64#define R_SPARC_TLS_LDO_LOX10 65#define R_SPARC_TLS_LDO_ADD 66#define R_SPARC_TLS_IE_HI22 67#define R_SPARC_TLS_IE_LO10 68#define R_SPARC_TLS_IE_LD 69#define R_SPARC_TLS_IE_LDX 70#define R_SPARC_TLS_IE_ADD 71#define R_SPARC_TLS_LE_HIX22 72#define R_SPARC_TLS_LE_LOX10 73#define R_SPARC_TLS_DTPMOD32 74#define R_SPARC_TLS_DTPMOD64 75#define R_SPARC_TLS_DTPOFF32 76#define R_SPARC_TLS_DTPOFF64 77#define R_SPARC_TLS_TPOFF32 78#define R_SPARC_TLS_TPOFF64 79#define R_SPARC_GOTDATA_HIX22 80#define R_SPARC_GOTDATA_LOX10 81#define R_SPARC_GOTDATA_OP_HIX22 82#define R_SPARC_GOTDATA_OP_LOX10 83#define R_SPARC_GOTDATA_OP 84#define R_SPARC_H34 85#define R_SPARC_SIZE32 86#define R_SPARC_SIZE64 87#define R_SPARC_WDISP10 88#define R_SPARC_JMP_IREL 248#define R_SPARC_IRELATIVE 249#define R_SPARC_GNU_VTINHERIT 250#define R_SPARC_GNU_VTENTRY 251#define R_SPARC_REV32 252/* Keep this the last entry. */#define R_SPARC_NUM 253/* For Sparc64, legal values for d_tag of Elf64_Dyn. */#define DT_SPARC_REGISTER 0x70000001#define DT_SPARC_NUM 2/* MIPS R3000 specific definitions. *//* Legal values for e_flags field of Elf32_Ehdr. */#define EF_MIPS_NOREORDER 1 /* A .noreorder directive was used. */#define EF_MIPS_PIC 2 /* Contains PIC code. */#define EF_MIPS_CPIC 4 /* Uses PIC calling sequence. */#define EF_MIPS_XGOT 8#define EF_MIPS_64BIT_WHIRL 16#define EF_MIPS_ABI2 32#define EF_MIPS_ABI_ON32 64#define EF_MIPS_FP64 512 /* Uses FP64 (12 callee-saved). */#define EF_MIPS_NAN2008 1024 /* Uses IEEE 754-2008 NaN encoding. */#define EF_MIPS_ARCH 0xf0000000 /* MIPS architecture level. *//* Legal values for MIPS architecture level. */#define EF_MIPS_ARCH_1 0x00000000 /* -mips1 code. */#define EF_MIPS_ARCH_2 0x10000000 /* -mips2 code. */#define EF_MIPS_ARCH_3 0x20000000 /* -mips3 code. */#define EF_MIPS_ARCH_4 0x30000000 /* -mips4 code. */#define EF_MIPS_ARCH_5 0x40000000 /* -mips5 code. */#define EF_MIPS_ARCH_32 0x50000000 /* MIPS32 code. */#define EF_MIPS_ARCH_64 0x60000000 /* MIPS64 code. */#define EF_MIPS_ARCH_32R2 0x70000000 /* MIPS32r2 code. */#define EF_MIPS_ARCH_64R2 0x80000000 /* MIPS64r2 code. *//* The following are unofficial names and should not be used. */#define E_MIPS_ARCH_1 EF_MIPS_ARCH_1#define E_MIPS_ARCH_2 EF_MIPS_ARCH_2#define E_MIPS_ARCH_3 EF_MIPS_ARCH_3#define E_MIPS_ARCH_4 EF_MIPS_ARCH_4#define E_MIPS_ARCH_5 EF_MIPS_ARCH_5#define E_MIPS_ARCH_32 EF_MIPS_ARCH_32#define E_MIPS_ARCH_64 EF_MIPS_ARCH_64/* Special section indices. */#define SHN_MIPS_ACOMMON 0xff00 /* Allocated common symbols. */#define SHN_MIPS_TEXT 0xff01 /* Allocated test symbols. */#define SHN_MIPS_DATA 0xff02 /* Allocated data symbols. */#define SHN_MIPS_SCOMMON 0xff03 /* Small common symbols. */#define SHN_MIPS_SUNDEFINED 0xff04 /* Small undefined symbols. *//* Legal values for sh_type field of Elf32_Shdr. */#define SHT_MIPS_LIBLIST 0x70000000 /* Shared objects used in link. */#define SHT_MIPS_MSYM 0x70000001#define SHT_MIPS_CONFLICT 0x70000002 /* Conflicting symbols. */#define SHT_MIPS_GPTAB 0x70000003 /* Global data area sizes. */#define SHT_MIPS_UCODE 0x70000004 /* Reserved for SGI/MIPS compilers */#define SHT_MIPS_DEBUG 0x70000005 /* MIPS ECOFF debugging info. */#define SHT_MIPS_REGINFO 0x70000006 /* Register usage information. */#define SHT_MIPS_PACKAGE 0x70000007#define SHT_MIPS_PACKSYM 0x70000008#define SHT_MIPS_RELD 0x70000009#define SHT_MIPS_IFACE 0x7000000b#define SHT_MIPS_CONTENT 0x7000000c#define SHT_MIPS_OPTIONS 0x7000000d /* Miscellaneous options. */#define SHT_MIPS_SHDR 0x70000010#define SHT_MIPS_FDESC 0x70000011#define SHT_MIPS_EXTSYM 0x70000012#define SHT_MIPS_DENSE 0x70000013#define SHT_MIPS_PDESC 0x70000014#define SHT_MIPS_LOCSYM 0x70000015#define SHT_MIPS_AUXSYM 0x70000016#define SHT_MIPS_OPTSYM 0x70000017#define SHT_MIPS_LOCSTR 0x70000018#define SHT_MIPS_LINE 0x70000019#define SHT_MIPS_RFDESC 0x7000001a#define SHT_MIPS_DELTASYM 0x7000001b#define SHT_MIPS_DELTAINST 0x7000001c#define SHT_MIPS_DELTACLASS 0x7000001d#define SHT_MIPS_DWARF 0x7000001e /* DWARF debugging information. */#define SHT_MIPS_DELTADECL 0x7000001f#define SHT_MIPS_SYMBOL_LIB 0x70000020#define SHT_MIPS_EVENTS 0x70000021 /* Event section. */#define SHT_MIPS_TRANSLATE 0x70000022#define SHT_MIPS_PIXIE 0x70000023#define SHT_MIPS_XLATE 0x70000024#define SHT_MIPS_XLATE_DEBUG 0x70000025#define SHT_MIPS_WHIRL 0x70000026#define SHT_MIPS_EH_REGION 0x70000027#define SHT_MIPS_XLATE_OLD 0x70000028#define SHT_MIPS_PDR_EXCEPTION 0x70000029/* Legal values for sh_flags field of Elf32_Shdr. */#define SHF_MIPS_GPREL 0x10000000 /* Must be in global data area. */#define SHF_MIPS_MERGE 0x20000000#define SHF_MIPS_ADDR 0x40000000#define SHF_MIPS_STRINGS 0x80000000#define SHF_MIPS_NOSTRIP 0x08000000#define SHF_MIPS_LOCAL 0x04000000#define SHF_MIPS_NAMES 0x02000000#define SHF_MIPS_NODUPE 0x01000000/* Symbol tables. *//* MIPS specific values for `st_other'. */#define STO_MIPS_DEFAULT 0x0#define STO_MIPS_INTERNAL 0x1#define STO_MIPS_HIDDEN 0x2#define STO_MIPS_PROTECTED 0x3#define STO_MIPS_PLT 0x8#define STO_MIPS_SC_ALIGN_UNUSED 0xff/* MIPS specific values for `st_info'. */#define STB_MIPS_SPLIT_COMMON 13/* Entries found in sections of type SHT_MIPS_GPTAB. */typedef union&#123; struct &#123; Elf32_Word gt_current_g_value; /* -G value used for compilation. */ Elf32_Word gt_unused; /* Not used. */ &#125; gt_header; /* First entry in section. */ struct &#123; Elf32_Word gt_g_value; /* If this value were used for -G. */ Elf32_Word gt_bytes; /* This many bytes would be used. */ &#125; gt_entry; /* Subsequent entries in section. */&#125; Elf32_gptab;/* Entry found in sections of type SHT_MIPS_REGINFO. */typedef struct&#123; Elf32_Word ri_gprmask; /* General registers used. */ Elf32_Word ri_cprmask[4]; /* Coprocessor registers used. */ Elf32_Sword ri_gp_value; /* $gp register value. */&#125; Elf32_RegInfo;/* Entries found in sections of type SHT_MIPS_OPTIONS. */typedef struct&#123; unsigned char kind; /* Determines interpretation of the variable part of descriptor. */ unsigned char size; /* Size of descriptor, including header. */ Elf32_Section section; /* Section header index of section affected, 0 for global options. */ Elf32_Word info; /* Kind-specific information. */&#125; Elf_Options;/* Values for `kind' field in Elf_Options. */#define ODK_NULL 0 /* Undefined. */#define ODK_REGINFO 1 /* Register usage information. */#define ODK_EXCEPTIONS 2 /* Exception processing options. */#define ODK_PAD 3 /* Section padding options. */#define ODK_HWPATCH 4 /* Hardware workarounds performed */#define ODK_FILL 5 /* record the fill value used by the linker. */#define ODK_TAGS 6 /* reserve space for desktop tools to write. */#define ODK_HWAND 7 /* HW workarounds. 'AND' bits when merging. */#define ODK_HWOR 8 /* HW workarounds. 'OR' bits when merging. *//* Values for `info' in Elf_Options for ODK_EXCEPTIONS entries. */#define OEX_FPU_MIN 0x1f /* FPE's which MUST be enabled. */#define OEX_FPU_MAX 0x1f00 /* FPE's which MAY be enabled. */#define OEX_PAGE0 0x10000 /* page zero must be mapped. */#define OEX_SMM 0x20000 /* Force sequential memory mode? */#define OEX_FPDBUG 0x40000 /* Force floating point debug mode? */#define OEX_PRECISEFP OEX_FPDBUG#define OEX_DISMISS 0x80000 /* Dismiss invalid address faults? */#define OEX_FPU_INVAL 0x10#define OEX_FPU_DIV0 0x08#define OEX_FPU_OFLO 0x04#define OEX_FPU_UFLO 0x02#define OEX_FPU_INEX 0x01/* Masks for `info' in Elf_Options for an ODK_HWPATCH entry. */#define OHW_R4KEOP 0x1 /* R4000 end-of-page patch. */#define OHW_R8KPFETCH 0x2 /* may need R8000 prefetch patch. */#define OHW_R5KEOP 0x4 /* R5000 end-of-page patch. */#define OHW_R5KCVTL 0x8 /* R5000 cvt.[ds].l bug. clean=1. */#define OPAD_PREFIX 0x1#define OPAD_POSTFIX 0x2#define OPAD_SYMBOL 0x4/* Entry found in `.options' section. */typedef struct&#123; Elf32_Word hwp_flags1; /* Extra flags. */ Elf32_Word hwp_flags2; /* Extra flags. */&#125; Elf_Options_Hw;/* Masks for `info' in ElfOptions for ODK_HWAND and ODK_HWOR entries. */#define OHWA0_R4KEOP_CHECKED 0x00000001#define OHWA1_R4KEOP_CLEAN 0x00000002/* MIPS relocs. */#define R_MIPS_NONE 0 /* No reloc */#define R_MIPS_16 1 /* Direct 16 bit */#define R_MIPS_32 2 /* Direct 32 bit */#define R_MIPS_REL32 3 /* PC relative 32 bit */#define R_MIPS_26 4 /* Direct 26 bit shifted */#define R_MIPS_HI16 5 /* High 16 bit */#define R_MIPS_LO16 6 /* Low 16 bit */#define R_MIPS_GPREL16 7 /* GP relative 16 bit */#define R_MIPS_LITERAL 8 /* 16 bit literal entry */#define R_MIPS_GOT16 9 /* 16 bit GOT entry */#define R_MIPS_PC16 10 /* PC relative 16 bit */#define R_MIPS_CALL16 11 /* 16 bit GOT entry for function */#define R_MIPS_GPREL32 12 /* GP relative 32 bit */#define R_MIPS_SHIFT5 16#define R_MIPS_SHIFT6 17#define R_MIPS_64 18#define R_MIPS_GOT_DISP 19#define R_MIPS_GOT_PAGE 20#define R_MIPS_GOT_OFST 21#define R_MIPS_GOT_HI16 22#define R_MIPS_GOT_LO16 23#define R_MIPS_SUB 24#define R_MIPS_INSERT_A 25#define R_MIPS_INSERT_B 26#define R_MIPS_DELETE 27#define R_MIPS_HIGHER 28#define R_MIPS_HIGHEST 29#define R_MIPS_CALL_HI16 30#define R_MIPS_CALL_LO16 31#define R_MIPS_SCN_DISP 32#define R_MIPS_REL16 33#define R_MIPS_ADD_IMMEDIATE 34#define R_MIPS_PJUMP 35#define R_MIPS_RELGOT 36#define R_MIPS_JALR 37#define R_MIPS_TLS_DTPMOD32 38 /* Module number 32 bit */#define R_MIPS_TLS_DTPREL32 39 /* Module-relative offset 32 bit */#define R_MIPS_TLS_DTPMOD64 40 /* Module number 64 bit */#define R_MIPS_TLS_DTPREL64 41 /* Module-relative offset 64 bit */#define R_MIPS_TLS_GD 42 /* 16 bit GOT offset for GD */#define R_MIPS_TLS_LDM 43 /* 16 bit GOT offset for LDM */#define R_MIPS_TLS_DTPREL_HI16 44 /* Module-relative offset, high 16 bits */#define R_MIPS_TLS_DTPREL_LO16 45 /* Module-relative offset, low 16 bits */#define R_MIPS_TLS_GOTTPREL 46 /* 16 bit GOT offset for IE */#define R_MIPS_TLS_TPREL32 47 /* TP-relative offset, 32 bit */#define R_MIPS_TLS_TPREL64 48 /* TP-relative offset, 64 bit */#define R_MIPS_TLS_TPREL_HI16 49 /* TP-relative offset, high 16 bits */#define R_MIPS_TLS_TPREL_LO16 50 /* TP-relative offset, low 16 bits */#define R_MIPS_GLOB_DAT 51#define R_MIPS_COPY 126#define R_MIPS_JUMP_SLOT 127/* Keep this the last entry. */#define R_MIPS_NUM 128/* Legal values for p_type field of Elf32_Phdr. */#define PT_MIPS_REGINFO 0x70000000 /* Register usage information. */#define PT_MIPS_RTPROC 0x70000001 /* Runtime procedure table. */#define PT_MIPS_OPTIONS 0x70000002#define PT_MIPS_ABIFLAGS 0x70000003 /* FP mode requirement. *//* Special program header types. */#define PF_MIPS_LOCAL 0x10000000/* Legal values for d_tag field of Elf32_Dyn. */#define DT_MIPS_RLD_VERSION 0x70000001 /* Runtime linker interface version */#define DT_MIPS_TIME_STAMP 0x70000002 /* Timestamp */#define DT_MIPS_ICHECKSUM 0x70000003 /* Checksum */#define DT_MIPS_IVERSION 0x70000004 /* Version string (string tbl index) */#define DT_MIPS_FLAGS 0x70000005 /* Flags */#define DT_MIPS_BASE_ADDRESS 0x70000006 /* Base address */#define DT_MIPS_MSYM 0x70000007#define DT_MIPS_CONFLICT 0x70000008 /* Address of CONFLICT section */#define DT_MIPS_LIBLIST 0x70000009 /* Address of LIBLIST section */#define DT_MIPS_LOCAL_GOTNO 0x7000000a /* Number of local GOT entries */#define DT_MIPS_CONFLICTNO 0x7000000b /* Number of CONFLICT entries */#define DT_MIPS_LIBLISTNO 0x70000010 /* Number of LIBLIST entries */#define DT_MIPS_SYMTABNO 0x70000011 /* Number of DYNSYM entries */#define DT_MIPS_UNREFEXTNO 0x70000012 /* First external DYNSYM */#define DT_MIPS_GOTSYM 0x70000013 /* First GOT entry in DYNSYM */#define DT_MIPS_HIPAGENO 0x70000014 /* Number of GOT page table entries */#define DT_MIPS_RLD_MAP 0x70000016 /* Address of run time loader map. */#define DT_MIPS_DELTA_CLASS 0x70000017 /* Delta C++ class definition. */#define DT_MIPS_DELTA_CLASS_NO 0x70000018 /* Number of entries in DT_MIPS_DELTA_CLASS. */#define DT_MIPS_DELTA_INSTANCE 0x70000019 /* Delta C++ class instances. */#define DT_MIPS_DELTA_INSTANCE_NO 0x7000001a /* Number of entries in DT_MIPS_DELTA_INSTANCE. */#define DT_MIPS_DELTA_RELOC 0x7000001b /* Delta relocations. */#define DT_MIPS_DELTA_RELOC_NO 0x7000001c /* Number of entries in DT_MIPS_DELTA_RELOC. */#define DT_MIPS_DELTA_SYM 0x7000001d /* Delta symbols that Delta relocations refer to. */#define DT_MIPS_DELTA_SYM_NO 0x7000001e /* Number of entries in DT_MIPS_DELTA_SYM. */#define DT_MIPS_DELTA_CLASSSYM 0x70000020 /* Delta symbols that hold the class declaration. */#define DT_MIPS_DELTA_CLASSSYM_NO 0x70000021 /* Number of entries in DT_MIPS_DELTA_CLASSSYM. */#define DT_MIPS_CXX_FLAGS 0x70000022 /* Flags indicating for C++ flavor. */#define DT_MIPS_PIXIE_INIT 0x70000023#define DT_MIPS_SYMBOL_LIB 0x70000024#define DT_MIPS_LOCALPAGE_GOTIDX 0x70000025#define DT_MIPS_LOCAL_GOTIDX 0x70000026#define DT_MIPS_HIDDEN_GOTIDX 0x70000027#define DT_MIPS_PROTECTED_GOTIDX 0x70000028#define DT_MIPS_OPTIONS 0x70000029 /* Address of .options. */#define DT_MIPS_INTERFACE 0x7000002a /* Address of .interface. */#define DT_MIPS_DYNSTR_ALIGN 0x7000002b#define DT_MIPS_INTERFACE_SIZE 0x7000002c /* Size of the .interface section. */#define DT_MIPS_RLD_TEXT_RESOLVE_ADDR 0x7000002d /* Address of rld_text_rsolve function stored in GOT. */#define DT_MIPS_PERF_SUFFIX 0x7000002e /* Default suffix of dso to be added by rld on dlopen() calls. */#define DT_MIPS_COMPACT_SIZE 0x7000002f /* (O32)Size of compact rel section. */#define DT_MIPS_GP_VALUE 0x70000030 /* GP value for aux GOTs. */#define DT_MIPS_AUX_DYNAMIC 0x70000031 /* Address of aux .dynamic. *//* The address of .got.plt in an executable using the new non-PIC ABI. */#define DT_MIPS_PLTGOT 0x70000032/* The base of the PLT in an executable using the new non-PIC ABI if that PLT is writable. For a non-writable PLT, this is omitted or has a zero value. */#define DT_MIPS_RWPLT 0x70000034/* An alternative description of the classic MIPS RLD_MAP that is usable in a PIE as it stores a relative offset from the address of the tag rather than an absolute address. */#define DT_MIPS_RLD_MAP_REL 0x70000035#define DT_MIPS_NUM 0x36/* Legal values for DT_MIPS_FLAGS Elf32_Dyn entry. */#define RHF_NONE 0 /* No flags */#define RHF_QUICKSTART (1 &lt;&lt; 0) /* Use quickstart */#define RHF_NOTPOT (1 &lt;&lt; 1) /* Hash size not power of 2 */#define RHF_NO_LIBRARY_REPLACEMENT (1 &lt;&lt; 2) /* Ignore LD_LIBRARY_PATH */#define RHF_NO_MOVE (1 &lt;&lt; 3)#define RHF_SGI_ONLY (1 &lt;&lt; 4)#define RHF_GUARANTEE_INIT (1 &lt;&lt; 5)#define RHF_DELTA_C_PLUS_PLUS (1 &lt;&lt; 6)#define RHF_GUARANTEE_START_INIT (1 &lt;&lt; 7)#define RHF_PIXIE (1 &lt;&lt; 8)#define RHF_DEFAULT_DELAY_LOAD (1 &lt;&lt; 9)#define RHF_REQUICKSTART (1 &lt;&lt; 10)#define RHF_REQUICKSTARTED (1 &lt;&lt; 11)#define RHF_CORD (1 &lt;&lt; 12)#define RHF_NO_UNRES_UNDEF (1 &lt;&lt; 13)#define RHF_RLD_ORDER_SAFE (1 &lt;&lt; 14)/* Entries found in sections of type SHT_MIPS_LIBLIST. */typedef struct&#123; Elf32_Word l_name; /* Name (string table index) */ Elf32_Word l_time_stamp; /* Timestamp */ Elf32_Word l_checksum; /* Checksum */ Elf32_Word l_version; /* Interface version */ Elf32_Word l_flags; /* Flags */&#125; Elf32_Lib;typedef struct&#123; Elf64_Word l_name; /* Name (string table index) */ Elf64_Word l_time_stamp; /* Timestamp */ Elf64_Word l_checksum; /* Checksum */ Elf64_Word l_version; /* Interface version */ Elf64_Word l_flags; /* Flags */&#125; Elf64_Lib;/* Legal values for l_flags. */#define LL_NONE 0#define LL_EXACT_MATCH (1 &lt;&lt; 0) /* Require exact match */#define LL_IGNORE_INT_VER (1 &lt;&lt; 1) /* Ignore interface version */#define LL_REQUIRE_MINOR (1 &lt;&lt; 2)#define LL_EXPORTS (1 &lt;&lt; 3)#define LL_DELAY_LOAD (1 &lt;&lt; 4)#define LL_DELTA (1 &lt;&lt; 5)/* Entries found in sections of type SHT_MIPS_CONFLICT. */typedef Elf32_Addr Elf32_Conflict;typedef struct&#123; /* Version of flags structure. */ Elf32_Half version; /* The level of the ISA: 1-5, 32, 64. */ unsigned char isa_level; /* The revision of ISA: 0 for MIPS V and below, 1-n otherwise. */ unsigned char isa_rev; /* The size of general purpose registers. */ unsigned char gpr_size; /* The size of co-processor 1 registers. */ unsigned char cpr1_size; /* The size of co-processor 2 registers. */ unsigned char cpr2_size; /* The floating-point ABI. */ unsigned char fp_abi; /* Processor-specific extension. */ Elf32_Word isa_ext; /* Mask of ASEs used. */ Elf32_Word ases; /* Mask of general flags. */ Elf32_Word flags1; Elf32_Word flags2;&#125; Elf_MIPS_ABIFlags_v0;/* Values for the register size bytes of an abi flags structure. */#define MIPS_AFL_REG_NONE 0x00 /* No registers. */#define MIPS_AFL_REG_32 0x01 /* 32-bit registers. */#define MIPS_AFL_REG_64 0x02 /* 64-bit registers. */#define MIPS_AFL_REG_128 0x03 /* 128-bit registers. *//* Masks for the ases word of an ABI flags structure. */#define MIPS_AFL_ASE_DSP 0x00000001 /* DSP ASE. */#define MIPS_AFL_ASE_DSPR2 0x00000002 /* DSP R2 ASE. */#define MIPS_AFL_ASE_EVA 0x00000004 /* Enhanced VA Scheme. */#define MIPS_AFL_ASE_MCU 0x00000008 /* MCU (MicroController) ASE. */#define MIPS_AFL_ASE_MDMX 0x00000010 /* MDMX ASE. */#define MIPS_AFL_ASE_MIPS3D 0x00000020 /* MIPS-3D ASE. */#define MIPS_AFL_ASE_MT 0x00000040 /* MT ASE. */#define MIPS_AFL_ASE_SMARTMIPS 0x00000080 /* SmartMIPS ASE. */#define MIPS_AFL_ASE_VIRT 0x00000100 /* VZ ASE. */#define MIPS_AFL_ASE_MSA 0x00000200 /* MSA ASE. */#define MIPS_AFL_ASE_MIPS16 0x00000400 /* MIPS16 ASE. */#define MIPS_AFL_ASE_MICROMIPS 0x00000800 /* MICROMIPS ASE. */#define MIPS_AFL_ASE_XPA 0x00001000 /* XPA ASE. */#define MIPS_AFL_ASE_MASK 0x00001fff /* All ASEs. *//* Values for the isa_ext word of an ABI flags structure. */#define MIPS_AFL_EXT_XLR 1 /* RMI Xlr instruction. */#define MIPS_AFL_EXT_OCTEON2 2 /* Cavium Networks Octeon2. */#define MIPS_AFL_EXT_OCTEONP 3 /* Cavium Networks OcteonP. */#define MIPS_AFL_EXT_LOONGSON_3A 4 /* Loongson 3A. */#define MIPS_AFL_EXT_OCTEON 5 /* Cavium Networks Octeon. */#define MIPS_AFL_EXT_5900 6 /* MIPS R5900 instruction. */#define MIPS_AFL_EXT_4650 7 /* MIPS R4650 instruction. */#define MIPS_AFL_EXT_4010 8 /* LSI R4010 instruction. */#define MIPS_AFL_EXT_4100 9 /* NEC VR4100 instruction. */#define MIPS_AFL_EXT_3900 10 /* Toshiba R3900 instruction. */#define MIPS_AFL_EXT_10000 11 /* MIPS R10000 instruction. */#define MIPS_AFL_EXT_SB1 12 /* Broadcom SB-1 instruction. */#define MIPS_AFL_EXT_4111 13 /* NEC VR4111/VR4181 instruction. */#define MIPS_AFL_EXT_4120 14 /* NEC VR4120 instruction. */#define MIPS_AFL_EXT_5400 15 /* NEC VR5400 instruction. */#define MIPS_AFL_EXT_5500 16 /* NEC VR5500 instruction. */#define MIPS_AFL_EXT_LOONGSON_2E 17 /* ST Microelectronics Loongson 2E. */#define MIPS_AFL_EXT_LOONGSON_2F 18 /* ST Microelectronics Loongson 2F. *//* Masks for the flags1 word of an ABI flags structure. */#define MIPS_AFL_FLAGS1_ODDSPREG 1 /* Uses odd single-precision registers. *//* Object attribute values. */enum&#123; /* Not tagged or not using any ABIs affected by the differences. */ Val_GNU_MIPS_ABI_FP_ANY = 0, /* Using hard-float -mdouble-float. */ Val_GNU_MIPS_ABI_FP_DOUBLE = 1, /* Using hard-float -msingle-float. */ Val_GNU_MIPS_ABI_FP_SINGLE = 2, /* Using soft-float. */ Val_GNU_MIPS_ABI_FP_SOFT = 3, /* Using -mips32r2 -mfp64. */ Val_GNU_MIPS_ABI_FP_OLD_64 = 4, /* Using -mfpxx. */ Val_GNU_MIPS_ABI_FP_XX = 5, /* Using -mips32r2 -mfp64. */ Val_GNU_MIPS_ABI_FP_64 = 6, /* Using -mips32r2 -mfp64 -mno-odd-spreg. */ Val_GNU_MIPS_ABI_FP_64A = 7, /* Maximum allocated FP ABI value. */ Val_GNU_MIPS_ABI_FP_MAX = 7&#125;;/* HPPA specific definitions. *//* Legal values for e_flags field of Elf32_Ehdr. */#define EF_PARISC_TRAPNIL 0x00010000 /* Trap nil pointer dereference. */#define EF_PARISC_EXT 0x00020000 /* Program uses arch. extensions. */#define EF_PARISC_LSB 0x00040000 /* Program expects little endian. */#define EF_PARISC_WIDE 0x00080000 /* Program expects wide mode. */#define EF_PARISC_NO_KABP 0x00100000 /* No kernel assisted branch prediction. */#define EF_PARISC_LAZYSWAP 0x00400000 /* Allow lazy swapping. */#define EF_PARISC_ARCH 0x0000ffff /* Architecture version. *//* Defined values for `e_flags &amp; EF_PARISC_ARCH' are: */#define EFA_PARISC_1_0 0x020b /* PA-RISC 1.0 big-endian. */#define EFA_PARISC_1_1 0x0210 /* PA-RISC 1.1 big-endian. */#define EFA_PARISC_2_0 0x0214 /* PA-RISC 2.0 big-endian. *//* Additional section indeces. */#define SHN_PARISC_ANSI_COMMON 0xff00 /* Section for tenatively declared symbols in ANSI C. */#define SHN_PARISC_HUGE_COMMON 0xff01 /* Common blocks in huge model. *//* Legal values for sh_type field of Elf32_Shdr. */#define SHT_PARISC_EXT 0x70000000 /* Contains product specific ext. */#define SHT_PARISC_UNWIND 0x70000001 /* Unwind information. */#define SHT_PARISC_DOC 0x70000002 /* Debug info for optimized code. *//* Legal values for sh_flags field of Elf32_Shdr. */#define SHF_PARISC_SHORT 0x20000000 /* Section with short addressing. */#define SHF_PARISC_HUGE 0x40000000 /* Section far from gp. */#define SHF_PARISC_SBP 0x80000000 /* Static branch prediction code. *//* Legal values for ST_TYPE subfield of st_info (symbol type). */#define STT_PARISC_MILLICODE 13 /* Millicode function entry point. */#define STT_HP_OPAQUE (STT_LOOS + 0x1)#define STT_HP_STUB (STT_LOOS + 0x2)/* HPPA relocs. */#define R_PARISC_NONE 0 /* No reloc. */#define R_PARISC_DIR32 1 /* Direct 32-bit reference. */#define R_PARISC_DIR21L 2 /* Left 21 bits of eff. address. */#define R_PARISC_DIR17R 3 /* Right 17 bits of eff. address. */#define R_PARISC_DIR17F 4 /* 17 bits of eff. address. */#define R_PARISC_DIR14R 6 /* Right 14 bits of eff. address. */#define R_PARISC_PCREL32 9 /* 32-bit rel. address. */#define R_PARISC_PCREL21L 10 /* Left 21 bits of rel. address. */#define R_PARISC_PCREL17R 11 /* Right 17 bits of rel. address. */#define R_PARISC_PCREL17F 12 /* 17 bits of rel. address. */#define R_PARISC_PCREL14R 14 /* Right 14 bits of rel. address. */#define R_PARISC_DPREL21L 18 /* Left 21 bits of rel. address. */#define R_PARISC_DPREL14R 22 /* Right 14 bits of rel. address. */#define R_PARISC_GPREL21L 26 /* GP-relative, left 21 bits. */#define R_PARISC_GPREL14R 30 /* GP-relative, right 14 bits. */#define R_PARISC_LTOFF21L 34 /* LT-relative, left 21 bits. */#define R_PARISC_LTOFF14R 38 /* LT-relative, right 14 bits. */#define R_PARISC_SECREL32 41 /* 32 bits section rel. address. */#define R_PARISC_SEGBASE 48 /* No relocation, set segment base. */#define R_PARISC_SEGREL32 49 /* 32 bits segment rel. address. */#define R_PARISC_PLTOFF21L 50 /* PLT rel. address, left 21 bits. */#define R_PARISC_PLTOFF14R 54 /* PLT rel. address, right 14 bits. */#define R_PARISC_LTOFF_FPTR32 57 /* 32 bits LT-rel. function pointer. */#define R_PARISC_LTOFF_FPTR21L 58 /* LT-rel. fct ptr, left 21 bits. */#define R_PARISC_LTOFF_FPTR14R 62 /* LT-rel. fct ptr, right 14 bits. */#define R_PARISC_FPTR64 64 /* 64 bits function address. */#define R_PARISC_PLABEL32 65 /* 32 bits function address. */#define R_PARISC_PLABEL21L 66 /* Left 21 bits of fdesc address. */#define R_PARISC_PLABEL14R 70 /* Right 14 bits of fdesc address. */#define R_PARISC_PCREL64 72 /* 64 bits PC-rel. address. */#define R_PARISC_PCREL22F 74 /* 22 bits PC-rel. address. */#define R_PARISC_PCREL14WR 75 /* PC-rel. address, right 14 bits. */#define R_PARISC_PCREL14DR 76 /* PC rel. address, right 14 bits. */#define R_PARISC_PCREL16F 77 /* 16 bits PC-rel. address. */#define R_PARISC_PCREL16WF 78 /* 16 bits PC-rel. address. */#define R_PARISC_PCREL16DF 79 /* 16 bits PC-rel. address. */#define R_PARISC_DIR64 80 /* 64 bits of eff. address. */#define R_PARISC_DIR14WR 83 /* 14 bits of eff. address. */#define R_PARISC_DIR14DR 84 /* 14 bits of eff. address. */#define R_PARISC_DIR16F 85 /* 16 bits of eff. address. */#define R_PARISC_DIR16WF 86 /* 16 bits of eff. address. */#define R_PARISC_DIR16DF 87 /* 16 bits of eff. address. */#define R_PARISC_GPREL64 88 /* 64 bits of GP-rel. address. */#define R_PARISC_GPREL14WR 91 /* GP-rel. address, right 14 bits. */#define R_PARISC_GPREL14DR 92 /* GP-rel. address, right 14 bits. */#define R_PARISC_GPREL16F 93 /* 16 bits GP-rel. address. */#define R_PARISC_GPREL16WF 94 /* 16 bits GP-rel. address. */#define R_PARISC_GPREL16DF 95 /* 16 bits GP-rel. address. */#define R_PARISC_LTOFF64 96 /* 64 bits LT-rel. address. */#define R_PARISC_LTOFF14WR 99 /* LT-rel. address, right 14 bits. */#define R_PARISC_LTOFF14DR 100 /* LT-rel. address, right 14 bits. */#define R_PARISC_LTOFF16F 101 /* 16 bits LT-rel. address. */#define R_PARISC_LTOFF16WF 102 /* 16 bits LT-rel. address. */#define R_PARISC_LTOFF16DF 103 /* 16 bits LT-rel. address. */#define R_PARISC_SECREL64 104 /* 64 bits section rel. address. */#define R_PARISC_SEGREL64 112 /* 64 bits segment rel. address. */#define R_PARISC_PLTOFF14WR 115 /* PLT-rel. address, right 14 bits. */#define R_PARISC_PLTOFF14DR 116 /* PLT-rel. address, right 14 bits. */#define R_PARISC_PLTOFF16F 117 /* 16 bits LT-rel. address. */#define R_PARISC_PLTOFF16WF 118 /* 16 bits PLT-rel. address. */#define R_PARISC_PLTOFF16DF 119 /* 16 bits PLT-rel. address. */#define R_PARISC_LTOFF_FPTR64 120 /* 64 bits LT-rel. function ptr. */#define R_PARISC_LTOFF_FPTR14WR 123 /* LT-rel. fct. ptr., right 14 bits. */#define R_PARISC_LTOFF_FPTR14DR 124 /* LT-rel. fct. ptr., right 14 bits. */#define R_PARISC_LTOFF_FPTR16F 125 /* 16 bits LT-rel. function ptr. */#define R_PARISC_LTOFF_FPTR16WF 126 /* 16 bits LT-rel. function ptr. */#define R_PARISC_LTOFF_FPTR16DF 127 /* 16 bits LT-rel. function ptr. */#define R_PARISC_LORESERVE 128#define R_PARISC_COPY 128 /* Copy relocation. */#define R_PARISC_IPLT 129 /* Dynamic reloc, imported PLT */#define R_PARISC_EPLT 130 /* Dynamic reloc, exported PLT */#define R_PARISC_TPREL32 153 /* 32 bits TP-rel. address. */#define R_PARISC_TPREL21L 154 /* TP-rel. address, left 21 bits. */#define R_PARISC_TPREL14R 158 /* TP-rel. address, right 14 bits. */#define R_PARISC_LTOFF_TP21L 162 /* LT-TP-rel. address, left 21 bits. */#define R_PARISC_LTOFF_TP14R 166 /* LT-TP-rel. address, right 14 bits.*/#define R_PARISC_LTOFF_TP14F 167 /* 14 bits LT-TP-rel. address. */#define R_PARISC_TPREL64 216 /* 64 bits TP-rel. address. */#define R_PARISC_TPREL14WR 219 /* TP-rel. address, right 14 bits. */#define R_PARISC_TPREL14DR 220 /* TP-rel. address, right 14 bits. */#define R_PARISC_TPREL16F 221 /* 16 bits TP-rel. address. */#define R_PARISC_TPREL16WF 222 /* 16 bits TP-rel. address. */#define R_PARISC_TPREL16DF 223 /* 16 bits TP-rel. address. */#define R_PARISC_LTOFF_TP64 224 /* 64 bits LT-TP-rel. address. */#define R_PARISC_LTOFF_TP14WR 227 /* LT-TP-rel. address, right 14 bits.*/#define R_PARISC_LTOFF_TP14DR 228 /* LT-TP-rel. address, right 14 bits.*/#define R_PARISC_LTOFF_TP16F 229 /* 16 bits LT-TP-rel. address. */#define R_PARISC_LTOFF_TP16WF 230 /* 16 bits LT-TP-rel. address. */#define R_PARISC_LTOFF_TP16DF 231 /* 16 bits LT-TP-rel. address. */#define R_PARISC_GNU_VTENTRY 232#define R_PARISC_GNU_VTINHERIT 233#define R_PARISC_TLS_GD21L 234 /* GD 21-bit left. */#define R_PARISC_TLS_GD14R 235 /* GD 14-bit right. */#define R_PARISC_TLS_GDCALL 236 /* GD call to __t_g_a. */#define R_PARISC_TLS_LDM21L 237 /* LD module 21-bit left. */#define R_PARISC_TLS_LDM14R 238 /* LD module 14-bit right. */#define R_PARISC_TLS_LDMCALL 239 /* LD module call to __t_g_a. */#define R_PARISC_TLS_LDO21L 240 /* LD offset 21-bit left. */#define R_PARISC_TLS_LDO14R 241 /* LD offset 14-bit right. */#define R_PARISC_TLS_DTPMOD32 242 /* DTP module 32-bit. */#define R_PARISC_TLS_DTPMOD64 243 /* DTP module 64-bit. */#define R_PARISC_TLS_DTPOFF32 244 /* DTP offset 32-bit. */#define R_PARISC_TLS_DTPOFF64 245 /* DTP offset 32-bit. */#define R_PARISC_TLS_LE21L R_PARISC_TPREL21L#define R_PARISC_TLS_LE14R R_PARISC_TPREL14R#define R_PARISC_TLS_IE21L R_PARISC_LTOFF_TP21L#define R_PARISC_TLS_IE14R R_PARISC_LTOFF_TP14R#define R_PARISC_TLS_TPREL32 R_PARISC_TPREL32#define R_PARISC_TLS_TPREL64 R_PARISC_TPREL64#define R_PARISC_HIRESERVE 255/* Legal values for p_type field of Elf32_Phdr/Elf64_Phdr. */#define PT_HP_TLS (PT_LOOS + 0x0)#define PT_HP_CORE_NONE (PT_LOOS + 0x1)#define PT_HP_CORE_VERSION (PT_LOOS + 0x2)#define PT_HP_CORE_KERNEL (PT_LOOS + 0x3)#define PT_HP_CORE_COMM (PT_LOOS + 0x4)#define PT_HP_CORE_PROC (PT_LOOS + 0x5)#define PT_HP_CORE_LOADABLE (PT_LOOS + 0x6)#define PT_HP_CORE_STACK (PT_LOOS + 0x7)#define PT_HP_CORE_SHM (PT_LOOS + 0x8)#define PT_HP_CORE_MMF (PT_LOOS + 0x9)#define PT_HP_PARALLEL (PT_LOOS + 0x10)#define PT_HP_FASTBIND (PT_LOOS + 0x11)#define PT_HP_OPT_ANNOT (PT_LOOS + 0x12)#define PT_HP_HSL_ANNOT (PT_LOOS + 0x13)#define PT_HP_STACK (PT_LOOS + 0x14)#define PT_PARISC_ARCHEXT 0x70000000#define PT_PARISC_UNWIND 0x70000001/* Legal values for p_flags field of Elf32_Phdr/Elf64_Phdr. */#define PF_PARISC_SBP 0x08000000#define PF_HP_PAGE_SIZE 0x00100000#define PF_HP_FAR_SHARED 0x00200000#define PF_HP_NEAR_SHARED 0x00400000#define PF_HP_CODE 0x01000000#define PF_HP_MODIFY 0x02000000#define PF_HP_LAZYSWAP 0x04000000#define PF_HP_SBP 0x08000000/* Alpha specific definitions. *//* Legal values for e_flags field of Elf64_Ehdr. */#define EF_ALPHA_32BIT 1 /* All addresses must be &lt; 2GB. */#define EF_ALPHA_CANRELAX 2 /* Relocations for relaxing exist. *//* Legal values for sh_type field of Elf64_Shdr. *//* These two are primerily concerned with ECOFF debugging info. */#define SHT_ALPHA_DEBUG 0x70000001#define SHT_ALPHA_REGINFO 0x70000002/* Legal values for sh_flags field of Elf64_Shdr. */#define SHF_ALPHA_GPREL 0x10000000/* Legal values for st_other field of Elf64_Sym. */#define STO_ALPHA_NOPV 0x80 /* No PV required. */#define STO_ALPHA_STD_GPLOAD 0x88 /* PV only used for initial ldgp. *//* Alpha relocs. */#define R_ALPHA_NONE 0 /* No reloc */#define R_ALPHA_REFLONG 1 /* Direct 32 bit */#define R_ALPHA_REFQUAD 2 /* Direct 64 bit */#define R_ALPHA_GPREL32 3 /* GP relative 32 bit */#define R_ALPHA_LITERAL 4 /* GP relative 16 bit w/optimization */#define R_ALPHA_LITUSE 5 /* Optimization hint for LITERAL */#define R_ALPHA_GPDISP 6 /* Add displacement to GP */#define R_ALPHA_BRADDR 7 /* PC+4 relative 23 bit shifted */#define R_ALPHA_HINT 8 /* PC+4 relative 16 bit shifted */#define R_ALPHA_SREL16 9 /* PC relative 16 bit */#define R_ALPHA_SREL32 10 /* PC relative 32 bit */#define R_ALPHA_SREL64 11 /* PC relative 64 bit */#define R_ALPHA_GPRELHIGH 17 /* GP relative 32 bit, high 16 bits */#define R_ALPHA_GPRELLOW 18 /* GP relative 32 bit, low 16 bits */#define R_ALPHA_GPREL16 19 /* GP relative 16 bit */#define R_ALPHA_COPY 24 /* Copy symbol at runtime */#define R_ALPHA_GLOB_DAT 25 /* Create GOT entry */#define R_ALPHA_JMP_SLOT 26 /* Create PLT entry */#define R_ALPHA_RELATIVE 27 /* Adjust by program base */#define R_ALPHA_TLS_GD_HI 28#define R_ALPHA_TLSGD 29#define R_ALPHA_TLS_LDM 30#define R_ALPHA_DTPMOD64 31#define R_ALPHA_GOTDTPREL 32#define R_ALPHA_DTPREL64 33#define R_ALPHA_DTPRELHI 34#define R_ALPHA_DTPRELLO 35#define R_ALPHA_DTPREL16 36#define R_ALPHA_GOTTPREL 37#define R_ALPHA_TPREL64 38#define R_ALPHA_TPRELHI 39#define R_ALPHA_TPRELLO 40#define R_ALPHA_TPREL16 41/* Keep this the last entry. */#define R_ALPHA_NUM 46/* Magic values of the LITUSE relocation addend. */#define LITUSE_ALPHA_ADDR 0#define LITUSE_ALPHA_BASE 1#define LITUSE_ALPHA_BYTOFF 2#define LITUSE_ALPHA_JSR 3#define LITUSE_ALPHA_TLS_GD 4#define LITUSE_ALPHA_TLS_LDM 5/* Legal values for d_tag of Elf64_Dyn. */#define DT_ALPHA_PLTRO (DT_LOPROC + 0)#define DT_ALPHA_NUM 1/* PowerPC specific declarations *//* Values for Elf32/64_Ehdr.e_flags. */#define EF_PPC_EMB 0x80000000 /* PowerPC embedded flag *//* Cygnus local bits below */#define EF_PPC_RELOCATABLE 0x00010000 /* PowerPC -mrelocatable flag*/#define EF_PPC_RELOCATABLE_LIB 0x00008000 /* PowerPC -mrelocatable-lib flag *//* PowerPC relocations defined by the ABIs */#define R_PPC_NONE 0#define R_PPC_ADDR32 1 /* 32bit absolute address */#define R_PPC_ADDR24 2 /* 26bit address, 2 bits ignored. */#define R_PPC_ADDR16 3 /* 16bit absolute address */#define R_PPC_ADDR16_LO 4 /* lower 16bit of absolute address */#define R_PPC_ADDR16_HI 5 /* high 16bit of absolute address */#define R_PPC_ADDR16_HA 6 /* adjusted high 16bit */#define R_PPC_ADDR14 7 /* 16bit address, 2 bits ignored */#define R_PPC_ADDR14_BRTAKEN 8#define R_PPC_ADDR14_BRNTAKEN 9#define R_PPC_REL24 10 /* PC relative 26 bit */#define R_PPC_REL14 11 /* PC relative 16 bit */#define R_PPC_REL14_BRTAKEN 12#define R_PPC_REL14_BRNTAKEN 13#define R_PPC_GOT16 14#define R_PPC_GOT16_LO 15#define R_PPC_GOT16_HI 16#define R_PPC_GOT16_HA 17#define R_PPC_PLTREL24 18#define R_PPC_COPY 19#define R_PPC_GLOB_DAT 20#define R_PPC_JMP_SLOT 21#define R_PPC_RELATIVE 22#define R_PPC_LOCAL24PC 23#define R_PPC_UADDR32 24#define R_PPC_UADDR16 25#define R_PPC_REL32 26#define R_PPC_PLT32 27#define R_PPC_PLTREL32 28#define R_PPC_PLT16_LO 29#define R_PPC_PLT16_HI 30#define R_PPC_PLT16_HA 31#define R_PPC_SDAREL16 32#define R_PPC_SECTOFF 33#define R_PPC_SECTOFF_LO 34#define R_PPC_SECTOFF_HI 35#define R_PPC_SECTOFF_HA 36/* PowerPC relocations defined for the TLS access ABI. */#define R_PPC_TLS 67 /* none (sym+add)@tls */#define R_PPC_DTPMOD32 68 /* word32 (sym+add)@dtpmod */#define R_PPC_TPREL16 69 /* half16* (sym+add)@tprel */#define R_PPC_TPREL16_LO 70 /* half16 (sym+add)@tprel@l */#define R_PPC_TPREL16_HI 71 /* half16 (sym+add)@tprel@h */#define R_PPC_TPREL16_HA 72 /* half16 (sym+add)@tprel@ha */#define R_PPC_TPREL32 73 /* word32 (sym+add)@tprel */#define R_PPC_DTPREL16 74 /* half16* (sym+add)@dtprel */#define R_PPC_DTPREL16_LO 75 /* half16 (sym+add)@dtprel@l */#define R_PPC_DTPREL16_HI 76 /* half16 (sym+add)@dtprel@h */#define R_PPC_DTPREL16_HA 77 /* half16 (sym+add)@dtprel@ha */#define R_PPC_DTPREL32 78 /* word32 (sym+add)@dtprel */#define R_PPC_GOT_TLSGD16 79 /* half16* (sym+add)@got@tlsgd */#define R_PPC_GOT_TLSGD16_LO 80 /* half16 (sym+add)@got@tlsgd@l */#define R_PPC_GOT_TLSGD16_HI 81 /* half16 (sym+add)@got@tlsgd@h */#define R_PPC_GOT_TLSGD16_HA 82 /* half16 (sym+add)@got@tlsgd@ha */#define R_PPC_GOT_TLSLD16 83 /* half16* (sym+add)@got@tlsld */#define R_PPC_GOT_TLSLD16_LO 84 /* half16 (sym+add)@got@tlsld@l */#define R_PPC_GOT_TLSLD16_HI 85 /* half16 (sym+add)@got@tlsld@h */#define R_PPC_GOT_TLSLD16_HA 86 /* half16 (sym+add)@got@tlsld@ha */#define R_PPC_GOT_TPREL16 87 /* half16* (sym+add)@got@tprel */#define R_PPC_GOT_TPREL16_LO 88 /* half16 (sym+add)@got@tprel@l */#define R_PPC_GOT_TPREL16_HI 89 /* half16 (sym+add)@got@tprel@h */#define R_PPC_GOT_TPREL16_HA 90 /* half16 (sym+add)@got@tprel@ha */#define R_PPC_GOT_DTPREL16 91 /* half16* (sym+add)@got@dtprel */#define R_PPC_GOT_DTPREL16_LO 92 /* half16* (sym+add)@got@dtprel@l */#define R_PPC_GOT_DTPREL16_HI 93 /* half16* (sym+add)@got@dtprel@h */#define R_PPC_GOT_DTPREL16_HA 94 /* half16* (sym+add)@got@dtprel@ha */#define R_PPC_TLSGD 95 /* none (sym+add)@tlsgd */#define R_PPC_TLSLD 96 /* none (sym+add)@tlsld *//* The remaining relocs are from the Embedded ELF ABI, and are not in the SVR4 ELF ABI. */#define R_PPC_EMB_NADDR32 101#define R_PPC_EMB_NADDR16 102#define R_PPC_EMB_NADDR16_LO 103#define R_PPC_EMB_NADDR16_HI 104#define R_PPC_EMB_NADDR16_HA 105#define R_PPC_EMB_SDAI16 106#define R_PPC_EMB_SDA2I16 107#define R_PPC_EMB_SDA2REL 108#define R_PPC_EMB_SDA21 109 /* 16 bit offset in SDA */#define R_PPC_EMB_MRKREF 110#define R_PPC_EMB_RELSEC16 111#define R_PPC_EMB_RELST_LO 112#define R_PPC_EMB_RELST_HI 113#define R_PPC_EMB_RELST_HA 114#define R_PPC_EMB_BIT_FLD 115#define R_PPC_EMB_RELSDA 116 /* 16 bit relative offset in SDA *//* Diab tool relocations. */#define R_PPC_DIAB_SDA21_LO 180 /* like EMB_SDA21, but lower 16 bit */#define R_PPC_DIAB_SDA21_HI 181 /* like EMB_SDA21, but high 16 bit */#define R_PPC_DIAB_SDA21_HA 182 /* like EMB_SDA21, adjusted high 16 */#define R_PPC_DIAB_RELSDA_LO 183 /* like EMB_RELSDA, but lower 16 bit */#define R_PPC_DIAB_RELSDA_HI 184 /* like EMB_RELSDA, but high 16 bit */#define R_PPC_DIAB_RELSDA_HA 185 /* like EMB_RELSDA, adjusted high 16 *//* GNU extension to support local ifunc. */#define R_PPC_IRELATIVE 248/* GNU relocs used in PIC code sequences. */#define R_PPC_REL16 249 /* half16 (sym+add-.) */#define R_PPC_REL16_LO 250 /* half16 (sym+add-.)@l */#define R_PPC_REL16_HI 251 /* half16 (sym+add-.)@h */#define R_PPC_REL16_HA 252 /* half16 (sym+add-.)@ha *//* This is a phony reloc to handle any old fashioned TOC16 references that may still be in object files. */#define R_PPC_TOC16 255/* PowerPC specific values for the Dyn d_tag field. */#define DT_PPC_GOT (DT_LOPROC + 0)#define DT_PPC_OPT (DT_LOPROC + 1)#define DT_PPC_NUM 2/* PowerPC specific values for the DT_PPC_OPT Dyn entry. */#define PPC_OPT_TLS 1/* PowerPC64 relocations defined by the ABIs */#define R_PPC64_NONE R_PPC_NONE#define R_PPC64_ADDR32 R_PPC_ADDR32 /* 32bit absolute address */#define R_PPC64_ADDR24 R_PPC_ADDR24 /* 26bit address, word aligned */#define R_PPC64_ADDR16 R_PPC_ADDR16 /* 16bit absolute address */#define R_PPC64_ADDR16_LO R_PPC_ADDR16_LO /* lower 16bits of address */#define R_PPC64_ADDR16_HI R_PPC_ADDR16_HI /* high 16bits of address. */#define R_PPC64_ADDR16_HA R_PPC_ADDR16_HA /* adjusted high 16bits. */#define R_PPC64_ADDR14 R_PPC_ADDR14 /* 16bit address, word aligned */#define R_PPC64_ADDR14_BRTAKEN R_PPC_ADDR14_BRTAKEN#define R_PPC64_ADDR14_BRNTAKEN R_PPC_ADDR14_BRNTAKEN#define R_PPC64_REL24 R_PPC_REL24 /* PC-rel. 26 bit, word aligned */#define R_PPC64_REL14 R_PPC_REL14 /* PC relative 16 bit */#define R_PPC64_REL14_BRTAKEN R_PPC_REL14_BRTAKEN#define R_PPC64_REL14_BRNTAKEN R_PPC_REL14_BRNTAKEN#define R_PPC64_GOT16 R_PPC_GOT16#define R_PPC64_GOT16_LO R_PPC_GOT16_LO#define R_PPC64_GOT16_HI R_PPC_GOT16_HI#define R_PPC64_GOT16_HA R_PPC_GOT16_HA#define R_PPC64_COPY R_PPC_COPY#define R_PPC64_GLOB_DAT R_PPC_GLOB_DAT#define R_PPC64_JMP_SLOT R_PPC_JMP_SLOT#define R_PPC64_RELATIVE R_PPC_RELATIVE#define R_PPC64_UADDR32 R_PPC_UADDR32#define R_PPC64_UADDR16 R_PPC_UADDR16#define R_PPC64_REL32 R_PPC_REL32#define R_PPC64_PLT32 R_PPC_PLT32#define R_PPC64_PLTREL32 R_PPC_PLTREL32#define R_PPC64_PLT16_LO R_PPC_PLT16_LO#define R_PPC64_PLT16_HI R_PPC_PLT16_HI#define R_PPC64_PLT16_HA R_PPC_PLT16_HA#define R_PPC64_SECTOFF R_PPC_SECTOFF#define R_PPC64_SECTOFF_LO R_PPC_SECTOFF_LO#define R_PPC64_SECTOFF_HI R_PPC_SECTOFF_HI#define R_PPC64_SECTOFF_HA R_PPC_SECTOFF_HA#define R_PPC64_ADDR30 37 /* word30 (S + A - P) &gt;&gt; 2 */#define R_PPC64_ADDR64 38 /* doubleword64 S + A */#define R_PPC64_ADDR16_HIGHER 39 /* half16 #higher(S + A) */#define R_PPC64_ADDR16_HIGHERA 40 /* half16 #highera(S + A) */#define R_PPC64_ADDR16_HIGHEST 41 /* half16 #highest(S + A) */#define R_PPC64_ADDR16_HIGHESTA 42 /* half16 #highesta(S + A) */#define R_PPC64_UADDR64 43 /* doubleword64 S + A */#define R_PPC64_REL64 44 /* doubleword64 S + A - P */#define R_PPC64_PLT64 45 /* doubleword64 L + A */#define R_PPC64_PLTREL64 46 /* doubleword64 L + A - P */#define R_PPC64_TOC16 47 /* half16* S + A - .TOC */#define R_PPC64_TOC16_LO 48 /* half16 #lo(S + A - .TOC.) */#define R_PPC64_TOC16_HI 49 /* half16 #hi(S + A - .TOC.) */#define R_PPC64_TOC16_HA 50 /* half16 #ha(S + A - .TOC.) */#define R_PPC64_TOC 51 /* doubleword64 .TOC */#define R_PPC64_PLTGOT16 52 /* half16* M + A */#define R_PPC64_PLTGOT16_LO 53 /* half16 #lo(M + A) */#define R_PPC64_PLTGOT16_HI 54 /* half16 #hi(M + A) */#define R_PPC64_PLTGOT16_HA 55 /* half16 #ha(M + A) */#define R_PPC64_ADDR16_DS 56 /* half16ds* (S + A) &gt;&gt; 2 */#define R_PPC64_ADDR16_LO_DS 57 /* half16ds #lo(S + A) &gt;&gt; 2 */#define R_PPC64_GOT16_DS 58 /* half16ds* (G + A) &gt;&gt; 2 */#define R_PPC64_GOT16_LO_DS 59 /* half16ds #lo(G + A) &gt;&gt; 2 */#define R_PPC64_PLT16_LO_DS 60 /* half16ds #lo(L + A) &gt;&gt; 2 */#define R_PPC64_SECTOFF_DS 61 /* half16ds* (R + A) &gt;&gt; 2 */#define R_PPC64_SECTOFF_LO_DS 62 /* half16ds #lo(R + A) &gt;&gt; 2 */#define R_PPC64_TOC16_DS 63 /* half16ds* (S + A - .TOC.) &gt;&gt; 2 */#define R_PPC64_TOC16_LO_DS 64 /* half16ds #lo(S + A - .TOC.) &gt;&gt; 2 */#define R_PPC64_PLTGOT16_DS 65 /* half16ds* (M + A) &gt;&gt; 2 */#define R_PPC64_PLTGOT16_LO_DS 66 /* half16ds #lo(M + A) &gt;&gt; 2 *//* PowerPC64 relocations defined for the TLS access ABI. */#define R_PPC64_TLS 67 /* none (sym+add)@tls */#define R_PPC64_DTPMOD64 68 /* doubleword64 (sym+add)@dtpmod */#define R_PPC64_TPREL16 69 /* half16* (sym+add)@tprel */#define R_PPC64_TPREL16_LO 70 /* half16 (sym+add)@tprel@l */#define R_PPC64_TPREL16_HI 71 /* half16 (sym+add)@tprel@h */#define R_PPC64_TPREL16_HA 72 /* half16 (sym+add)@tprel@ha */#define R_PPC64_TPREL64 73 /* doubleword64 (sym+add)@tprel */#define R_PPC64_DTPREL16 74 /* half16* (sym+add)@dtprel */#define R_PPC64_DTPREL16_LO 75 /* half16 (sym+add)@dtprel@l */#define R_PPC64_DTPREL16_HI 76 /* half16 (sym+add)@dtprel@h */#define R_PPC64_DTPREL16_HA 77 /* half16 (sym+add)@dtprel@ha */#define R_PPC64_DTPREL64 78 /* doubleword64 (sym+add)@dtprel */#define R_PPC64_GOT_TLSGD16 79 /* half16* (sym+add)@got@tlsgd */#define R_PPC64_GOT_TLSGD16_LO 80 /* half16 (sym+add)@got@tlsgd@l */#define R_PPC64_GOT_TLSGD16_HI 81 /* half16 (sym+add)@got@tlsgd@h */#define R_PPC64_GOT_TLSGD16_HA 82 /* half16 (sym+add)@got@tlsgd@ha */#define R_PPC64_GOT_TLSLD16 83 /* half16* (sym+add)@got@tlsld */#define R_PPC64_GOT_TLSLD16_LO 84 /* half16 (sym+add)@got@tlsld@l */#define R_PPC64_GOT_TLSLD16_HI 85 /* half16 (sym+add)@got@tlsld@h */#define R_PPC64_GOT_TLSLD16_HA 86 /* half16 (sym+add)@got@tlsld@ha */#define R_PPC64_GOT_TPREL16_DS 87 /* half16ds* (sym+add)@got@tprel */#define R_PPC64_GOT_TPREL16_LO_DS 88 /* half16ds (sym+add)@got@tprel@l */#define R_PPC64_GOT_TPREL16_HI 89 /* half16 (sym+add)@got@tprel@h */#define R_PPC64_GOT_TPREL16_HA 90 /* half16 (sym+add)@got@tprel@ha */#define R_PPC64_GOT_DTPREL16_DS 91 /* half16ds* (sym+add)@got@dtprel */#define R_PPC64_GOT_DTPREL16_LO_DS 92 /* half16ds (sym+add)@got@dtprel@l */#define R_PPC64_GOT_DTPREL16_HI 93 /* half16 (sym+add)@got@dtprel@h */#define R_PPC64_GOT_DTPREL16_HA 94 /* half16 (sym+add)@got@dtprel@ha */#define R_PPC64_TPREL16_DS 95 /* half16ds* (sym+add)@tprel */#define R_PPC64_TPREL16_LO_DS 96 /* half16ds (sym+add)@tprel@l */#define R_PPC64_TPREL16_HIGHER 97 /* half16 (sym+add)@tprel@higher */#define R_PPC64_TPREL16_HIGHERA 98 /* half16 (sym+add)@tprel@highera */#define R_PPC64_TPREL16_HIGHEST 99 /* half16 (sym+add)@tprel@highest */#define R_PPC64_TPREL16_HIGHESTA 100 /* half16 (sym+add)@tprel@highesta */#define R_PPC64_DTPREL16_DS 101 /* half16ds* (sym+add)@dtprel */#define R_PPC64_DTPREL16_LO_DS 102 /* half16ds (sym+add)@dtprel@l */#define R_PPC64_DTPREL16_HIGHER 103 /* half16 (sym+add)@dtprel@higher */#define R_PPC64_DTPREL16_HIGHERA 104 /* half16 (sym+add)@dtprel@highera */#define R_PPC64_DTPREL16_HIGHEST 105 /* half16 (sym+add)@dtprel@highest */#define R_PPC64_DTPREL16_HIGHESTA 106 /* half16 (sym+add)@dtprel@highesta */#define R_PPC64_TLSGD 107 /* none (sym+add)@tlsgd */#define R_PPC64_TLSLD 108 /* none (sym+add)@tlsld */#define R_PPC64_TOCSAVE 109 /* none *//* Added when HA and HI relocs were changed to report overflows. */#define R_PPC64_ADDR16_HIGH 110#define R_PPC64_ADDR16_HIGHA 111#define R_PPC64_TPREL16_HIGH 112#define R_PPC64_TPREL16_HIGHA 113#define R_PPC64_DTPREL16_HIGH 114#define R_PPC64_DTPREL16_HIGHA 115/* GNU extension to support local ifunc. */#define R_PPC64_JMP_IREL 247#define R_PPC64_IRELATIVE 248#define R_PPC64_REL16 249 /* half16 (sym+add-.) */#define R_PPC64_REL16_LO 250 /* half16 (sym+add-.)@l */#define R_PPC64_REL16_HI 251 /* half16 (sym+add-.)@h */#define R_PPC64_REL16_HA 252 /* half16 (sym+add-.)@ha *//* e_flags bits specifying ABI. 1 for original function descriptor using ABI, 2 for revised ABI without function descriptors, 0 for unspecified or not using any features affected by the differences. */#define EF_PPC64_ABI 3/* PowerPC64 specific values for the Dyn d_tag field. */#define DT_PPC64_GLINK (DT_LOPROC + 0)#define DT_PPC64_OPD (DT_LOPROC + 1)#define DT_PPC64_OPDSZ (DT_LOPROC + 2)#define DT_PPC64_OPT (DT_LOPROC + 3)#define DT_PPC64_NUM 4/* PowerPC64 specific values for the DT_PPC64_OPT Dyn entry. */#define PPC64_OPT_TLS 1#define PPC64_OPT_MULTI_TOC 2/* PowerPC64 specific values for the Elf64_Sym st_other field. */#define STO_PPC64_LOCAL_BIT 5#define STO_PPC64_LOCAL_MASK (7 &lt;&lt; STO_PPC64_LOCAL_BIT)#define PPC64_LOCAL_ENTRY_OFFSET(other) \ (((1 &lt;&lt; (((other) &amp; STO_PPC64_LOCAL_MASK) &gt;&gt; STO_PPC64_LOCAL_BIT)) &gt;&gt; 2) &lt;&lt; 2)/* ARM specific declarations *//* Processor specific flags for the ELF header e_flags field. */#define EF_ARM_RELEXEC 0x01#define EF_ARM_HASENTRY 0x02#define EF_ARM_INTERWORK 0x04#define EF_ARM_APCS_26 0x08#define EF_ARM_APCS_FLOAT 0x10#define EF_ARM_PIC 0x20#define EF_ARM_ALIGN8 0x40 /* 8-bit structure alignment is in use */#define EF_ARM_NEW_ABI 0x80#define EF_ARM_OLD_ABI 0x100#define EF_ARM_SOFT_FLOAT 0x200#define EF_ARM_VFP_FLOAT 0x400#define EF_ARM_MAVERICK_FLOAT 0x800#define EF_ARM_ABI_FLOAT_SOFT 0x200 /* NB conflicts with EF_ARM_SOFT_FLOAT */#define EF_ARM_ABI_FLOAT_HARD 0x400 /* NB conflicts with EF_ARM_VFP_FLOAT *//* Other constants defined in the ARM ELF spec. version B-01. *//* NB. These conflict with values defined above. */#define EF_ARM_SYMSARESORTED 0x04#define EF_ARM_DYNSYMSUSESEGIDX 0x08#define EF_ARM_MAPSYMSFIRST 0x10#define EF_ARM_EABIMASK 0XFF000000/* Constants defined in AAELF. */#define EF_ARM_BE8 0x00800000#define EF_ARM_LE8 0x00400000#define EF_ARM_EABI_VERSION(flags) ((flags) &amp; EF_ARM_EABIMASK)#define EF_ARM_EABI_UNKNOWN 0x00000000#define EF_ARM_EABI_VER1 0x01000000#define EF_ARM_EABI_VER2 0x02000000#define EF_ARM_EABI_VER3 0x03000000#define EF_ARM_EABI_VER4 0x04000000#define EF_ARM_EABI_VER5 0x05000000/* Additional symbol types for Thumb. */#define STT_ARM_TFUNC STT_LOPROC /* A Thumb function. */#define STT_ARM_16BIT STT_HIPROC /* A Thumb label. *//* ARM-specific values for sh_flags */#define SHF_ARM_ENTRYSECT 0x10000000 /* Section contains an entry point */#define SHF_ARM_COMDEF 0x80000000 /* Section may be multiply defined in the input to a link step. *//* ARM-specific program header flags */#define PF_ARM_SB 0x10000000 /* Segment contains the location addressed by the static base. */#define PF_ARM_PI 0x20000000 /* Position-independent segment. */#define PF_ARM_ABS 0x40000000 /* Absolute segment. *//* Processor specific values for the Phdr p_type field. */#define PT_ARM_EXIDX (PT_LOPROC + 1) /* ARM unwind segment. *//* Processor specific values for the Shdr sh_type field. */#define SHT_ARM_EXIDX (SHT_LOPROC + 1) /* ARM unwind section. */#define SHT_ARM_PREEMPTMAP (SHT_LOPROC + 2) /* Preemption details. */#define SHT_ARM_ATTRIBUTES (SHT_LOPROC + 3) /* ARM attributes section. *//* AArch64 relocs. */#define R_AARCH64_NONE 0 /* No relocation. *//* ILP32 AArch64 relocs. */#define R_AARCH64_P32_ABS32 1 /* Direct 32 bit. */#define R_AARCH64_P32_COPY 180 /* Copy symbol at runtime. */#define R_AARCH64_P32_GLOB_DAT 181 /* Create GOT entry. */#define R_AARCH64_P32_JUMP_SLOT 182 /* Create PLT entry. */#define R_AARCH64_P32_RELATIVE 183 /* Adjust by program base. */#define R_AARCH64_P32_TLS_DTPMOD 184 /* Module number, 32 bit. */#define R_AARCH64_P32_TLS_DTPREL 185 /* Module-relative offset, 32 bit. */#define R_AARCH64_P32_TLS_TPREL 186 /* TP-relative offset, 32 bit. */#define R_AARCH64_P32_TLSDESC 187 /* TLS Descriptor. */#define R_AARCH64_P32_IRELATIVE 188 /* STT_GNU_IFUNC relocation. *//* LP64 AArch64 relocs. */#define R_AARCH64_ABS64 257 /* Direct 64 bit. */#define R_AARCH64_ABS32 258 /* Direct 32 bit. */#define R_AARCH64_ABS16 259 /* Direct 16-bit. */#define R_AARCH64_PREL64 260 /* PC-relative 64-bit. */#define R_AARCH64_PREL32 261 /* PC-relative 32-bit. */#define R_AARCH64_PREL16 262 /* PC-relative 16-bit. */#define R_AARCH64_MOVW_UABS_G0 263 /* Dir. MOVZ imm. from bits 15:0. */#define R_AARCH64_MOVW_UABS_G0_NC 264 /* Likewise for MOVK; no check. */#define R_AARCH64_MOVW_UABS_G1 265 /* Dir. MOVZ imm. from bits 31:16. */#define R_AARCH64_MOVW_UABS_G1_NC 266 /* Likewise for MOVK; no check. */#define R_AARCH64_MOVW_UABS_G2 267 /* Dir. MOVZ imm. from bits 47:32. */#define R_AARCH64_MOVW_UABS_G2_NC 268 /* Likewise for MOVK; no check. */#define R_AARCH64_MOVW_UABS_G3 269 /* Dir. MOV&#123;K,Z&#125; imm. from 63:48. */#define R_AARCH64_MOVW_SABS_G0 270 /* Dir. MOV&#123;N,Z&#125; imm. from 15:0. */#define R_AARCH64_MOVW_SABS_G1 271 /* Dir. MOV&#123;N,Z&#125; imm. from 31:16. */#define R_AARCH64_MOVW_SABS_G2 272 /* Dir. MOV&#123;N,Z&#125; imm. from 47:32. */#define R_AARCH64_LD_PREL_LO19 273 /* PC-rel. LD imm. from bits 20:2. */#define R_AARCH64_ADR_PREL_LO21 274 /* PC-rel. ADR imm. from bits 20:0. */#define R_AARCH64_ADR_PREL_PG_HI21 275 /* Page-rel. ADRP imm. from 32:12. */#define R_AARCH64_ADR_PREL_PG_HI21_NC 276 /* Likewise; no overflow check. */#define R_AARCH64_ADD_ABS_LO12_NC 277 /* Dir. ADD imm. from bits 11:0. */#define R_AARCH64_LDST8_ABS_LO12_NC 278 /* Likewise for LD/ST; no check. */#define R_AARCH64_TSTBR14 279 /* PC-rel. TBZ/TBNZ imm. from 15:2. */#define R_AARCH64_CONDBR19 280 /* PC-rel. cond. br. imm. from 20:2. */#define R_AARCH64_JUMP26 282 /* PC-rel. B imm. from bits 27:2. */#define R_AARCH64_CALL26 283 /* Likewise for CALL. */#define R_AARCH64_LDST16_ABS_LO12_NC 284 /* Dir. ADD imm. from bits 11:1. */#define R_AARCH64_LDST32_ABS_LO12_NC 285 /* Likewise for bits 11:2. */#define R_AARCH64_LDST64_ABS_LO12_NC 286 /* Likewise for bits 11:3. */#define R_AARCH64_MOVW_PREL_G0 287 /* PC-rel. MOV&#123;N,Z&#125; imm. from 15:0. */#define R_AARCH64_MOVW_PREL_G0_NC 288 /* Likewise for MOVK; no check. */#define R_AARCH64_MOVW_PREL_G1 289 /* PC-rel. MOV&#123;N,Z&#125; imm. from 31:16. */#define R_AARCH64_MOVW_PREL_G1_NC 290 /* Likewise for MOVK; no check. */#define R_AARCH64_MOVW_PREL_G2 291 /* PC-rel. MOV&#123;N,Z&#125; imm. from 47:32. */#define R_AARCH64_MOVW_PREL_G2_NC 292 /* Likewise for MOVK; no check. */#define R_AARCH64_MOVW_PREL_G3 293 /* PC-rel. MOV&#123;N,Z&#125; imm. from 63:48. */#define R_AARCH64_LDST128_ABS_LO12_NC 299 /* Dir. ADD imm. from bits 11:4. */#define R_AARCH64_MOVW_GOTOFF_G0 300 /* GOT-rel. off. MOV&#123;N,Z&#125; imm. 15:0. */#define R_AARCH64_MOVW_GOTOFF_G0_NC 301 /* Likewise for MOVK; no check. */#define R_AARCH64_MOVW_GOTOFF_G1 302 /* GOT-rel. o. MOV&#123;N,Z&#125; imm. 31:16. */#define R_AARCH64_MOVW_GOTOFF_G1_NC 303 /* Likewise for MOVK; no check. */#define R_AARCH64_MOVW_GOTOFF_G2 304 /* GOT-rel. o. MOV&#123;N,Z&#125; imm. 47:32. */#define R_AARCH64_MOVW_GOTOFF_G2_NC 305 /* Likewise for MOVK; no check. */#define R_AARCH64_MOVW_GOTOFF_G3 306 /* GOT-rel. o. MOV&#123;N,Z&#125; imm. 63:48. */#define R_AARCH64_GOTREL64 307 /* GOT-relative 64-bit. */#define R_AARCH64_GOTREL32 308 /* GOT-relative 32-bit. */#define R_AARCH64_GOT_LD_PREL19 309 /* PC-rel. GOT off. load imm. 20:2. */#define R_AARCH64_LD64_GOTOFF_LO15 310 /* GOT-rel. off. LD/ST imm. 14:3. */#define R_AARCH64_ADR_GOT_PAGE 311 /* P-page-rel. GOT off. ADRP 32:12. */#define R_AARCH64_LD64_GOT_LO12_NC 312 /* Dir. GOT off. LD/ST imm. 11:3. */#define R_AARCH64_LD64_GOTPAGE_LO15 313 /* GOT-page-rel. GOT off. LD/ST 14:3 */#define R_AARCH64_TLSGD_ADR_PREL21 512 /* PC-relative ADR imm. 20:0. */#define R_AARCH64_TLSGD_ADR_PAGE21 513 /* page-rel. ADRP imm. 32:12. */#define R_AARCH64_TLSGD_ADD_LO12_NC 514 /* direct ADD imm. from 11:0. */#define R_AARCH64_TLSGD_MOVW_G1 515 /* GOT-rel. MOV&#123;N,Z&#125; 31:16. */#define R_AARCH64_TLSGD_MOVW_G0_NC 516 /* GOT-rel. MOVK imm. 15:0. */#define R_AARCH64_TLSLD_ADR_PREL21 517 /* Like 512; local dynamic model. */#define R_AARCH64_TLSLD_ADR_PAGE21 518 /* Like 513; local dynamic model. */#define R_AARCH64_TLSLD_ADD_LO12_NC 519 /* Like 514; local dynamic model. */#define R_AARCH64_TLSLD_MOVW_G1 520 /* Like 515; local dynamic model. */#define R_AARCH64_TLSLD_MOVW_G0_NC 521 /* Like 516; local dynamic model. */#define R_AARCH64_TLSLD_LD_PREL19 522 /* TLS PC-rel. load imm. 20:2. */#define R_AARCH64_TLSLD_MOVW_DTPREL_G2 523 /* TLS DTP-rel. MOV&#123;N,Z&#125; 47:32. */#define R_AARCH64_TLSLD_MOVW_DTPREL_G1 524 /* TLS DTP-rel. MOV&#123;N,Z&#125; 31:16. */#define R_AARCH64_TLSLD_MOVW_DTPREL_G1_NC 525 /* Likewise; MOVK; no check. */#define R_AARCH64_TLSLD_MOVW_DTPREL_G0 526 /* TLS DTP-rel. MOV&#123;N,Z&#125; 15:0. */#define R_AARCH64_TLSLD_MOVW_DTPREL_G0_NC 527 /* Likewise; MOVK; no check. */#define R_AARCH64_TLSLD_ADD_DTPREL_HI12 528 /* DTP-rel. ADD imm. from 23:12. */#define R_AARCH64_TLSLD_ADD_DTPREL_LO12 529 /* DTP-rel. ADD imm. from 11:0. */#define R_AARCH64_TLSLD_ADD_DTPREL_LO12_NC 530 /* Likewise; no ovfl. check. */#define R_AARCH64_TLSLD_LDST8_DTPREL_LO12 531 /* DTP-rel. LD/ST imm. 11:0. */#define R_AARCH64_TLSLD_LDST8_DTPREL_LO12_NC 532 /* Likewise; no check. */#define R_AARCH64_TLSLD_LDST16_DTPREL_LO12 533 /* DTP-rel. LD/ST imm. 11:1. */#define R_AARCH64_TLSLD_LDST16_DTPREL_LO12_NC 534 /* Likewise; no check. */#define R_AARCH64_TLSLD_LDST32_DTPREL_LO12 535 /* DTP-rel. LD/ST imm. 11:2. */#define R_AARCH64_TLSLD_LDST32_DTPREL_LO12_NC 536 /* Likewise; no check. */#define R_AARCH64_TLSLD_LDST64_DTPREL_LO12 537 /* DTP-rel. LD/ST imm. 11:3. */#define R_AARCH64_TLSLD_LDST64_DTPREL_LO12_NC 538 /* Likewise; no check. */#define R_AARCH64_TLSIE_MOVW_GOTTPREL_G1 539 /* GOT-rel. MOV&#123;N,Z&#125; 31:16. */#define R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC 540 /* GOT-rel. MOVK 15:0. */#define R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21 541 /* Page-rel. ADRP 32:12. */#define R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC 542 /* Direct LD off. 11:3. */#define R_AARCH64_TLSIE_LD_GOTTPREL_PREL19 543 /* PC-rel. load imm. 20:2. */#define R_AARCH64_TLSLE_MOVW_TPREL_G2 544 /* TLS TP-rel. MOV&#123;N,Z&#125; 47:32. */#define R_AARCH64_TLSLE_MOVW_TPREL_G1 545 /* TLS TP-rel. MOV&#123;N,Z&#125; 31:16. */#define R_AARCH64_TLSLE_MOVW_TPREL_G1_NC 546 /* Likewise; MOVK; no check. */#define R_AARCH64_TLSLE_MOVW_TPREL_G0 547 /* TLS TP-rel. MOV&#123;N,Z&#125; 15:0. */#define R_AARCH64_TLSLE_MOVW_TPREL_G0_NC 548 /* Likewise; MOVK; no check. */#define R_AARCH64_TLSLE_ADD_TPREL_HI12 549 /* TP-rel. ADD imm. 23:12. */#define R_AARCH64_TLSLE_ADD_TPREL_LO12 550 /* TP-rel. ADD imm. 11:0. */#define R_AARCH64_TLSLE_ADD_TPREL_LO12_NC 551 /* Likewise; no ovfl. check. */#define R_AARCH64_TLSLE_LDST8_TPREL_LO12 552 /* TP-rel. LD/ST off. 11:0. */#define R_AARCH64_TLSLE_LDST8_TPREL_LO12_NC 553 /* Likewise; no ovfl. check. */#define R_AARCH64_TLSLE_LDST16_TPREL_LO12 554 /* TP-rel. LD/ST off. 11:1. */#define R_AARCH64_TLSLE_LDST16_TPREL_LO12_NC 555 /* Likewise; no check. */#define R_AARCH64_TLSLE_LDST32_TPREL_LO12 556 /* TP-rel. LD/ST off. 11:2. */#define R_AARCH64_TLSLE_LDST32_TPREL_LO12_NC 557 /* Likewise; no check. */#define R_AARCH64_TLSLE_LDST64_TPREL_LO12 558 /* TP-rel. LD/ST off. 11:3. */#define R_AARCH64_TLSLE_LDST64_TPREL_LO12_NC 559 /* Likewise; no check. */#define R_AARCH64_TLSDESC_LD_PREL19 560 /* PC-rel. load immediate 20:2. */#define R_AARCH64_TLSDESC_ADR_PREL21 561 /* PC-rel. ADR immediate 20:0. */#define R_AARCH64_TLSDESC_ADR_PAGE21 562 /* Page-rel. ADRP imm. 32:12. */#define R_AARCH64_TLSDESC_LD64_LO12 563 /* Direct LD off. from 11:3. */#define R_AARCH64_TLSDESC_ADD_LO12 564 /* Direct ADD imm. from 11:0. */#define R_AARCH64_TLSDESC_OFF_G1 565 /* GOT-rel. MOV&#123;N,Z&#125; imm. 31:16. */#define R_AARCH64_TLSDESC_OFF_G0_NC 566 /* GOT-rel. MOVK imm. 15:0; no ck. */#define R_AARCH64_TLSDESC_LDR 567 /* Relax LDR. */#define R_AARCH64_TLSDESC_ADD 568 /* Relax ADD. */#define R_AARCH64_TLSDESC_CALL 569 /* Relax BLR. */#define R_AARCH64_TLSLE_LDST128_TPREL_LO12 570 /* TP-rel. LD/ST off. 11:4. */#define R_AARCH64_TLSLE_LDST128_TPREL_LO12_NC 571 /* Likewise; no check. */#define R_AARCH64_TLSLD_LDST128_DTPREL_LO12 572 /* DTP-rel. LD/ST imm. 11:4. */#define R_AARCH64_TLSLD_LDST128_DTPREL_LO12_NC 573 /* Likewise; no check. */#define R_AARCH64_COPY 1024 /* Copy symbol at runtime. */#define R_AARCH64_GLOB_DAT 1025 /* Create GOT entry. */#define R_AARCH64_JUMP_SLOT 1026 /* Create PLT entry. */#define R_AARCH64_RELATIVE 1027 /* Adjust by program base. */#define R_AARCH64_TLS_DTPMOD 1028 /* Module number, 64 bit. */#define R_AARCH64_TLS_DTPREL 1029 /* Module-relative offset, 64 bit. */#define R_AARCH64_TLS_TPREL 1030 /* TP-relative offset, 64 bit. */#define R_AARCH64_TLSDESC 1031 /* TLS Descriptor. */#define R_AARCH64_IRELATIVE 1032 /* STT_GNU_IFUNC relocation. *//* ARM relocs. */#define R_ARM_NONE 0 /* No reloc */#define R_ARM_PC24 1 /* Deprecated PC relative 26 bit branch. */#define R_ARM_ABS32 2 /* Direct 32 bit */#define R_ARM_REL32 3 /* PC relative 32 bit */#define R_ARM_PC13 4#define R_ARM_ABS16 5 /* Direct 16 bit */#define R_ARM_ABS12 6 /* Direct 12 bit */#define R_ARM_THM_ABS5 7 /* Direct &amp; 0x7C (LDR, STR). */#define R_ARM_ABS8 8 /* Direct 8 bit */#define R_ARM_SBREL32 9#define R_ARM_THM_PC22 10 /* PC relative 24 bit (Thumb32 BL). */#define R_ARM_THM_PC8 11 /* PC relative &amp; 0x3FC (Thumb16 LDR, ADD, ADR). */#define R_ARM_AMP_VCALL9 12#define R_ARM_SWI24 13 /* Obsolete static relocation. */#define R_ARM_TLS_DESC 13 /* Dynamic relocation. */#define R_ARM_THM_SWI8 14 /* Reserved. */#define R_ARM_XPC25 15 /* Reserved. */#define R_ARM_THM_XPC22 16 /* Reserved. */#define R_ARM_TLS_DTPMOD32 17 /* ID of module containing symbol */#define R_ARM_TLS_DTPOFF32 18 /* Offset in TLS block */#define R_ARM_TLS_TPOFF32 19 /* Offset in static TLS block */#define R_ARM_COPY 20 /* Copy symbol at runtime */#define R_ARM_GLOB_DAT 21 /* Create GOT entry */#define R_ARM_JUMP_SLOT 22 /* Create PLT entry */#define R_ARM_RELATIVE 23 /* Adjust by program base */#define R_ARM_GOTOFF 24 /* 32 bit offset to GOT */#define R_ARM_GOTPC 25 /* 32 bit PC relative offset to GOT */#define R_ARM_GOT32 26 /* 32 bit GOT entry */#define R_ARM_PLT32 27 /* Deprecated, 32 bit PLT address. */#define R_ARM_CALL 28 /* PC relative 24 bit (BL, BLX). */#define R_ARM_JUMP24 29 /* PC relative 24 bit (B, BL&lt;cond&gt;). */#define R_ARM_THM_JUMP24 30 /* PC relative 24 bit (Thumb32 B.W). */#define R_ARM_BASE_ABS 31 /* Adjust by program base. */#define R_ARM_ALU_PCREL_7_0 32 /* Obsolete. */#define R_ARM_ALU_PCREL_15_8 33 /* Obsolete. */#define R_ARM_ALU_PCREL_23_15 34 /* Obsolete. */#define R_ARM_LDR_SBREL_11_0 35 /* Deprecated, prog. base relative. */#define R_ARM_ALU_SBREL_19_12 36 /* Deprecated, prog. base relative. */#define R_ARM_ALU_SBREL_27_20 37 /* Deprecated, prog. base relative. */#define R_ARM_TARGET1 38#define R_ARM_SBREL31 39 /* Program base relative. */#define R_ARM_V4BX 40#define R_ARM_TARGET2 41#define R_ARM_PREL31 42 /* 32 bit PC relative. */#define R_ARM_MOVW_ABS_NC 43 /* Direct 16-bit (MOVW). */#define R_ARM_MOVT_ABS 44 /* Direct high 16-bit (MOVT). */#define R_ARM_MOVW_PREL_NC 45 /* PC relative 16-bit (MOVW). */#define R_ARM_MOVT_PREL 46 /* PC relative (MOVT). */#define R_ARM_THM_MOVW_ABS_NC 47 /* Direct 16 bit (Thumb32 MOVW). */#define R_ARM_THM_MOVT_ABS 48 /* Direct high 16 bit (Thumb32 MOVT). */#define R_ARM_THM_MOVW_PREL_NC 49 /* PC relative 16 bit (Thumb32 MOVW). */#define R_ARM_THM_MOVT_PREL 50 /* PC relative high 16 bit (Thumb32 MOVT). */#define R_ARM_THM_JUMP19 51 /* PC relative 20 bit (Thumb32 B&lt;cond&gt;.W). */#define R_ARM_THM_JUMP6 52 /* PC relative X &amp; 0x7E (Thumb16 CBZ, CBNZ). */#define R_ARM_THM_ALU_PREL_11_0 53 /* PC relative 12 bit (Thumb32 ADR.W). */#define R_ARM_THM_PC12 54 /* PC relative 12 bit (Thumb32 LDR&#123;D,SB,H,SH&#125;). */#define R_ARM_ABS32_NOI 55 /* Direct 32-bit. */#define R_ARM_REL32_NOI 56 /* PC relative 32-bit. */#define R_ARM_ALU_PC_G0_NC 57 /* PC relative (ADD, SUB). */#define R_ARM_ALU_PC_G0 58 /* PC relative (ADD, SUB). */#define R_ARM_ALU_PC_G1_NC 59 /* PC relative (ADD, SUB). */#define R_ARM_ALU_PC_G1 60 /* PC relative (ADD, SUB). */#define R_ARM_ALU_PC_G2 61 /* PC relative (ADD, SUB). */#define R_ARM_LDR_PC_G1 62 /* PC relative (LDR,STR,LDRB,STRB). */#define R_ARM_LDR_PC_G2 63 /* PC relative (LDR,STR,LDRB,STRB). */#define R_ARM_LDRS_PC_G0 64 /* PC relative (STR&#123;D,H&#125;, LDR&#123;D,SB,H,SH&#125;). */#define R_ARM_LDRS_PC_G1 65 /* PC relative (STR&#123;D,H&#125;, LDR&#123;D,SB,H,SH&#125;). */#define R_ARM_LDRS_PC_G2 66 /* PC relative (STR&#123;D,H&#125;, LDR&#123;D,SB,H,SH&#125;). */#define R_ARM_LDC_PC_G0 67 /* PC relative (LDC, STC). */#define R_ARM_LDC_PC_G1 68 /* PC relative (LDC, STC). */#define R_ARM_LDC_PC_G2 69 /* PC relative (LDC, STC). */#define R_ARM_ALU_SB_G0_NC 70 /* Program base relative (ADD,SUB). */#define R_ARM_ALU_SB_G0 71 /* Program base relative (ADD,SUB). */#define R_ARM_ALU_SB_G1_NC 72 /* Program base relative (ADD,SUB). */#define R_ARM_ALU_SB_G1 73 /* Program base relative (ADD,SUB). */#define R_ARM_ALU_SB_G2 74 /* Program base relative (ADD,SUB). */#define R_ARM_LDR_SB_G0 75 /* Program base relative (LDR, STR, LDRB, STRB). */#define R_ARM_LDR_SB_G1 76 /* Program base relative (LDR, STR, LDRB, STRB). */#define R_ARM_LDR_SB_G2 77 /* Program base relative (LDR, STR, LDRB, STRB). */#define R_ARM_LDRS_SB_G0 78 /* Program base relative (LDR, STR, LDRB, STRB). */#define R_ARM_LDRS_SB_G1 79 /* Program base relative (LDR, STR, LDRB, STRB). */#define R_ARM_LDRS_SB_G2 80 /* Program base relative (LDR, STR, LDRB, STRB). */#define R_ARM_LDC_SB_G0 81 /* Program base relative (LDC,STC). */#define R_ARM_LDC_SB_G1 82 /* Program base relative (LDC,STC). */#define R_ARM_LDC_SB_G2 83 /* Program base relative (LDC,STC). */#define R_ARM_MOVW_BREL_NC 84 /* Program base relative 16 bit (MOVW). */#define R_ARM_MOVT_BREL 85 /* Program base relative high 16 bit (MOVT). */#define R_ARM_MOVW_BREL 86 /* Program base relative 16 bit (MOVW). */#define R_ARM_THM_MOVW_BREL_NC 87 /* Program base relative 16 bit (Thumb32 MOVW). */#define R_ARM_THM_MOVT_BREL 88 /* Program base relative high 16 bit (Thumb32 MOVT). */#define R_ARM_THM_MOVW_BREL 89 /* Program base relative 16 bit (Thumb32 MOVW). */#define R_ARM_TLS_GOTDESC 90#define R_ARM_TLS_CALL 91#define R_ARM_TLS_DESCSEQ 92 /* TLS relaxation. */#define R_ARM_THM_TLS_CALL 93#define R_ARM_PLT32_ABS 94#define R_ARM_GOT_ABS 95 /* GOT entry. */#define R_ARM_GOT_PREL 96 /* PC relative GOT entry. */#define R_ARM_GOT_BREL12 97 /* GOT entry relative to GOT origin (LDR). */#define R_ARM_GOTOFF12 98 /* 12 bit, GOT entry relative to GOT origin (LDR, STR). */#define R_ARM_GOTRELAX 99#define R_ARM_GNU_VTENTRY 100#define R_ARM_GNU_VTINHERIT 101#define R_ARM_THM_PC11 102 /* PC relative &amp; 0xFFE (Thumb16 B). */#define R_ARM_THM_PC9 103 /* PC relative &amp; 0x1FE (Thumb16 B/B&lt;cond&gt;). */#define R_ARM_TLS_GD32 104 /* PC-rel 32 bit for global dynamic thread local data */#define R_ARM_TLS_LDM32 105 /* PC-rel 32 bit for local dynamic thread local data */#define R_ARM_TLS_LDO32 106 /* 32 bit offset relative to TLS block */#define R_ARM_TLS_IE32 107 /* PC-rel 32 bit for GOT entry of static TLS block offset */#define R_ARM_TLS_LE32 108 /* 32 bit offset relative to static TLS block */#define R_ARM_TLS_LDO12 109 /* 12 bit relative to TLS block (LDR, STR). */#define R_ARM_TLS_LE12 110 /* 12 bit relative to static TLS block (LDR, STR). */#define R_ARM_TLS_IE12GP 111 /* 12 bit GOT entry relative to GOT origin (LDR). */#define R_ARM_ME_TOO 128 /* Obsolete. */#define R_ARM_THM_TLS_DESCSEQ 129#define R_ARM_THM_TLS_DESCSEQ16 129#define R_ARM_THM_TLS_DESCSEQ32 130#define R_ARM_THM_GOT_BREL12 131 /* GOT entry relative to GOT origin, 12 bit (Thumb32 LDR). */#define R_ARM_IRELATIVE 160#define R_ARM_RXPC25 249#define R_ARM_RSBREL32 250#define R_ARM_THM_RPC22 251#define R_ARM_RREL32 252#define R_ARM_RABS22 253#define R_ARM_RPC24 254#define R_ARM_RBASE 255/* Keep this the last entry. */#define R_ARM_NUM 256/* IA-64 specific declarations. *//* Processor specific flags for the Ehdr e_flags field. */#define EF_IA_64_MASKOS 0x0000000f /* os-specific flags */#define EF_IA_64_ABI64 0x00000010 /* 64-bit ABI */#define EF_IA_64_ARCH 0xff000000 /* arch. version mask *//* Processor specific values for the Phdr p_type field. */#define PT_IA_64_ARCHEXT (PT_LOPROC + 0) /* arch extension bits */#define PT_IA_64_UNWIND (PT_LOPROC + 1) /* ia64 unwind bits */#define PT_IA_64_HP_OPT_ANOT (PT_LOOS + 0x12)#define PT_IA_64_HP_HSL_ANOT (PT_LOOS + 0x13)#define PT_IA_64_HP_STACK (PT_LOOS + 0x14)/* Processor specific flags for the Phdr p_flags field. */#define PF_IA_64_NORECOV 0x80000000 /* spec insns w/o recovery *//* Processor specific values for the Shdr sh_type field. */#define SHT_IA_64_EXT (SHT_LOPROC + 0) /* extension bits */#define SHT_IA_64_UNWIND (SHT_LOPROC + 1) /* unwind bits *//* Processor specific flags for the Shdr sh_flags field. */#define SHF_IA_64_SHORT 0x10000000 /* section near gp */#define SHF_IA_64_NORECOV 0x20000000 /* spec insns w/o recovery *//* Processor specific values for the Dyn d_tag field. */#define DT_IA_64_PLT_RESERVE (DT_LOPROC + 0)#define DT_IA_64_NUM 1/* IA-64 relocations. */#define R_IA64_NONE 0x00 /* none */#define R_IA64_IMM14 0x21 /* symbol + addend, add imm14 */#define R_IA64_IMM22 0x22 /* symbol + addend, add imm22 */#define R_IA64_IMM64 0x23 /* symbol + addend, mov imm64 */#define R_IA64_DIR32MSB 0x24 /* symbol + addend, data4 MSB */#define R_IA64_DIR32LSB 0x25 /* symbol + addend, data4 LSB */#define R_IA64_DIR64MSB 0x26 /* symbol + addend, data8 MSB */#define R_IA64_DIR64LSB 0x27 /* symbol + addend, data8 LSB */#define R_IA64_GPREL22 0x2a /* @gprel(sym + add), add imm22 */#define R_IA64_GPREL64I 0x2b /* @gprel(sym + add), mov imm64 */#define R_IA64_GPREL32MSB 0x2c /* @gprel(sym + add), data4 MSB */#define R_IA64_GPREL32LSB 0x2d /* @gprel(sym + add), data4 LSB */#define R_IA64_GPREL64MSB 0x2e /* @gprel(sym + add), data8 MSB */#define R_IA64_GPREL64LSB 0x2f /* @gprel(sym + add), data8 LSB */#define R_IA64_LTOFF22 0x32 /* @ltoff(sym + add), add imm22 */#define R_IA64_LTOFF64I 0x33 /* @ltoff(sym + add), mov imm64 */#define R_IA64_PLTOFF22 0x3a /* @pltoff(sym + add), add imm22 */#define R_IA64_PLTOFF64I 0x3b /* @pltoff(sym + add), mov imm64 */#define R_IA64_PLTOFF64MSB 0x3e /* @pltoff(sym + add), data8 MSB */#define R_IA64_PLTOFF64LSB 0x3f /* @pltoff(sym + add), data8 LSB */#define R_IA64_FPTR64I 0x43 /* @fptr(sym + add), mov imm64 */#define R_IA64_FPTR32MSB 0x44 /* @fptr(sym + add), data4 MSB */#define R_IA64_FPTR32LSB 0x45 /* @fptr(sym + add), data4 LSB */#define R_IA64_FPTR64MSB 0x46 /* @fptr(sym + add), data8 MSB */#define R_IA64_FPTR64LSB 0x47 /* @fptr(sym + add), data8 LSB */#define R_IA64_PCREL60B 0x48 /* @pcrel(sym + add), brl */#define R_IA64_PCREL21B 0x49 /* @pcrel(sym + add), ptb, call */#define R_IA64_PCREL21M 0x4a /* @pcrel(sym + add), chk.s */#define R_IA64_PCREL21F 0x4b /* @pcrel(sym + add), fchkf */#define R_IA64_PCREL32MSB 0x4c /* @pcrel(sym + add), data4 MSB */#define R_IA64_PCREL32LSB 0x4d /* @pcrel(sym + add), data4 LSB */#define R_IA64_PCREL64MSB 0x4e /* @pcrel(sym + add), data8 MSB */#define R_IA64_PCREL64LSB 0x4f /* @pcrel(sym + add), data8 LSB */#define R_IA64_LTOFF_FPTR22 0x52 /* @ltoff(@fptr(s+a)), imm22 */#define R_IA64_LTOFF_FPTR64I 0x53 /* @ltoff(@fptr(s+a)), imm64 */#define R_IA64_LTOFF_FPTR32MSB 0x54 /* @ltoff(@fptr(s+a)), data4 MSB */#define R_IA64_LTOFF_FPTR32LSB 0x55 /* @ltoff(@fptr(s+a)), data4 LSB */#define R_IA64_LTOFF_FPTR64MSB 0x56 /* @ltoff(@fptr(s+a)), data8 MSB */#define R_IA64_LTOFF_FPTR64LSB 0x57 /* @ltoff(@fptr(s+a)), data8 LSB */#define R_IA64_SEGREL32MSB 0x5c /* @segrel(sym + add), data4 MSB */#define R_IA64_SEGREL32LSB 0x5d /* @segrel(sym + add), data4 LSB */#define R_IA64_SEGREL64MSB 0x5e /* @segrel(sym + add), data8 MSB */#define R_IA64_SEGREL64LSB 0x5f /* @segrel(sym + add), data8 LSB */#define R_IA64_SECREL32MSB 0x64 /* @secrel(sym + add), data4 MSB */#define R_IA64_SECREL32LSB 0x65 /* @secrel(sym + add), data4 LSB */#define R_IA64_SECREL64MSB 0x66 /* @secrel(sym + add), data8 MSB */#define R_IA64_SECREL64LSB 0x67 /* @secrel(sym + add), data8 LSB */#define R_IA64_REL32MSB 0x6c /* data 4 + REL */#define R_IA64_REL32LSB 0x6d /* data 4 + REL */#define R_IA64_REL64MSB 0x6e /* data 8 + REL */#define R_IA64_REL64LSB 0x6f /* data 8 + REL */#define R_IA64_LTV32MSB 0x74 /* symbol + addend, data4 MSB */#define R_IA64_LTV32LSB 0x75 /* symbol + addend, data4 LSB */#define R_IA64_LTV64MSB 0x76 /* symbol + addend, data8 MSB */#define R_IA64_LTV64LSB 0x77 /* symbol + addend, data8 LSB */#define R_IA64_PCREL21BI 0x79 /* @pcrel(sym + add), 21bit inst */#define R_IA64_PCREL22 0x7a /* @pcrel(sym + add), 22bit inst */#define R_IA64_PCREL64I 0x7b /* @pcrel(sym + add), 64bit inst */#define R_IA64_IPLTMSB 0x80 /* dynamic reloc, imported PLT, MSB */#define R_IA64_IPLTLSB 0x81 /* dynamic reloc, imported PLT, LSB */#define R_IA64_COPY 0x84 /* copy relocation */#define R_IA64_SUB 0x85 /* Addend and symbol difference */#define R_IA64_LTOFF22X 0x86 /* LTOFF22, relaxable. */#define R_IA64_LDXMOV 0x87 /* Use of LTOFF22X. */#define R_IA64_TPREL14 0x91 /* @tprel(sym + add), imm14 */#define R_IA64_TPREL22 0x92 /* @tprel(sym + add), imm22 */#define R_IA64_TPREL64I 0x93 /* @tprel(sym + add), imm64 */#define R_IA64_TPREL64MSB 0x96 /* @tprel(sym + add), data8 MSB */#define R_IA64_TPREL64LSB 0x97 /* @tprel(sym + add), data8 LSB */#define R_IA64_LTOFF_TPREL22 0x9a /* @ltoff(@tprel(s+a)), imm2 */#define R_IA64_DTPMOD64MSB 0xa6 /* @dtpmod(sym + add), data8 MSB */#define R_IA64_DTPMOD64LSB 0xa7 /* @dtpmod(sym + add), data8 LSB */#define R_IA64_LTOFF_DTPMOD22 0xaa /* @ltoff(@dtpmod(sym + add)), imm22 */#define R_IA64_DTPREL14 0xb1 /* @dtprel(sym + add), imm14 */#define R_IA64_DTPREL22 0xb2 /* @dtprel(sym + add), imm22 */#define R_IA64_DTPREL64I 0xb3 /* @dtprel(sym + add), imm64 */#define R_IA64_DTPREL32MSB 0xb4 /* @dtprel(sym + add), data4 MSB */#define R_IA64_DTPREL32LSB 0xb5 /* @dtprel(sym + add), data4 LSB */#define R_IA64_DTPREL64MSB 0xb6 /* @dtprel(sym + add), data8 MSB */#define R_IA64_DTPREL64LSB 0xb7 /* @dtprel(sym + add), data8 LSB */#define R_IA64_LTOFF_DTPREL22 0xba /* @ltoff(@dtprel(s+a)), imm22 *//* SH specific declarations *//* Processor specific flags for the ELF header e_flags field. */#define EF_SH_MACH_MASK 0x1f#define EF_SH_UNKNOWN 0x0#define EF_SH1 0x1#define EF_SH2 0x2#define EF_SH3 0x3#define EF_SH_DSP 0x4#define EF_SH3_DSP 0x5#define EF_SH4AL_DSP 0x6#define EF_SH3E 0x8#define EF_SH4 0x9#define EF_SH2E 0xb#define EF_SH4A 0xc#define EF_SH2A 0xd#define EF_SH4_NOFPU 0x10#define EF_SH4A_NOFPU 0x11#define EF_SH4_NOMMU_NOFPU 0x12#define EF_SH2A_NOFPU 0x13#define EF_SH3_NOMMU 0x14#define EF_SH2A_SH4_NOFPU 0x15#define EF_SH2A_SH3_NOFPU 0x16#define EF_SH2A_SH4 0x17#define EF_SH2A_SH3E 0x18/* SH relocs. */#define R_SH_NONE 0#define R_SH_DIR32 1#define R_SH_REL32 2#define R_SH_DIR8WPN 3#define R_SH_IND12W 4#define R_SH_DIR8WPL 5#define R_SH_DIR8WPZ 6#define R_SH_DIR8BP 7#define R_SH_DIR8W 8#define R_SH_DIR8L 9#define R_SH_SWITCH16 25#define R_SH_SWITCH32 26#define R_SH_USES 27#define R_SH_COUNT 28#define R_SH_ALIGN 29#define R_SH_CODE 30#define R_SH_DATA 31#define R_SH_LABEL 32#define R_SH_SWITCH8 33#define R_SH_GNU_VTINHERIT 34#define R_SH_GNU_VTENTRY 35#define R_SH_TLS_GD_32 144#define R_SH_TLS_LD_32 145#define R_SH_TLS_LDO_32 146#define R_SH_TLS_IE_32 147#define R_SH_TLS_LE_32 148#define R_SH_TLS_DTPMOD32 149#define R_SH_TLS_DTPOFF32 150#define R_SH_TLS_TPOFF32 151#define R_SH_GOT32 160#define R_SH_PLT32 161#define R_SH_COPY 162#define R_SH_GLOB_DAT 163#define R_SH_JMP_SLOT 164#define R_SH_RELATIVE 165#define R_SH_GOTOFF 166#define R_SH_GOTPC 167/* Keep this the last entry. */#define R_SH_NUM 256/* S/390 specific definitions. *//* Valid values for the e_flags field. */#define EF_S390_HIGH_GPRS 0x00000001 /* High GPRs kernel facility needed. *//* Additional s390 relocs */#define R_390_NONE 0 /* No reloc. */#define R_390_8 1 /* Direct 8 bit. */#define R_390_12 2 /* Direct 12 bit. */#define R_390_16 3 /* Direct 16 bit. */#define R_390_32 4 /* Direct 32 bit. */#define R_390_PC32 5 /* PC relative 32 bit. */#define R_390_GOT12 6 /* 12 bit GOT offset. */#define R_390_GOT32 7 /* 32 bit GOT offset. */#define R_390_PLT32 8 /* 32 bit PC relative PLT address. */#define R_390_COPY 9 /* Copy symbol at runtime. */#define R_390_GLOB_DAT 10 /* Create GOT entry. */#define R_390_JMP_SLOT 11 /* Create PLT entry. */#define R_390_RELATIVE 12 /* Adjust by program base. */#define R_390_GOTOFF32 13 /* 32 bit offset to GOT. */#define R_390_GOTPC 14 /* 32 bit PC relative offset to GOT. */#define R_390_GOT16 15 /* 16 bit GOT offset. */#define R_390_PC16 16 /* PC relative 16 bit. */#define R_390_PC16DBL 17 /* PC relative 16 bit shifted by 1. */#define R_390_PLT16DBL 18 /* 16 bit PC rel. PLT shifted by 1. */#define R_390_PC32DBL 19 /* PC relative 32 bit shifted by 1. */#define R_390_PLT32DBL 20 /* 32 bit PC rel. PLT shifted by 1. */#define R_390_GOTPCDBL 21 /* 32 bit PC rel. GOT shifted by 1. */#define R_390_64 22 /* Direct 64 bit. */#define R_390_PC64 23 /* PC relative 64 bit. */#define R_390_GOT64 24 /* 64 bit GOT offset. */#define R_390_PLT64 25 /* 64 bit PC relative PLT address. */#define R_390_GOTENT 26 /* 32 bit PC rel. to GOT entry &gt;&gt; 1. */#define R_390_GOTOFF16 27 /* 16 bit offset to GOT. */#define R_390_GOTOFF64 28 /* 64 bit offset to GOT. */#define R_390_GOTPLT12 29 /* 12 bit offset to jump slot. */#define R_390_GOTPLT16 30 /* 16 bit offset to jump slot. */#define R_390_GOTPLT32 31 /* 32 bit offset to jump slot. */#define R_390_GOTPLT64 32 /* 64 bit offset to jump slot. */#define R_390_GOTPLTENT 33 /* 32 bit rel. offset to jump slot. */#define R_390_PLTOFF16 34 /* 16 bit offset from GOT to PLT. */#define R_390_PLTOFF32 35 /* 32 bit offset from GOT to PLT. */#define R_390_PLTOFF64 36 /* 16 bit offset from GOT to PLT. */#define R_390_TLS_LOAD 37 /* Tag for load insn in TLS code. */#define R_390_TLS_GDCALL 38 /* Tag for function call in general dynamic TLS code. */#define R_390_TLS_LDCALL 39 /* Tag for function call in local dynamic TLS code. */#define R_390_TLS_GD32 40 /* Direct 32 bit for general dynamic thread local data. */#define R_390_TLS_GD64 41 /* Direct 64 bit for general dynamic thread local data. */#define R_390_TLS_GOTIE12 42 /* 12 bit GOT offset for static TLS block offset. */#define R_390_TLS_GOTIE32 43 /* 32 bit GOT offset for static TLS block offset. */#define R_390_TLS_GOTIE64 44 /* 64 bit GOT offset for static TLS block offset. */#define R_390_TLS_LDM32 45 /* Direct 32 bit for local dynamic thread local data in LE code. */#define R_390_TLS_LDM64 46 /* Direct 64 bit for local dynamic thread local data in LE code. */#define R_390_TLS_IE32 47 /* 32 bit address of GOT entry for negated static TLS block offset. */#define R_390_TLS_IE64 48 /* 64 bit address of GOT entry for negated static TLS block offset. */#define R_390_TLS_IEENT 49 /* 32 bit rel. offset to GOT entry for negated static TLS block offset. */#define R_390_TLS_LE32 50 /* 32 bit negated offset relative to static TLS block. */#define R_390_TLS_LE64 51 /* 64 bit negated offset relative to static TLS block. */#define R_390_TLS_LDO32 52 /* 32 bit offset relative to TLS block. */#define R_390_TLS_LDO64 53 /* 64 bit offset relative to TLS block. */#define R_390_TLS_DTPMOD 54 /* ID of module containing symbol. */#define R_390_TLS_DTPOFF 55 /* Offset in TLS block. */#define R_390_TLS_TPOFF 56 /* Negated offset in static TLS block. */#define R_390_20 57 /* Direct 20 bit. */#define R_390_GOT20 58 /* 20 bit GOT offset. */#define R_390_GOTPLT20 59 /* 20 bit offset to jump slot. */#define R_390_TLS_GOTIE20 60 /* 20 bit GOT offset for static TLS block offset. */#define R_390_IRELATIVE 61 /* STT_GNU_IFUNC relocation. *//* Keep this the last entry. */#define R_390_NUM 62/* CRIS relocations. */#define R_CRIS_NONE 0#define R_CRIS_8 1#define R_CRIS_16 2#define R_CRIS_32 3#define R_CRIS_8_PCREL 4#define R_CRIS_16_PCREL 5#define R_CRIS_32_PCREL 6#define R_CRIS_GNU_VTINHERIT 7#define R_CRIS_GNU_VTENTRY 8#define R_CRIS_COPY 9#define R_CRIS_GLOB_DAT 10#define R_CRIS_JUMP_SLOT 11#define R_CRIS_RELATIVE 12#define R_CRIS_16_GOT 13#define R_CRIS_32_GOT 14#define R_CRIS_16_GOTPLT 15#define R_CRIS_32_GOTPLT 16#define R_CRIS_32_GOTREL 17#define R_CRIS_32_PLT_GOTREL 18#define R_CRIS_32_PLT_PCREL 19#define R_CRIS_NUM 20/* AMD x86-64 relocations. */#define R_X86_64_NONE 0 /* No reloc */#define R_X86_64_64 1 /* Direct 64 bit */#define R_X86_64_PC32 2 /* PC relative 32 bit signed */#define R_X86_64_GOT32 3 /* 32 bit GOT entry */#define R_X86_64_PLT32 4 /* 32 bit PLT address */#define R_X86_64_COPY 5 /* Copy symbol at runtime */#define R_X86_64_GLOB_DAT 6 /* Create GOT entry */#define R_X86_64_JUMP_SLOT 7 /* Create PLT entry */#define R_X86_64_RELATIVE 8 /* Adjust by program base */#define R_X86_64_GOTPCREL 9 /* 32 bit signed PC relative offset to GOT */#define R_X86_64_32 10 /* Direct 32 bit zero extended */#define R_X86_64_32S 11 /* Direct 32 bit sign extended */#define R_X86_64_16 12 /* Direct 16 bit zero extended */#define R_X86_64_PC16 13 /* 16 bit sign extended pc relative */#define R_X86_64_8 14 /* Direct 8 bit sign extended */#define R_X86_64_PC8 15 /* 8 bit sign extended pc relative */#define R_X86_64_DTPMOD64 16 /* ID of module containing symbol */#define R_X86_64_DTPOFF64 17 /* Offset in module's TLS block */#define R_X86_64_TPOFF64 18 /* Offset in initial TLS block */#define R_X86_64_TLSGD 19 /* 32 bit signed PC relative offset to two GOT entries for GD symbol */#define R_X86_64_TLSLD 20 /* 32 bit signed PC relative offset to two GOT entries for LD symbol */#define R_X86_64_DTPOFF32 21 /* Offset in TLS block */#define R_X86_64_GOTTPOFF 22 /* 32 bit signed PC relative offset to GOT entry for IE symbol */#define R_X86_64_TPOFF32 23 /* Offset in initial TLS block */#define R_X86_64_PC64 24 /* PC relative 64 bit */#define R_X86_64_GOTOFF64 25 /* 64 bit offset to GOT */#define R_X86_64_GOTPC32 26 /* 32 bit signed pc relative offset to GOT */#define R_X86_64_GOT64 27 /* 64-bit GOT entry offset */#define R_X86_64_GOTPCREL64 28 /* 64-bit PC relative offset to GOT entry */#define R_X86_64_GOTPC64 29 /* 64-bit PC relative offset to GOT */#define R_X86_64_GOTPLT64 30 /* like GOT64, says PLT entry needed */#define R_X86_64_PLTOFF64 31 /* 64-bit GOT relative offset to PLT entry */#define R_X86_64_SIZE32 32 /* Size of symbol plus 32-bit addend */#define R_X86_64_SIZE64 33 /* Size of symbol plus 64-bit addend */#define R_X86_64_GOTPC32_TLSDESC 34 /* GOT offset for TLS descriptor. */#define R_X86_64_TLSDESC_CALL 35 /* Marker for call through TLS descriptor. */#define R_X86_64_TLSDESC 36 /* TLS descriptor. */#define R_X86_64_IRELATIVE 37 /* Adjust indirectly by program base */#define R_X86_64_RELATIVE64 38 /* 64-bit adjust by program base */#define R_X86_64_NUM 39/* AM33 relocations. */#define R_MN10300_NONE 0 /* No reloc. */#define R_MN10300_32 1 /* Direct 32 bit. */#define R_MN10300_16 2 /* Direct 16 bit. */#define R_MN10300_8 3 /* Direct 8 bit. */#define R_MN10300_PCREL32 4 /* PC-relative 32-bit. */#define R_MN10300_PCREL16 5 /* PC-relative 16-bit signed. */#define R_MN10300_PCREL8 6 /* PC-relative 8-bit signed. */#define R_MN10300_GNU_VTINHERIT 7 /* Ancient C++ vtable garbage... */#define R_MN10300_GNU_VTENTRY 8 /* ... collection annotation. */#define R_MN10300_24 9 /* Direct 24 bit. */#define R_MN10300_GOTPC32 10 /* 32-bit PCrel offset to GOT. */#define R_MN10300_GOTPC16 11 /* 16-bit PCrel offset to GOT. */#define R_MN10300_GOTOFF32 12 /* 32-bit offset from GOT. */#define R_MN10300_GOTOFF24 13 /* 24-bit offset from GOT. */#define R_MN10300_GOTOFF16 14 /* 16-bit offset from GOT. */#define R_MN10300_PLT32 15 /* 32-bit PCrel to PLT entry. */#define R_MN10300_PLT16 16 /* 16-bit PCrel to PLT entry. */#define R_MN10300_GOT32 17 /* 32-bit offset to GOT entry. */#define R_MN10300_GOT24 18 /* 24-bit offset to GOT entry. */#define R_MN10300_GOT16 19 /* 16-bit offset to GOT entry. */#define R_MN10300_COPY 20 /* Copy symbol at runtime. */#define R_MN10300_GLOB_DAT 21 /* Create GOT entry. */#define R_MN10300_JMP_SLOT 22 /* Create PLT entry. */#define R_MN10300_RELATIVE 23 /* Adjust by program base. */#define R_MN10300_TLS_GD 24 /* 32-bit offset for global dynamic. */#define R_MN10300_TLS_LD 25 /* 32-bit offset for local dynamic. */#define R_MN10300_TLS_LDO 26 /* Module-relative offset. */#define R_MN10300_TLS_GOTIE 27 /* GOT offset for static TLS block offset. */#define R_MN10300_TLS_IE 28 /* GOT address for static TLS block offset. */#define R_MN10300_TLS_LE 29 /* Offset relative to static TLS block. */#define R_MN10300_TLS_DTPMOD 30 /* ID of module containing symbol. */#define R_MN10300_TLS_DTPOFF 31 /* Offset in module TLS block. */#define R_MN10300_TLS_TPOFF 32 /* Offset in static TLS block. */#define R_MN10300_SYM_DIFF 33 /* Adjustment for next reloc as needed by linker relaxation. */#define R_MN10300_ALIGN 34 /* Alignment requirement for linker relaxation. */#define R_MN10300_NUM 35/* M32R relocs. */#define R_M32R_NONE 0 /* No reloc. */#define R_M32R_16 1 /* Direct 16 bit. */#define R_M32R_32 2 /* Direct 32 bit. */#define R_M32R_24 3 /* Direct 24 bit. */#define R_M32R_10_PCREL 4 /* PC relative 10 bit shifted. */#define R_M32R_18_PCREL 5 /* PC relative 18 bit shifted. */#define R_M32R_26_PCREL 6 /* PC relative 26 bit shifted. */#define R_M32R_HI16_ULO 7 /* High 16 bit with unsigned low. */#define R_M32R_HI16_SLO 8 /* High 16 bit with signed low. */#define R_M32R_LO16 9 /* Low 16 bit. */#define R_M32R_SDA16 10 /* 16 bit offset in SDA. */#define R_M32R_GNU_VTINHERIT 11#define R_M32R_GNU_VTENTRY 12/* M32R relocs use SHT_RELA. */#define R_M32R_16_RELA 33 /* Direct 16 bit. */#define R_M32R_32_RELA 34 /* Direct 32 bit. */#define R_M32R_24_RELA 35 /* Direct 24 bit. */#define R_M32R_10_PCREL_RELA 36 /* PC relative 10 bit shifted. */#define R_M32R_18_PCREL_RELA 37 /* PC relative 18 bit shifted. */#define R_M32R_26_PCREL_RELA 38 /* PC relative 26 bit shifted. */#define R_M32R_HI16_ULO_RELA 39 /* High 16 bit with unsigned low */#define R_M32R_HI16_SLO_RELA 40 /* High 16 bit with signed low */#define R_M32R_LO16_RELA 41 /* Low 16 bit */#define R_M32R_SDA16_RELA 42 /* 16 bit offset in SDA */#define R_M32R_RELA_GNU_VTINHERIT 43#define R_M32R_RELA_GNU_VTENTRY 44#define R_M32R_REL32 45 /* PC relative 32 bit. */#define R_M32R_GOT24 48 /* 24 bit GOT entry */#define R_M32R_26_PLTREL 49 /* 26 bit PC relative to PLT shifted */#define R_M32R_COPY 50 /* Copy symbol at runtime */#define R_M32R_GLOB_DAT 51 /* Create GOT entry */#define R_M32R_JMP_SLOT 52 /* Create PLT entry */#define R_M32R_RELATIVE 53 /* Adjust by program base */#define R_M32R_GOTOFF 54 /* 24 bit offset to GOT */#define R_M32R_GOTPC24 55 /* 24 bit PC relative offset to GOT */#define R_M32R_GOT16_HI_ULO 56 /* High 16 bit GOT entry with unsigned low */#define R_M32R_GOT16_HI_SLO 57 /* High 16 bit GOT entry with signed low */#define R_M32R_GOT16_LO 58 /* Low 16 bit GOT entry */#define R_M32R_GOTPC_HI_ULO 59 /* High 16 bit PC relative offset to GOT with unsigned low */#define R_M32R_GOTPC_HI_SLO 60 /* High 16 bit PC relative offset to GOT with signed low */#define R_M32R_GOTPC_LO 61 /* Low 16 bit PC relative offset to GOT */#define R_M32R_GOTOFF_HI_ULO 62 /* High 16 bit offset to GOT with unsigned low */#define R_M32R_GOTOFF_HI_SLO 63 /* High 16 bit offset to GOT with signed low */#define R_M32R_GOTOFF_LO 64 /* Low 16 bit offset to GOT */#define R_M32R_NUM 256 /* Keep this the last entry. *//* MicroBlaze relocations */#define R_MICROBLAZE_NONE 0 /* No reloc. */#define R_MICROBLAZE_32 1 /* Direct 32 bit. */#define R_MICROBLAZE_32_PCREL 2 /* PC relative 32 bit. */#define R_MICROBLAZE_64_PCREL 3 /* PC relative 64 bit. */#define R_MICROBLAZE_32_PCREL_LO 4 /* Low 16 bits of PCREL32. */#define R_MICROBLAZE_64 5 /* Direct 64 bit. */#define R_MICROBLAZE_32_LO 6 /* Low 16 bit. */#define R_MICROBLAZE_SRO32 7 /* Read-only small data area. */#define R_MICROBLAZE_SRW32 8 /* Read-write small data area. */#define R_MICROBLAZE_64_NONE 9 /* No reloc. */#define R_MICROBLAZE_32_SYM_OP_SYM 10 /* Symbol Op Symbol relocation. */#define R_MICROBLAZE_GNU_VTINHERIT 11 /* GNU C++ vtable hierarchy. */#define R_MICROBLAZE_GNU_VTENTRY 12 /* GNU C++ vtable member usage. */#define R_MICROBLAZE_GOTPC_64 13 /* PC-relative GOT offset. */#define R_MICROBLAZE_GOT_64 14 /* GOT entry offset. */#define R_MICROBLAZE_PLT_64 15 /* PLT offset (PC-relative). */#define R_MICROBLAZE_REL 16 /* Adjust by program base. */#define R_MICROBLAZE_JUMP_SLOT 17 /* Create PLT entry. */#define R_MICROBLAZE_GLOB_DAT 18 /* Create GOT entry. */#define R_MICROBLAZE_GOTOFF_64 19 /* 64 bit offset to GOT. */#define R_MICROBLAZE_GOTOFF_32 20 /* 32 bit offset to GOT. */#define R_MICROBLAZE_COPY 21 /* Runtime copy. */#define R_MICROBLAZE_TLS 22 /* TLS Reloc. */#define R_MICROBLAZE_TLSGD 23 /* TLS General Dynamic. */#define R_MICROBLAZE_TLSLD 24 /* TLS Local Dynamic. */#define R_MICROBLAZE_TLSDTPMOD32 25 /* TLS Module ID. */#define R_MICROBLAZE_TLSDTPREL32 26 /* TLS Offset Within TLS Block. */#define R_MICROBLAZE_TLSDTPREL64 27 /* TLS Offset Within TLS Block. */#define R_MICROBLAZE_TLSGOTTPREL32 28 /* TLS Offset From Thread Pointer. */#define R_MICROBLAZE_TLSTPREL32 29 /* TLS Offset From Thread Pointer. *//* Legal values for d_tag (dynamic entry type). */#define DT_NIOS2_GP 0x70000002 /* Address of _gp. *//* Nios II relocations. */#define R_NIOS2_NONE 0 /* No reloc. */#define R_NIOS2_S16 1 /* Direct signed 16 bit. */#define R_NIOS2_U16 2 /* Direct unsigned 16 bit. */#define R_NIOS2_PCREL16 3 /* PC relative 16 bit. */#define R_NIOS2_CALL26 4 /* Direct call. */#define R_NIOS2_IMM5 5 /* 5 bit constant expression. */#define R_NIOS2_CACHE_OPX 6 /* 5 bit expression, shift 22. */#define R_NIOS2_IMM6 7 /* 6 bit constant expression. */#define R_NIOS2_IMM8 8 /* 8 bit constant expression. */#define R_NIOS2_HI16 9 /* High 16 bit. */#define R_NIOS2_LO16 10 /* Low 16 bit. */#define R_NIOS2_HIADJ16 11 /* High 16 bit, adjusted. */#define R_NIOS2_BFD_RELOC_32 12 /* 32 bit symbol value + addend. */#define R_NIOS2_BFD_RELOC_16 13 /* 16 bit symbol value + addend. */#define R_NIOS2_BFD_RELOC_8 14 /* 8 bit symbol value + addend. */#define R_NIOS2_GPREL 15 /* 16 bit GP pointer offset. */#define R_NIOS2_GNU_VTINHERIT 16 /* GNU C++ vtable hierarchy. */#define R_NIOS2_GNU_VTENTRY 17 /* GNU C++ vtable member usage. */#define R_NIOS2_UJMP 18 /* Unconditional branch. */#define R_NIOS2_CJMP 19 /* Conditional branch. */#define R_NIOS2_CALLR 20 /* Indirect call through register. */#define R_NIOS2_ALIGN 21 /* Alignment requirement for linker relaxation. */#define R_NIOS2_GOT16 22 /* 16 bit GOT entry. */#define R_NIOS2_CALL16 23 /* 16 bit GOT entry for function. */#define R_NIOS2_GOTOFF_LO 24 /* %lo of offset to GOT pointer. */#define R_NIOS2_GOTOFF_HA 25 /* %hiadj of offset to GOT pointer. */#define R_NIOS2_PCREL_LO 26 /* %lo of PC relative offset. */#define R_NIOS2_PCREL_HA 27 /* %hiadj of PC relative offset. */#define R_NIOS2_TLS_GD16 28 /* 16 bit GOT offset for TLS GD. */#define R_NIOS2_TLS_LDM16 29 /* 16 bit GOT offset for TLS LDM. */#define R_NIOS2_TLS_LDO16 30 /* 16 bit module relative offset. */#define R_NIOS2_TLS_IE16 31 /* 16 bit GOT offset for TLS IE. */#define R_NIOS2_TLS_LE16 32 /* 16 bit LE TP-relative offset. */#define R_NIOS2_TLS_DTPMOD 33 /* Module number. */#define R_NIOS2_TLS_DTPREL 34 /* Module-relative offset. */#define R_NIOS2_TLS_TPREL 35 /* TP-relative offset. */#define R_NIOS2_COPY 36 /* Copy symbol at runtime. */#define R_NIOS2_GLOB_DAT 37 /* Create GOT entry. */#define R_NIOS2_JUMP_SLOT 38 /* Create PLT entry. */#define R_NIOS2_RELATIVE 39 /* Adjust by program base. */#define R_NIOS2_GOTOFF 40 /* 16 bit offset to GOT pointer. */#define R_NIOS2_CALL26_NOAT 41 /* Direct call in .noat section. */#define R_NIOS2_GOT_LO 42 /* %lo() of GOT entry. */#define R_NIOS2_GOT_HA 43 /* %hiadj() of GOT entry. */#define R_NIOS2_CALL_LO 44 /* %lo() of function GOT entry. */#define R_NIOS2_CALL_HA 45 /* %hiadj() of function GOT entry. *//* TILEPro relocations. */#define R_TILEPRO_NONE 0 /* No reloc */#define R_TILEPRO_32 1 /* Direct 32 bit */#define R_TILEPRO_16 2 /* Direct 16 bit */#define R_TILEPRO_8 3 /* Direct 8 bit */#define R_TILEPRO_32_PCREL 4 /* PC relative 32 bit */#define R_TILEPRO_16_PCREL 5 /* PC relative 16 bit */#define R_TILEPRO_8_PCREL 6 /* PC relative 8 bit */#define R_TILEPRO_LO16 7 /* Low 16 bit */#define R_TILEPRO_HI16 8 /* High 16 bit */#define R_TILEPRO_HA16 9 /* High 16 bit, adjusted */#define R_TILEPRO_COPY 10 /* Copy relocation */#define R_TILEPRO_GLOB_DAT 11 /* Create GOT entry */#define R_TILEPRO_JMP_SLOT 12 /* Create PLT entry */#define R_TILEPRO_RELATIVE 13 /* Adjust by program base */#define R_TILEPRO_BROFF_X1 14 /* X1 pipe branch offset */#define R_TILEPRO_JOFFLONG_X1 15 /* X1 pipe jump offset */#define R_TILEPRO_JOFFLONG_X1_PLT 16 /* X1 pipe jump offset to PLT */#define R_TILEPRO_IMM8_X0 17 /* X0 pipe 8-bit */#define R_TILEPRO_IMM8_Y0 18 /* Y0 pipe 8-bit */#define R_TILEPRO_IMM8_X1 19 /* X1 pipe 8-bit */#define R_TILEPRO_IMM8_Y1 20 /* Y1 pipe 8-bit */#define R_TILEPRO_MT_IMM15_X1 21 /* X1 pipe mtspr */#define R_TILEPRO_MF_IMM15_X1 22 /* X1 pipe mfspr */#define R_TILEPRO_IMM16_X0 23 /* X0 pipe 16-bit */#define R_TILEPRO_IMM16_X1 24 /* X1 pipe 16-bit */#define R_TILEPRO_IMM16_X0_LO 25 /* X0 pipe low 16-bit */#define R_TILEPRO_IMM16_X1_LO 26 /* X1 pipe low 16-bit */#define R_TILEPRO_IMM16_X0_HI 27 /* X0 pipe high 16-bit */#define R_TILEPRO_IMM16_X1_HI 28 /* X1 pipe high 16-bit */#define R_TILEPRO_IMM16_X0_HA 29 /* X0 pipe high 16-bit, adjusted */#define R_TILEPRO_IMM16_X1_HA 30 /* X1 pipe high 16-bit, adjusted */#define R_TILEPRO_IMM16_X0_PCREL 31 /* X0 pipe PC relative 16 bit */#define R_TILEPRO_IMM16_X1_PCREL 32 /* X1 pipe PC relative 16 bit */#define R_TILEPRO_IMM16_X0_LO_PCREL 33 /* X0 pipe PC relative low 16 bit */#define R_TILEPRO_IMM16_X1_LO_PCREL 34 /* X1 pipe PC relative low 16 bit */#define R_TILEPRO_IMM16_X0_HI_PCREL 35 /* X0 pipe PC relative high 16 bit */#define R_TILEPRO_IMM16_X1_HI_PCREL 36 /* X1 pipe PC relative high 16 bit */#define R_TILEPRO_IMM16_X0_HA_PCREL 37 /* X0 pipe PC relative ha() 16 bit */#define R_TILEPRO_IMM16_X1_HA_PCREL 38 /* X1 pipe PC relative ha() 16 bit */#define R_TILEPRO_IMM16_X0_GOT 39 /* X0 pipe 16-bit GOT offset */#define R_TILEPRO_IMM16_X1_GOT 40 /* X1 pipe 16-bit GOT offset */#define R_TILEPRO_IMM16_X0_GOT_LO 41 /* X0 pipe low 16-bit GOT offset */#define R_TILEPRO_IMM16_X1_GOT_LO 42 /* X1 pipe low 16-bit GOT offset */#define R_TILEPRO_IMM16_X0_GOT_HI 43 /* X0 pipe high 16-bit GOT offset */#define R_TILEPRO_IMM16_X1_GOT_HI 44 /* X1 pipe high 16-bit GOT offset */#define R_TILEPRO_IMM16_X0_GOT_HA 45 /* X0 pipe ha() 16-bit GOT offset */#define R_TILEPRO_IMM16_X1_GOT_HA 46 /* X1 pipe ha() 16-bit GOT offset */#define R_TILEPRO_MMSTART_X0 47 /* X0 pipe mm "start" */#define R_TILEPRO_MMEND_X0 48 /* X0 pipe mm "end" */#define R_TILEPRO_MMSTART_X1 49 /* X1 pipe mm "start" */#define R_TILEPRO_MMEND_X1 50 /* X1 pipe mm "end" */#define R_TILEPRO_SHAMT_X0 51 /* X0 pipe shift amount */#define R_TILEPRO_SHAMT_X1 52 /* X1 pipe shift amount */#define R_TILEPRO_SHAMT_Y0 53 /* Y0 pipe shift amount */#define R_TILEPRO_SHAMT_Y1 54 /* Y1 pipe shift amount */#define R_TILEPRO_DEST_IMM8_X1 55 /* X1 pipe destination 8-bit *//* Relocs 56-59 are currently not defined. */#define R_TILEPRO_TLS_GD_CALL 60 /* "jal" for TLS GD */#define R_TILEPRO_IMM8_X0_TLS_GD_ADD 61 /* X0 pipe "addi" for TLS GD */#define R_TILEPRO_IMM8_X1_TLS_GD_ADD 62 /* X1 pipe "addi" for TLS GD */#define R_TILEPRO_IMM8_Y0_TLS_GD_ADD 63 /* Y0 pipe "addi" for TLS GD */#define R_TILEPRO_IMM8_Y1_TLS_GD_ADD 64 /* Y1 pipe "addi" for TLS GD */#define R_TILEPRO_TLS_IE_LOAD 65 /* "lw_tls" for TLS IE */#define R_TILEPRO_IMM16_X0_TLS_GD 66 /* X0 pipe 16-bit TLS GD offset */#define R_TILEPRO_IMM16_X1_TLS_GD 67 /* X1 pipe 16-bit TLS GD offset */#define R_TILEPRO_IMM16_X0_TLS_GD_LO 68 /* X0 pipe low 16-bit TLS GD offset */#define R_TILEPRO_IMM16_X1_TLS_GD_LO 69 /* X1 pipe low 16-bit TLS GD offset */#define R_TILEPRO_IMM16_X0_TLS_GD_HI 70 /* X0 pipe high 16-bit TLS GD offset */#define R_TILEPRO_IMM16_X1_TLS_GD_HI 71 /* X1 pipe high 16-bit TLS GD offset */#define R_TILEPRO_IMM16_X0_TLS_GD_HA 72 /* X0 pipe ha() 16-bit TLS GD offset */#define R_TILEPRO_IMM16_X1_TLS_GD_HA 73 /* X1 pipe ha() 16-bit TLS GD offset */#define R_TILEPRO_IMM16_X0_TLS_IE 74 /* X0 pipe 16-bit TLS IE offset */#define R_TILEPRO_IMM16_X1_TLS_IE 75 /* X1 pipe 16-bit TLS IE offset */#define R_TILEPRO_IMM16_X0_TLS_IE_LO 76 /* X0 pipe low 16-bit TLS IE offset */#define R_TILEPRO_IMM16_X1_TLS_IE_LO 77 /* X1 pipe low 16-bit TLS IE offset */#define R_TILEPRO_IMM16_X0_TLS_IE_HI 78 /* X0 pipe high 16-bit TLS IE offset */#define R_TILEPRO_IMM16_X1_TLS_IE_HI 79 /* X1 pipe high 16-bit TLS IE offset */#define R_TILEPRO_IMM16_X0_TLS_IE_HA 80 /* X0 pipe ha() 16-bit TLS IE offset */#define R_TILEPRO_IMM16_X1_TLS_IE_HA 81 /* X1 pipe ha() 16-bit TLS IE offset */#define R_TILEPRO_TLS_DTPMOD32 82 /* ID of module containing symbol */#define R_TILEPRO_TLS_DTPOFF32 83 /* Offset in TLS block */#define R_TILEPRO_TLS_TPOFF32 84 /* Offset in static TLS block */#define R_TILEPRO_IMM16_X0_TLS_LE 85 /* X0 pipe 16-bit TLS LE offset */#define R_TILEPRO_IMM16_X1_TLS_LE 86 /* X1 pipe 16-bit TLS LE offset */#define R_TILEPRO_IMM16_X0_TLS_LE_LO 87 /* X0 pipe low 16-bit TLS LE offset */#define R_TILEPRO_IMM16_X1_TLS_LE_LO 88 /* X1 pipe low 16-bit TLS LE offset */#define R_TILEPRO_IMM16_X0_TLS_LE_HI 89 /* X0 pipe high 16-bit TLS LE offset */#define R_TILEPRO_IMM16_X1_TLS_LE_HI 90 /* X1 pipe high 16-bit TLS LE offset */#define R_TILEPRO_IMM16_X0_TLS_LE_HA 91 /* X0 pipe ha() 16-bit TLS LE offset */#define R_TILEPRO_IMM16_X1_TLS_LE_HA 92 /* X1 pipe ha() 16-bit TLS LE offset */#define R_TILEPRO_GNU_VTINHERIT 128 /* GNU C++ vtable hierarchy */#define R_TILEPRO_GNU_VTENTRY 129 /* GNU C++ vtable member usage */#define R_TILEPRO_NUM 130/* TILE-Gx relocations. */#define R_TILEGX_NONE 0 /* No reloc */#define R_TILEGX_64 1 /* Direct 64 bit */#define R_TILEGX_32 2 /* Direct 32 bit */#define R_TILEGX_16 3 /* Direct 16 bit */#define R_TILEGX_8 4 /* Direct 8 bit */#define R_TILEGX_64_PCREL 5 /* PC relative 64 bit */#define R_TILEGX_32_PCREL 6 /* PC relative 32 bit */#define R_TILEGX_16_PCREL 7 /* PC relative 16 bit */#define R_TILEGX_8_PCREL 8 /* PC relative 8 bit */#define R_TILEGX_HW0 9 /* hword 0 16-bit */#define R_TILEGX_HW1 10 /* hword 1 16-bit */#define R_TILEGX_HW2 11 /* hword 2 16-bit */#define R_TILEGX_HW3 12 /* hword 3 16-bit */#define R_TILEGX_HW0_LAST 13 /* last hword 0 16-bit */#define R_TILEGX_HW1_LAST 14 /* last hword 1 16-bit */#define R_TILEGX_HW2_LAST 15 /* last hword 2 16-bit */#define R_TILEGX_COPY 16 /* Copy relocation */#define R_TILEGX_GLOB_DAT 17 /* Create GOT entry */#define R_TILEGX_JMP_SLOT 18 /* Create PLT entry */#define R_TILEGX_RELATIVE 19 /* Adjust by program base */#define R_TILEGX_BROFF_X1 20 /* X1 pipe branch offset */#define R_TILEGX_JUMPOFF_X1 21 /* X1 pipe jump offset */#define R_TILEGX_JUMPOFF_X1_PLT 22 /* X1 pipe jump offset to PLT */#define R_TILEGX_IMM8_X0 23 /* X0 pipe 8-bit */#define R_TILEGX_IMM8_Y0 24 /* Y0 pipe 8-bit */#define R_TILEGX_IMM8_X1 25 /* X1 pipe 8-bit */#define R_TILEGX_IMM8_Y1 26 /* Y1 pipe 8-bit */#define R_TILEGX_DEST_IMM8_X1 27 /* X1 pipe destination 8-bit */#define R_TILEGX_MT_IMM14_X1 28 /* X1 pipe mtspr */#define R_TILEGX_MF_IMM14_X1 29 /* X1 pipe mfspr */#define R_TILEGX_MMSTART_X0 30 /* X0 pipe mm "start" */#define R_TILEGX_MMEND_X0 31 /* X0 pipe mm "end" */#define R_TILEGX_SHAMT_X0 32 /* X0 pipe shift amount */#define R_TILEGX_SHAMT_X1 33 /* X1 pipe shift amount */#define R_TILEGX_SHAMT_Y0 34 /* Y0 pipe shift amount */#define R_TILEGX_SHAMT_Y1 35 /* Y1 pipe shift amount */#define R_TILEGX_IMM16_X0_HW0 36 /* X0 pipe hword 0 */#define R_TILEGX_IMM16_X1_HW0 37 /* X1 pipe hword 0 */#define R_TILEGX_IMM16_X0_HW1 38 /* X0 pipe hword 1 */#define R_TILEGX_IMM16_X1_HW1 39 /* X1 pipe hword 1 */#define R_TILEGX_IMM16_X0_HW2 40 /* X0 pipe hword 2 */#define R_TILEGX_IMM16_X1_HW2 41 /* X1 pipe hword 2 */#define R_TILEGX_IMM16_X0_HW3 42 /* X0 pipe hword 3 */#define R_TILEGX_IMM16_X1_HW3 43 /* X1 pipe hword 3 */#define R_TILEGX_IMM16_X0_HW0_LAST 44 /* X0 pipe last hword 0 */#define R_TILEGX_IMM16_X1_HW0_LAST 45 /* X1 pipe last hword 0 */#define R_TILEGX_IMM16_X0_HW1_LAST 46 /* X0 pipe last hword 1 */#define R_TILEGX_IMM16_X1_HW1_LAST 47 /* X1 pipe last hword 1 */#define R_TILEGX_IMM16_X0_HW2_LAST 48 /* X0 pipe last hword 2 */#define R_TILEGX_IMM16_X1_HW2_LAST 49 /* X1 pipe last hword 2 */#define R_TILEGX_IMM16_X0_HW0_PCREL 50 /* X0 pipe PC relative hword 0 */#define R_TILEGX_IMM16_X1_HW0_PCREL 51 /* X1 pipe PC relative hword 0 */#define R_TILEGX_IMM16_X0_HW1_PCREL 52 /* X0 pipe PC relative hword 1 */#define R_TILEGX_IMM16_X1_HW1_PCREL 53 /* X1 pipe PC relative hword 1 */#define R_TILEGX_IMM16_X0_HW2_PCREL 54 /* X0 pipe PC relative hword 2 */#define R_TILEGX_IMM16_X1_HW2_PCREL 55 /* X1 pipe PC relative hword 2 */#define R_TILEGX_IMM16_X0_HW3_PCREL 56 /* X0 pipe PC relative hword 3 */#define R_TILEGX_IMM16_X1_HW3_PCREL 57 /* X1 pipe PC relative hword 3 */#define R_TILEGX_IMM16_X0_HW0_LAST_PCREL 58 /* X0 pipe PC-rel last hword 0 */#define R_TILEGX_IMM16_X1_HW0_LAST_PCREL 59 /* X1 pipe PC-rel last hword 0 */#define R_TILEGX_IMM16_X0_HW1_LAST_PCREL 60 /* X0 pipe PC-rel last hword 1 */#define R_TILEGX_IMM16_X1_HW1_LAST_PCREL 61 /* X1 pipe PC-rel last hword 1 */#define R_TILEGX_IMM16_X0_HW2_LAST_PCREL 62 /* X0 pipe PC-rel last hword 2 */#define R_TILEGX_IMM16_X1_HW2_LAST_PCREL 63 /* X1 pipe PC-rel last hword 2 */#define R_TILEGX_IMM16_X0_HW0_GOT 64 /* X0 pipe hword 0 GOT offset */#define R_TILEGX_IMM16_X1_HW0_GOT 65 /* X1 pipe hword 0 GOT offset */#define R_TILEGX_IMM16_X0_HW0_PLT_PCREL 66 /* X0 pipe PC-rel PLT hword 0 */#define R_TILEGX_IMM16_X1_HW0_PLT_PCREL 67 /* X1 pipe PC-rel PLT hword 0 */#define R_TILEGX_IMM16_X0_HW1_PLT_PCREL 68 /* X0 pipe PC-rel PLT hword 1 */#define R_TILEGX_IMM16_X1_HW1_PLT_PCREL 69 /* X1 pipe PC-rel PLT hword 1 */#define R_TILEGX_IMM16_X0_HW2_PLT_PCREL 70 /* X0 pipe PC-rel PLT hword 2 */#define R_TILEGX_IMM16_X1_HW2_PLT_PCREL 71 /* X1 pipe PC-rel PLT hword 2 */#define R_TILEGX_IMM16_X0_HW0_LAST_GOT 72 /* X0 pipe last hword 0 GOT offset */#define R_TILEGX_IMM16_X1_HW0_LAST_GOT 73 /* X1 pipe last hword 0 GOT offset */#define R_TILEGX_IMM16_X0_HW1_LAST_GOT 74 /* X0 pipe last hword 1 GOT offset */#define R_TILEGX_IMM16_X1_HW1_LAST_GOT 75 /* X1 pipe last hword 1 GOT offset */#define R_TILEGX_IMM16_X0_HW3_PLT_PCREL 76 /* X0 pipe PC-rel PLT hword 3 */#define R_TILEGX_IMM16_X1_HW3_PLT_PCREL 77 /* X1 pipe PC-rel PLT hword 3 */#define R_TILEGX_IMM16_X0_HW0_TLS_GD 78 /* X0 pipe hword 0 TLS GD offset */#define R_TILEGX_IMM16_X1_HW0_TLS_GD 79 /* X1 pipe hword 0 TLS GD offset */#define R_TILEGX_IMM16_X0_HW0_TLS_LE 80 /* X0 pipe hword 0 TLS LE offset */#define R_TILEGX_IMM16_X1_HW0_TLS_LE 81 /* X1 pipe hword 0 TLS LE offset */#define R_TILEGX_IMM16_X0_HW0_LAST_TLS_LE 82 /* X0 pipe last hword 0 LE off */#define R_TILEGX_IMM16_X1_HW0_LAST_TLS_LE 83 /* X1 pipe last hword 0 LE off */#define R_TILEGX_IMM16_X0_HW1_LAST_TLS_LE 84 /* X0 pipe last hword 1 LE off */#define R_TILEGX_IMM16_X1_HW1_LAST_TLS_LE 85 /* X1 pipe last hword 1 LE off */#define R_TILEGX_IMM16_X0_HW0_LAST_TLS_GD 86 /* X0 pipe last hword 0 GD off */#define R_TILEGX_IMM16_X1_HW0_LAST_TLS_GD 87 /* X1 pipe last hword 0 GD off */#define R_TILEGX_IMM16_X0_HW1_LAST_TLS_GD 88 /* X0 pipe last hword 1 GD off */#define R_TILEGX_IMM16_X1_HW1_LAST_TLS_GD 89 /* X1 pipe last hword 1 GD off *//* Relocs 90-91 are currently not defined. */#define R_TILEGX_IMM16_X0_HW0_TLS_IE 92 /* X0 pipe hword 0 TLS IE offset */#define R_TILEGX_IMM16_X1_HW0_TLS_IE 93 /* X1 pipe hword 0 TLS IE offset */#define R_TILEGX_IMM16_X0_HW0_LAST_PLT_PCREL 94 /* X0 pipe PC-rel PLT last hword 0 */#define R_TILEGX_IMM16_X1_HW0_LAST_PLT_PCREL 95 /* X1 pipe PC-rel PLT last hword 0 */#define R_TILEGX_IMM16_X0_HW1_LAST_PLT_PCREL 96 /* X0 pipe PC-rel PLT last hword 1 */#define R_TILEGX_IMM16_X1_HW1_LAST_PLT_PCREL 97 /* X1 pipe PC-rel PLT last hword 1 */#define R_TILEGX_IMM16_X0_HW2_LAST_PLT_PCREL 98 /* X0 pipe PC-rel PLT last hword 2 */#define R_TILEGX_IMM16_X1_HW2_LAST_PLT_PCREL 99 /* X1 pipe PC-rel PLT last hword 2 */#define R_TILEGX_IMM16_X0_HW0_LAST_TLS_IE 100 /* X0 pipe last hword 0 IE off */#define R_TILEGX_IMM16_X1_HW0_LAST_TLS_IE 101 /* X1 pipe last hword 0 IE off */#define R_TILEGX_IMM16_X0_HW1_LAST_TLS_IE 102 /* X0 pipe last hword 1 IE off */#define R_TILEGX_IMM16_X1_HW1_LAST_TLS_IE 103 /* X1 pipe last hword 1 IE off *//* Relocs 104-105 are currently not defined. */#define R_TILEGX_TLS_DTPMOD64 106 /* 64-bit ID of symbol's module */#define R_TILEGX_TLS_DTPOFF64 107 /* 64-bit offset in TLS block */#define R_TILEGX_TLS_TPOFF64 108 /* 64-bit offset in static TLS block */#define R_TILEGX_TLS_DTPMOD32 109 /* 32-bit ID of symbol's module */#define R_TILEGX_TLS_DTPOFF32 110 /* 32-bit offset in TLS block */#define R_TILEGX_TLS_TPOFF32 111 /* 32-bit offset in static TLS block */#define R_TILEGX_TLS_GD_CALL 112 /* "jal" for TLS GD */#define R_TILEGX_IMM8_X0_TLS_GD_ADD 113 /* X0 pipe "addi" for TLS GD */#define R_TILEGX_IMM8_X1_TLS_GD_ADD 114 /* X1 pipe "addi" for TLS GD */#define R_TILEGX_IMM8_Y0_TLS_GD_ADD 115 /* Y0 pipe "addi" for TLS GD */#define R_TILEGX_IMM8_Y1_TLS_GD_ADD 116 /* Y1 pipe "addi" for TLS GD */#define R_TILEGX_TLS_IE_LOAD 117 /* "ld_tls" for TLS IE */#define R_TILEGX_IMM8_X0_TLS_ADD 118 /* X0 pipe "addi" for TLS GD/IE */#define R_TILEGX_IMM8_X1_TLS_ADD 119 /* X1 pipe "addi" for TLS GD/IE */#define R_TILEGX_IMM8_Y0_TLS_ADD 120 /* Y0 pipe "addi" for TLS GD/IE */#define R_TILEGX_IMM8_Y1_TLS_ADD 121 /* Y1 pipe "addi" for TLS GD/IE */#define R_TILEGX_GNU_VTINHERIT 128 /* GNU C++ vtable hierarchy */#define R_TILEGX_GNU_VTENTRY 129 /* GNU C++ vtable member usage */#define R_TILEGX_NUM 130__END_DECLS#endif /* elf.h */]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Color Filter Array]]></title>
    <url>%2F2019%2F07%2F28%2FColor-Filter-Array%2F</url>
    <content type="text"><![CDATA[概述色彩滤波阵列，英文名 Color Filter Array 或 Color Filter Mosaic ，简称 CFA 或 CFM，是像素传感器上方的一层马赛克覆层，用于采集图像的色彩信息。一般的光电传感器只能感应光的强度，不能区分光的波长（色彩），因此图像传感器需要通过色彩滤波（Color Filter）以获取像素点的色彩信息。 Color Filter 根据波长对光线进行滤波，特定的 Color Filter 只允许特定波长的光通过。例如，最常见的 Bayer Filter，又称 RGGB Filter，图像传感器通过 Bayer Filter 获得像素点上红色（Red）、绿色（Green）和蓝色（Blue）光的强度信息，再据此通过色彩还原算法（Demosaicing Algorithm）推算像素点的色值。CFA的光谱滤波特性和色彩还原算法决定了CFA色彩采集能力。通常图像传感器的光子通带和CFA的光谱响应范围会大于可见光频谱范围，因此保证图像传感器能够捕获可见光范围内所有颜色信息。 如下 图 1 左 示例图像传感器采集图像的过程。图像传感器通常包括上百万个微小的光腔或感光点来采集图像。在按下相机快门曝光开始的瞬间，系统会开启这些感光点以收集光子，将光子作为电信号存储起来。曝光结束后，系统闭合感光点，通过评估电信号的强度来判断光子多少，并根据比特深度（Bit Depth）将其量化为数字值。 然而，以上过程只能产生灰度图片，不能识别色彩。如 图 1 右 所示 Bayer Filter 叠加在感光点上方，只允许特定波长的光进入感光点。理论上，一般图像传感器的每个感光点只能采集三原色（ RGB）的一种颜色，从而丢弃另外 2/3 的光。因此，图像传感器需要通过还原算法，判断每个像素点上另外两种颜色光的强度，最后推算出该像素点的色值。 根据应用的特点，市场上可能存在不同的 CFA 配置（ Pattern）。在常见的车载前视（Front Camera）应用中，CFA采用 Red-Monochrome（ RCCC ）配置。这种配置中，CFA滤波器结构中包括 3 个空白（ Clear -C ）和 1 个 红光 滤波器。相比于 Bayer Filter 在处理过程中会丢弃 2/3 的光源，RCCC CFA 信号 灵敏度更高，同时通过红色光的强度也足以判断汽车前灯（白色）和尾灯（红色）等情况。 Bayer Filter发明于 1976 年的 Bayer Filter 是目前市场上用途最广的CFA，Bayer Filter CFA 配置中包括 1 个浅红色文字：红光、1 个蓝光和 2 个绿光滤波器（25% Red, 50% Green）, 25% BluB。由于人眼天生对于绿色比较敏感，Bayer Filter 设计绿色光通透性要好于其它两种颜色。这种处理方式相比于等同处理RGB三种颜色，它所还原出来的图像，在人眼看来，噪点更低，细节更加清晰。 如图 2 所示 Bayer Filter 的结构中，两个绿色光滤波器处在对角线位置，它们和红色、蓝色滤波器形成 2x2 的矩阵。 图 3 表示光源经过 Bayer Filter 后的发生的情况，只有特定颜色的光可以穿过相应颜色的滤波器。（图 1 与图 3 表述原理相近！） 在 Bayer Filter 处理色彩信息时，会将 2x2 滤波矩阵当做最基本的全色值单元，通过统计单元内 RGB 光强度的比例，计算得出该像素点的色值，如图 4 所示。 如果 CFA 的基本色彩单元按照图 4 示意的顺序排列，则每四个像素只有一个色值，即纵向和横向分辨率只有实际像素的一半。Bayer Filter 实际上是采用的基本色彩单元是如图 5 所示叠加式分布。在图像中心位置，这种叠加式分布的色彩单元分辨率与像素分辨率一致，精度高；但在图像边缘位置，由于滤波器缺失，精度略差。 Clarity +Clarity+ 是 ONSEMI（原 Aptina ）图像传感器的一种技术，指将原 Bayer Filter 滤波器中绿光滤波器改为透传（Clear）的结构。这样做的好处主要体现在采集光源的强度更高和专用的频带响应技术可以有效提高图像的质量（信噪比和可靠性等）。技术说明见 。 表 1 列出 ONSEMI 几种 Clarity+ CFA 与 Bayer Filter 特性的比较，采用 Clarity+ 技术可有效提高图像的信噪比，但在色彩识别上表现差。 图 7 示意 Clarity+ CFA的工作原理。 图 8 和图 9 分别示例用 Bayer Filter 和 Clarity+ CFA拍摄照片的对比（户外照片来源：Vision System，室内照片来源：ONSEMI）。从照片中可以看到，Clarity+ CFA在弱光环境下的表现要优于 Bayer Filter。 总之，适合人眼的，并不一定适合于机器。在用于自动驾驶图像识别等领域，根据应用的特点，系统设计者应灵活选择不同配置的 CFA。 RCCCRCCC CFA的 75% 部分为透传，其余 25% 为感受红光的滤波器。图 10 示意 RCCC 的色彩滤波器的排列。RCCC 的优点是光灵敏度高，适用于弱光环境。由于 RCCC 只有红色光滤波器，因此主要用在对于红色标识敏感的场合，比如交通灯检测。 RCCBRCCB CFA的 50% 部分为透传，其余红光蓝光滤波器各占 25%。图 11 示意RCCB的色彩滤波器的排列。RCCB 的弱光敏感性比 RCCC 稍差（Clear 部分少嘛），但它分辨色彩的能力更好，采集的图像既可以用于机器分析，也可以用于人眼观察。 MonoMonochrome 为100% 透传，它不能分辨色彩。Mono 配置的弱光灵敏度最高，仅用于对颜色无识别要求的场合，如驾驶员状态检测等。 参考资料 Color Filter ArrayColor Filter Array -WikipediaBayer Filter -WikipediaSlides on Qualcomm Summit -ONUnderstanding Digital Camera Sensors -Cambridge in ColourImage Sensors Build on the Brilliance of Bayer -WikipediaAptina Explains Clarity+ Technology, Reveals 1.1um Pixel Product -BlogspotISS Image Pipe for Alternate CFA Formats -TI]]></content>
      <categories>
        <category>图像处理</category>
      </categories>
      <tags>
        <tag>图像处理</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ESXi下安装iKuai和LEDE双软路由]]></title>
    <url>%2F2019%2F03%2F26%2FESXi%E4%B8%8B%E5%AE%89%E8%A3%85iKuai%E5%92%8CLEDE%E5%8F%8C%E8%BD%AF%E8%B7%AF%E7%94%B1%2F</url>
    <content type="text"><![CDATA[硬件清单 CPU: I5 7200U 网卡: 6个Intel 82583V 10/100/1000以太网 内存: 金士顿 DDR4 2400 8G SSD: 三星 EVO850 USB: 3.0x4个 电源: 技嘉12V 网络拓扑图 ESXi下载ESXi到VMWare官方网站下载ESXi 6.7版本，下载的时候需要注册账号，然后申请试用，序列号请自行购买正版(或Google)。 制作启动U盘 用老毛桃工具到老毛桃官网下载装机版老毛桃软件:然后用老毛桃烧写U盘:在烧写好的U盘根目录中创建一个名字为MYEXT的文件夹，将下载的ESXi的ISO镜像放入该文件夹下: 用软碟通UltraISO到软碟通官网下载UltraISO，然后启动并试用: 软路由U盘启动安装ESXi UltraISO: U盘启动，按照提示安装即可。 老毛桃: 用U盘启动软路由，进入PE，选在老毛桃PE中运行自定义镜像选项，选择刚刚放入MYEXT文件夹中的ESXi镜像，按照提示安装ESXi即可。 进入安装界面:选择安装位置(我这里为了截图方便，我安装在VMWare虚拟机里)，多块硬盘已经要注意选择安装在哪块硬盘以及别安装在U盘上:设置好密码(默认用户名为:root)，按照提示安装即可，注意安装结束的时候会提示先移除安装介质/U盘，然后按下回车重启:若启动前已经将网线插入则ESXi默认会根据网络动态获取IP，若启动前没有插网线则IP会为0.0.0.0: 设置ESXi安装完ESXi后重启，然后按F2进入ESXi设置界面:选择Configure Management Network进入设置:选择IPv4 Configuration选项卡，然后回车:光标移动到Set Static IPv4 address and network configuration，然后用空格键选择，并设置： IPv4 Address: 10.10.10.100 Subnet Mask: 255.255.255.0 Default Gateway: 10.10.10.10 这里设置的默认网关10.10.10.10是给iKuai的后台地址 按下回车键，然后按ESC键并输入Y保存设置:设置生效后的界面如下，可以看出IP变为静态的了: ESXi的web端设置设置笔记本网卡IP将笔记本的网口用网线连接到软路由的LAN1口，并将笔记本有线网卡的IPv4设置为: IPv4: 10.10.10.111 子网掩码: 255.255.255.0 默认网关/路由器: 10.10.10.10 浏览器打开10.10.10.100，然后输入设置的密码进入ESXi后台(用户名为root，密码为安装ESXi时候设置的密码): 激活ESXi默认ESXi有试用期限制，解除限制需要用序列号激活ESXi: 打开虚拟机交换机的混杂模式网络 -&gt; 虚拟交换机 -&gt; vSwitcho -&gt; 编辑设置 -&gt; 安全 -&gt; 混杂模式 -&gt; 接受 网卡非直通情况 网络 -&gt; 虚拟交换机 -&gt; 添加交换机(多少个网口添加多少个) -&gt; 安全 -&gt; 全部接受 网络 -&gt; 端口组 -&gt; 添加端口组(多少个网口添加多少个) -&gt; 安全 -&gt; 全部接受 网卡直通情况主机 -&gt; 硬件 -&gt; PCI设备 -&gt; 下拉选择支持直通来筛选网卡 -&gt; 选中后5个(共6个)端口。这里要注意不要将第一个(第一个好记)端口/LAN1设置为直通，否则导致进不去ESXi后台。 设置好以后要单机重新引导主机，否则可能导致进不去ESXi的后台。 iKuai安装iKuai下载iKuai的ISO文件，然后创建iKuai虚拟机的流程为:存储-&gt;数据存储浏览器-&gt;创建文件夹-&gt;iKuai-&gt;将iKuai的ISO镜像上传到该文件夹下-&gt;虚拟机-&gt;新建虚拟机-&gt;客户机操作系统linux-&gt;客户机操作系统版本-&gt;其他64位-&gt;CD/DVD选择刚刚上传的iKuai的ISO文件-&gt;内存要勾选预留所有客户机内存(全部锁定) 这里要特别注意iKuai虚拟机的内存&gt;=4G ，否则会出现以下错误: 网卡非直通情况重新编辑iKuai虚拟机设 -&gt; 添加网络适配器并选择第6块虚拟网卡VM Network5 ，配置好的界面如下: 网卡直通情况重新编辑iKuai虚拟机设 -&gt; 添加PCI设备并选择对应的第6块网卡，配置好的界面如下: 设置iKuai启动iKuai虚拟机会自动安装iKuai，安装完以后按下回车键，显示:输入数字2，然后设置LAN1的IP地址:10.10.10.10: iKuai的web端设置电脑浏览器打开10.10.10.10，默认用户名admin，默认密码admin，进入iKuai的web客户端绑定WAN口:网络设置 -&gt; 内外网设置 -&gt; 在接口状态会有一个空闲的wan1口 -&gt; 外网网口单击一下绑定上述空闲的wan1口即可:开启一条DHCP服务: 网络设置 -&gt; DHCP服务端 -&gt; 添加DCHP服务: 客户端地址: 10.10.10.101 - 10.10.10.254 子网掩码: 255.255.255.0 网关: 10.10.10.1 这里的网关是LEDE后台的地址 首选DNS: 114.114.114.114 备选DNS: 223.5.5.5 然后重启DHCP服务 LEDE安装LEDE到KoolShare官网下载LEDE的固件，虚拟机转盘或PE下写盘专用-&gt;要选择combined格式，因为uefi格式下LEDE编辑的时候硬盘显示错误:下载完成后解压到本地，然后用StarWind Converte将LEDE的.img格式转换为ESXi虚拟机文件。 创建LEDE虚拟机的流程为:存储-&gt;数据存储浏览器-&gt;创建文件夹-&gt;LEDE-&gt;将上述转化后的两个文件上传到该目录下-&gt;虚拟机-&gt;新建虚拟机-&gt;客户机操作系统linux-&gt;客户机操作系统版本-&gt;其他64位-&gt;删除默认硬盘-&gt;添加现有硬盘-&gt;选择LEDE文件夹下上传的文件-&gt;内存要勾选预留所有客户机内存(全部锁定): 网卡非直通情况重新编辑配置LEDE虚拟机-&gt;设置添加除了最后一块虚拟网卡外的其余虚拟网卡，配置好的界面如下: 网卡直通情况重新编辑配置LEDE虚拟机-&gt;设置添加除了最后一块PCI设备以外的其余PCI设备，并对应其编号(最后一块给iKuai用了，假如错误的将所有PCI设备都加上了同时启动iKuai和LDDE的时候会提示设备错误)，配置好的界面如下: 设置LEDE启动iKuai虚拟机会自动安装iKuai，安装好以后按下回车:设置IP地址为:10.10.10.1 ，在虚拟机终端输入以下命令: 1vim /etc/config/network 然后将option ipaddr 192.168.1.1改为option ipaddr 10.10.10.1 : 然后重启LEDE虚拟机。 LEDE的web端设置电脑浏览器打开10.10.10.10，默认密码koolshare，进入iKuai的web客户端:网络 -&gt; 接口 -&gt; 关闭WAN -&gt; 关闭WAN6 -&gt; 编辑LAN: LAN -&gt; 物理接口 -&gt; 接口 -&gt; 选中: bond0 erspan0 eth0 - echo4 ip_vti0 teql0 所要外接路由器作为AP，则需要将DHCP服务器-&gt;高级设置-&gt;强制勾选上。 LAN-&gt;基本设置-&gt;IPv4网关-&gt;10.10.10.10-&gt;使用自定义的DNS服务器-&gt;114.114.114.114: 设置iKuai和LEDE开机自动启动iKuai和LEDE虚拟机里设置在ESXi的WEB客户端-&gt;虚拟机-&gt;分别在iKuai和LEDE虚拟机上右键-&gt;自动启动 : ESXi中设置自动启动管理-&gt;系统-&gt;自动启动-&gt;编辑设置-&gt;是 : 参考资料 vedio talk 官网 vedio talk YouTube频道 vedio talk 哔哩哔哩频道 tutu生活志 YouTube频道 JS神技能 YouTube频道 七线图 YouTube频道 BIGDONGDONG YouTube频道]]></content>
      <categories>
        <category>路由</category>
      </categories>
      <tags>
        <tag>软路由</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[git教程]]></title>
    <url>%2F2019%2F03%2F21%2Fgit%E6%95%99%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[添加配置12git config [--local | --global | --system] user.name 'Your name'git config [--local | --global | --system] user.email 'Your email' 查看配置1git config --list [--local | --global | --system] 区别123local：区域为本仓库global: 当前用户的所有仓库system: 本系统的所有用户 git add . 和 git add -u区别123456789101112git add . ：将工作空间新增和被修改的文件添加的暂存区git add -u :将工作空间被修改和被删除的文件添加到暂存区(不包含没有纳入Git管理的新增文件)``` # 创建仓库```bashgit init [project folder name] 初始化 git 仓库git add [fileName] 把文件从工作目录添加到暂存区git commit -m'some information' 用于提交暂存区的文件git commit -am'Some information' 用于提交跟踪过的文件git log 查看历史git status 查看状态 额外git add -u 可以添加所有已经被 git 控制的文件到暂存区以前删除文件夹只会用 「-rf」，今天学到了 「-r」，并得知它们两个区别：「-r」 有时候会提示是否确认删除。 给文件重命名的简便方法12git mv [old file name] [new file name]git commit -m 'some information' Tag标签显示已有标签 1git tag 新建标签创建一个含附注类型的标签非常简单，用 -a （译注：取 annotated 的首字母）指定标签名字即可 1git tag -a tag_name -m 'Some Messages' 删除标签删除本地标签: 1git tag -d tag_name 删除remote标签 : 1git push --delete origin tag_name 推送标签到github将本地所有标签推送到remote: 1git push origin --tags 通过git log查看版本演变历史123456git log --all 查看所有分支的历史git log --all --graph 查看图形化的 log 地址git log --oneline 查看单行的简洁历史。git log --oneline -n4 查看最近的4条简洁历史。git log --oneline --all -n4 --graph 查看所有分支最近4条单行的图形化历史。git help --web log 跳转到git log 的帮助文档网页 1git branch -v 查看本地有多少分支 通过图形界面工具来查看版本历史1gitk 探密.git目录查看.git文件夹下的内容： 1ls .git/ -al 如下: 1234567891011121314drwxr-xr-x 1 Andy 197609 0 12月 17 22:38 ./drwxr-xr-x 1 Andy 197609 0 12月 17 21:50 ../-rw-r--r-- 1 Andy 197609 7 12月 17 22:38 COMMIT_EDITMSG-rw-r--r-- 1 Andy 197609 301 12月 12 22:55 config-rw-r--r-- 1 Andy 197609 73 12月 12 22:55 description-rw-r--r-- 1 Andy 197609 96 12月 19 00:00 FETCH_HEAD-rw-r--r-- 1 Andy 197609 23 12月 12 22:55 HEADdrwxr-xr-x 1 Andy 197609 0 12月 12 22:55 hooks/-rw-r--r-- 1 Andy 197609 249 12月 17 22:38 indexdrwxr-xr-x 1 Andy 197609 0 12月 12 22:55 info/drwxr-xr-x 1 Andy 197609 0 12月 12 22:55 logs/drwxr-xr-x 1 Andy 197609 0 12月 17 22:38 objects/-rw-r--r-- 1 Andy 197609 114 12月 12 22:55 packed-refsdrwxr-xr-x 1 Andy 197609 0 12月 12 22:55 refs/ 123456cat命令主要用来查看文件内容，创建文件，文件合并，追加文件内容等功能。cat HEAD 查看HEAD文件的内容git cat-file 命令 显示版本库对象的内容、类型及大小信息。git cat-file -t b44dd71d62a5a8ed3 显示版本库对象的类型git cat-file -s b44dd71d62a5a8ed3 显示版本库对象的大小git cat-file -p b44dd71d62a5a8ed3 显示版本库对象的内容 .git里几个常用的如下： 123456HEAD：指向当前的工作路径config：存放本地仓库（local）相关的配置信息。refs/heads: 存放分支refs/heads/master/: 指向master分支最后一次commitrefs/tags: 存放tag，又叫里程牌 （当这次commit是具有里程碑意义的 比如项目1.0的时候 就可以打tag）objects：核心文件，存储文件 .git/objects/ 存放所有的 git 对象，对象哈希值前 2 位作为文件夹名称，后 38 位作为对象文件名, 可通过 git cat-file -p 命令，拼接文件夹名称+文件名查看。 commit、tree和blob三个对象之间的关系 123commit: 提交时的镜像tree: 文件夹blob: 文件 【同学问题】 每次commit，git 都会将当前项目的所有文件夹及文件快照保存到objects目录，如果项目文件比较大，不断迭代，commit无数次后，objects目录中文件大小是不是会变得无限大？【老师解答】 Git对于内容相同的文件只会存一个blob，不同的commit的区别是commit、tree和有差异的blob，多数未变更的文件对应的blob都是相同的，这么设计对于版本管理系统来说可以省很多存储空间。其次，Git还有增量存储的机制，我估计是对于差异很小的blob设计的吧。 分离头指针情况下的注意事项detached HEAD 进一步理解HEAD和branch1234567891011git checkout -b new_branch [具体分支 或 commit] 创建新分支并切换到新分支git diff HEAD HEAD~1 比较最近两次提交git diff HEAD HEAD~2 比较最近和倒数第三次提交git diff HEAD HEAD^ 比较最近两次提交git diff HEAD HEAD^^ 比较最近和倒数第三次提交``` # 怎么删除不需要的分支？查看分支： ```bashgit branch -av 删除分支命令： 12git branch -d [branch name] #删除git branch -D [branch name] #强制删除 怎么修改最新commit的message1git commit --amend 对最近一次的commit信息进行修改 怎么修改老旧commit的message1git rebase -i [要更改的commit的上一级commit] 接下来就是一个交互过程…这期间会产生一个detached HEAD，然后将改好的commit指向该detached HEAD，如下图所示： git rebase工作的过程中，就是用了分离头指针。rebase意味着基于新base的commit来变更部分commits。它处理的时候，把HEAD指向base的commit，此时如果该commit没有对应branch，就处于分离头指针的状态，然后重新一个一个生成新的commit，当rebase创建完最后一个commit后，结束分离头状态，Git让变完基的分支名指向HEAD。 怎样把连续的多个commit整理成1个1git rebase -i [要更改的commit的上一级commit] 123456789101112131415161718192021222324252627282930$ git log --graph* commit 7d3386842a2168ae630b65f687364243139c893c (HEAD -&gt; master, origin/master, origin/HEAD)| Author: aimuch &lt;liuvay@gmail.com&gt;| Date: Thu Dec 20 23:34:18 2018 +0800|| update|* commit 9eb3188bbc63cae1bfed5f9dfc1593019e360a6a| Author: aimuch &lt;liuvay@gmail.com&gt;| Date: Wed Dec 19 20:30:14 2018 +0800|| update|* commit bbe6d53e2b477f2d2aa402af7f315ecdfc63459e| Author: aimuch &lt;liuvay@gmail.com&gt;| Date: Wed Dec 19 20:12:29 2018 +0800|| update|* commit 7735d66ded7f98adeca93d96fb7be12ffb67c76a| Author: aimuch &lt;liuvay@gmail.com&gt;| Date: Wed Dec 19 00:27:00 2018 +0800|| update|* commit d9f9d115fab425b5654f8ccfec6a996aef35b76b| Author: aimuch &lt;liuvay@gmail.com&gt;| Date: Wed Dec 19 00:23:36 2018 +0800|| update 123456789101112131415161718192021pick 7735d66 update #合并到该commit上squash bbe6d53 updatesquash 9eb3188 updatesquash 7d33868 update# Rebase d9f9d11..7d33868 onto d9f9d11 (4 commands)## Commands:# p, pick &lt;commit&gt; = use commit# r, reword &lt;commit&gt; = use commit, but edit the commit message# e, edit &lt;commit&gt; = use commit, but stop for amending# s, squash &lt;commit&gt; = use commit, but meld into previous commit# f, fixup &lt;commit&gt; = like "squash", but discard this commit's log message# x, exec &lt;command&gt; = run command (the rest of the line) using shell# b, break = stop here (continue rebase later with 'git rebase --continue')# d, drop &lt;commit&gt; = remove commit# l, label &lt;label&gt; = label current HEAD with a name# t, reset &lt;label&gt; = reset HEAD to a label# m, merge [-C &lt;commit&gt; | -c &lt;commit&gt;] &lt;label&gt; [# &lt;oneline&gt;]# . create a merge commit using the original merge commit's# . message (or the oneline, if no original merge commit was# . specified). Use -c &lt;commit&gt; to reword the commit message. 12345678910111213141516# This is a combination of 4 commits.# This is the 1st commit message:update# This is the commit message #2:update# This is the commit message #3:update# This is the commit message #4:update git修改gitignore后生效1234git rm -r --cached . #清除缓存git add . #重新trace filegit commit -m "update .gitignore" #提交和注释git push origin master #可选，如果需要同步到remote上的话 怎么比较暂存区和HEAD所含文件的差异？1git diff --cached 或者 1git diff --staged 怎么比较工作区和暂存区所含文件的差异？1git diff 1git diff -- [filename/pathname] #比较具体的文件或者路径 如何让暂存区恢复成和HEAD的一样？1git reset HEAD 1234git reset 有三个参数--soft 这个只是把 HEAD 指向的 commit 恢复到你指定的 commit，暂存区 工作区不变--hard 这个是 把 HEAD， 暂存区， 工作区 都修改为 你指定的 commit 的时候的文件状态--mixed 这个是不加时候的默认参数，把 HEAD，暂存区 修改为 你指定的 commit 的时候的文件状态，工作区保持不变 如何让工作区的文件恢复为和暂存区一样？1git checkout -- &lt;file&gt;... 恢复工作区用checkout，恢复暂存区用reset。 怎样取消暂存区部分文件的更改？1git reset HEAD -- &lt;file&gt;... 看看不同提交的指定文件的差异1git diff commit-id1 commit-id2 -- &lt;file&gt;... 正确删除文件的方法1git rm &lt;file&gt; 开发中临时加塞了紧急任务怎么处理？12git stash list #查看stash中存放的信息git stash #将当前工作区内容存放到"堆栈"中 1git stash apply #把"堆栈"里面的内容弹出到工作区中，同时"堆栈"中信息还在 1git stash pop #把"堆栈"里面的内容弹出到工作区中，同时丢弃"堆栈"中最新的信息 如何指定不需要Git管理的文件？1.gitignore 【同学提问】 如果提交commit后，想再忽略一些已经提交的文件，怎么处理。【老师回答】 The problem is that .gitignore ignores just files that weren’t tracked before (by git add). Run git reset name_of_file to unstage the file and keep it. In case you want to also remove given file from the repository (after pushing), use git rm –cached name_of_file.把想忽略的文件添加到 .gitignore ；然后通过 git rm – cached name_of_file 的方式删除掉git仓库里面无需跟踪的文件。 添加远程仓库1git remote add [shortname] [url] 配置公私钥检查是否已存在相应的ssh key:打开终端, 输入: 1ls -al ~/.ssh 核对列出来的ssh key是否有已存在的，假如你没有看到列出的公私钥对，或是不想再用之前的公私钥对，你可以选择下面的步骤生成新的公私钥对. 生成新的ssh key,并添加至ssh-agent:2.1 打开终端, 使用ssh key生成命令：1ssh-keygen -t rsa -b 4096 -C "your_email@example.com" 注意 ：后面的邮箱对应相应账号的邮箱，假如是github的账号，且注册账号的邮箱为xxx@gmail.com，则命令行为： 1234567ssh-keygen -t rsa -b 4096 -C "xxx@gmail.com"`。 ``` ### 接下来会提示你保存的`ssh key`的名称以及路径。 默认路径是`/home/you/.ssh/id_rsa`(`you`为用户个人目录)即`~/.ssh/id_rsa`。这一步很重要，如果你使用默认的，且下一个账号也是使用默认的路径和文件名，那么之前的`ssh key`就会被后来生成的`ssh key`重写，从而导致之前的账号不可用。因此，正确的做法是给它命名，最后以应用名进行命名，因为更容易区分。以下是我个人配的： ```shell/home/andy/.ssh/github_rsa 接下来会提示设置ssh安全密码。这一步可以使用默认的（即不设置密码），直接按回车即可。这里会生成xxx_rsa和xxx_rsa.pub两个文件,xxx_rsa是生成的ssh key的私钥名，xxx_rsa.pub是生成的ssh key的公钥名，私钥要放在本地，公钥要放在服务器或github的Settings-&gt;SSHand GPG keys-&gt;New SSH key上。 ssh key生成后，接下来需要为ssh key添加代理。这是为了让请求自动对应相应的账号。网上很多文章写到需要另外配置config文件，经本人亲测，其实是不需要的，在生成了ssh key后，通过为生成的ssh key添加代理即可，为ssh key添加代理命令:ssh-add ~/.ssh/xxx_rsa， xxx_rsa是你生成的ssh key的私钥名，我的设置为: 1ssh-add ~/.ssh/github_rsa 将生成的xxx_rsa.pub公钥内容添加到GitHub的SSH keys页面上。 连接测试接下来我们测试是否配置成功，打开终端，输入: 1ssh -T git@github.com 怎么快速淘到感兴趣的开源项目UI界面高级搜索： https://github.com/search/advanced 命令高级搜索： 1git 最好 学习 资料 in:readme stars:&gt;1000 language:c 上述命令的意思是搜索reademe中包含git、最好、学习、资料”且star大于1000的，用C语言编写的仓库。]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[caffe数据格式]]></title>
    <url>%2F2019%2F03%2F21%2Fcaffe%E6%95%B0%E6%8D%AE%E6%A0%BC%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[Google Protocol Buffers 概述概述Protocol Buffers 是一种轻便高效的结构化数据存储格式，可以用于结构化数据串行化，或者说序列化。它很适合做数据存储或 RPC(Remote Procedure Call) 数据交换格式。可用于通讯协议、数据存储等领域的语言无关、平台无关、可扩展的序列化结构数据格式。目前提供了 C++、Java、Python 三种语言的 API。 本文概述介绍Protocol Buffers，以及开始如何开始Protocol Buffers之旅，本系列主要以Java为主。 以下Protocol Buffers简称PB。 Protocol Buffers是什么Protocol Buffers提供了一种灵活，高效，自动序列化结构数据的机制，可以联想XML，但是比XML更小，更快，更简单。仅需要自定义一次你所需的数据格式， 然后用户就可以使用Protocol Buffers自动生成的特定的源码，方便的读写用户自定义的格式化的数据。不限语言，不限平台。还可以在不破坏原数据格式的基础上，依据老的数据格式， 更新现有的数据格式。 Protocol Buffers如何工作的在PB中，有一种.proto类型的文件，用户 在.proto文件中定义PB “Message”来指定所需要序列化的数据的格式。每一个PB Message都是一个小的信息逻辑单元，包含了一些列的name-value对。下面举例说明一个简单地.proto文件，他定义了一条包含一个 Person信息的Message： 123456789101112131415161718message Person &#123; required string name = 1; required int32 id = 2; optional string email = 3; enum PhoneType &#123; MOBILE = 0; HOME = 1; WORK = 2; &#125; message PhoneNumber &#123; required string number = 1; optional PhoneType type = 2 [default = HOME]; &#125; repeated PhoneNumber phone = 4;&#125; 如上代码所示，PB message 格式非常简单。每种类型的message包含一个或者多个唯一编码字段，每个字段由名称和值类型组成，值类型可以使数字(整形或者浮点型)，布尔值，字符 串，原始字节，甚至是其他的PB message。PB允许message中包含message，已达到分层嵌套。可以定义可选字段，必填字段以及重复字段。想要了解更多如何 写.proto 文件，可以访问：Protocol Buffer Language Guide 定 义好PB message后，选择合适语言的PB编译器，编译.proto文件，就可以生成存取数据的相关类。这些类包括简单的设置及读取字段的方法，也包括对整个 数据结构的message与二进制之间的转换。举个例子，如果你使用的语言是java，运行编译器编译上例.proto文件后，生成的类中包含一个 Person类。使用该类，就可以计算，序列化以及检索PB message。如下代码: 1234567891011121314151617public static void main(String[] args) throws IOException &#123; Person john = Person .newBuilder() .setId(1) .setName("john") .setEmail("john@youku.com") .addPhone( PhoneNumber .newBuilder() .setNumber("1861xxxxxxx") .setType(PhoneType.WORK) .build()) .build(); FileOutputStream output = new FileOutputStream("abc.txt"); john.writeTo(output); output.close();&#125; 接下来，你可以用如下代码读取： 12345678910public static void main(String[] args) throws IOException &#123; FileInputStream input = new FileInputStream("abc.txt"); Person person = Person.parseFrom(input); System.out.println(person.getId()); System.out.println(person.getName()); System.out.println(person.getEmail()); System.out.println(person.getPhoneCount()); System.out.println(person.getPhone(0).getNumber()); System.out.println(person.getPhone(0).getType());&#125; PB是易于扩展的，可以向后兼容的，我们可以在PB message中添加新的字段，这样，在parse的时候，老版本的数据就会简单的忽略新增加的字段。因此，如果现有通信协议使用了PB作为其数据格式，我们可以直接扩展该通信协议，而不必担心这将会破坏现有的代码。 对于使用.proto文件生成PB 客户端代码，可以参看这方面的完整教程：API Reference section。想要学习了解PB message是如何编码的，可以参见：Protocol Buffer Encoding。 为什么不直接使用XML呢？如果要序列化结构化数据，比起XML，PB实在是有许多的优点可以道道~ 更简单比XML小310倍比XML快20100倍语义定义明确自动生成数据存取类，更容易使用假如我们要模拟一个Person，该对象包含name和email属性，如果用XML，我们定义如下： 1234&lt;person&gt; &lt;name&gt;John Doe&lt;/name&gt; &lt;email&gt;jdoe@example.com&lt;/email&gt;&lt;/person&gt; 对应的，PB如下： 1234person &#123; name: "John Doe" email: "jdoe@example.com"&#125; 请注意：这里仅是PB格式的一种直观表示，真实的PB并非这样存储，实际上，在链路中，PB数据时二进制格式的。 当这段数据编码为PB二进制格式时，其实际大小大概是28bytes，编码时间为100200纳秒。如果用XML的话，即使去除空格，大小也至少为69bytes，编码时间大概需要500010,000纳秒。 同样，解析这段代码，PB比XML要方便许多。用PB的话： 12person.getName();person.getEmail(); 而用XML的话： 12personNode.getElementsByTagName("name")personNode.getElementsByTagName("email") 相比起来，PB更直接，而且不需要遍历节点等XML操作。 但是，金无足赤，人无完人，PB也一样。对于有很多标签的，基于文本的数据(例如HTML)，XML就完胜PB。XML是子描述的，可以随机且交错读取读取文本节点。XML是自描述的，而PB不是，PB必须要有格式定义文件(.proto 文件) 一点历史PB由Google开发，最初是用于处理索引服务器的请求/响应协议。在有PB之前，Google使用手动编组和解组的方式来处理请求/相应协议。这种方式需要支持许多版本的协议，这就导致一些代码非常的丑陋，例如： 12345678if (version == 3) &#123; ...&#125; else if (version &gt; 4) &#123; if (version == 5) &#123; ... &#125; ...&#125; 另外，这种显示格式的协议同样将新发布的协议版本也搞得非常复杂，因为开发者必须在启用新的协议之前，确认所有的服务器，包括请求的发起者以及实际处理请求者，他们都能够理解新的协议。 PB即被设计来解决这些问题： 要可以非常容易的引入新字段，不需要检查数据的中间服务器 能够简单地解析数据，并且无须知道数据所有的字段就可以传输数据。格式能够更加的自描述一些，并且可以被多用语言处理(C ++， Java，Python等)至此，虽然解决了诸多问题，但用户依然需要手写他们的解析及编码代码。 随着系统的发展，PB逐渐形成了许多新的特性及用法： 自动生成序列化及反序列化代码，避免手动解析除了被用在短生命周期的RPC请求，也开始将PB作为一种方便的自描述格式去存储持久化数据。Server RPC interfaces 开始被声明为协议文件的一部分，使用PB compiler 生成stub类，用户可以使用自己实现的服务器接口来覆盖他们。Google Protocol Buffer( 简称 Protobuf) 是 Google 公司内部的混合语言数据标准，目前已经正在使用的有超过 48,162 种报文格式定义和超过 12,183 个 .proto 文件。他们用于 RPC 系统和持续数据存储系统。 译自：https://developers.google.com/protocol-buffers/docs/overview Google Protocol Buffers 入门 Protocol Buffers 语法指南 Google Protocol Buffers 编码(Encoding)参考资料 Google Protocol Buffers 概述]]></content>
      <categories>
        <category>Caffe</category>
      </categories>
      <tags>
        <tag>Caffe</tag>
        <tag>AI</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[搭建深度学习服务器环境]]></title>
    <url>%2F2019%2F03%2F17%2F%E6%90%AD%E5%BB%BA%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%8E%AF%E5%A2%83%2F</url>
    <content type="text"><![CDATA[安装Ubuntu和Windows双系统详细的安装双系统就不过多介绍了，可以参考这篇文章，但是在安装过程中有几个问题需要说明： 安装Ubuntu之前首先要把BIOS的security boot关闭，否则会出现NVIDIA驱动安装完以后重启电脑会反复进入登录界面。 硬盘分区的时候可以只分为swap、UEFI、\和\home四个分区，不分\home也可以，在挂在\分区的时候会自动生成\home和其他分区，但是在重装系统的时候\home无法重新挂在之前的\home分区导致数据丢失（类似于Windows的非系统盘）。 重装Ubuntu系统时请早Windows下用EasyUEFI软件将Ubuntu的引导项删除。 安装NVIDIA驱动安装驱动NVIDIA所需的依赖包在终端里依次输入以下命令安装驱动所需的依赖包 12345sudo apt-get install libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libhdf5-serial-dev protobuf-compilersudo apt-get install --no-install-recommends libboost-all-devsudo apt-get install libopenblas-dev liblapack-dev libatlas-base-devsudo apt-get install libgflags-dev libgoogle-glog-dev liblmdb-devsudo apt-get install git cmake build-essential 假如有安装包一直下载失败，可以使用： 1sudo apt-get update 禁用Ubuntu自带的显卡驱动Ubuntu 16.04 自带 nouveau显卡驱动，这个自带的驱动是不能用于CUDA的，需要卸载重装。假如重装过显卡驱动则可跳过这一步。没有重装过的就跟着我的步骤往下走。 首先得禁用Ubuntu自带的显卡驱动nouveau，只有在禁用掉 nouveau 后才能顺利安装 NVIDIA 显卡驱动，禁用方法就是在 /etc/modprobe.d/blacklist-nouveau.conf文件中添加一条禁用命令，首先需要打开该文件，通过以下命令打开： 1sudo gedit /etc/modprobe.d/blacklist-nouveau.conf 打开后发现该文件中没有任何内容，写入： 12blacklist nouveau options nouveau modeset=0 保存后关闭文件，注意此时还需执行以下命令使禁用 nouveau 真正生效： 1sudo update-initramfs -u 然后输入以下命令，若什么都没有显示则禁用nouveau生效了(重启电脑有可能会出现黑屏，原因是禁用了集成显卡，系统没有显卡驱动)： 1lsmod | grep nouveau 安装NVIDIA官方显卡驱动通过Ctrl + Alt + F1进入文本模式，输入帐号密码登录，通过Ctrl + Alt + F7可返回图形化模式，在文本模式登录后首先关闭桌面服务： 1sudo service lightdm stop 这里会要求你输入账户的密码。然后通过Ctrl + Alt + F7发现已无法成功返回图形化模式，说明桌面服务已成功关闭，注意此步对接下来的 NVIDIA 显卡驱动安装尤为重要，必需确保桌面服务已关闭。按Ctrl + Alt + F1再次进入终端命令行界面，先卸载之前的显卡驱动(注意以下命令在Zsh的shell环境下不认识*，需要切换到bash的shell环境)： 1sudo apt-get purge nvidia* 加入官方ppa源： 1sudo add-apt-repository ppa:graphics-drivers/ppa 之后刷新软件库并安装显卡驱动： 1234sudo apt-get updatesudo apt-get install nvidia-418 nvidia-settings nvidia-prime # CUDA 10.1#sudo apt-get install nvidia-390 nvidia-settings nvidia-prime # cuda 8.0 或 CUDA 9.0#sudo apt-get install nvidia-415 nvidia-settings nvidia-prime # CUDA 9.0 重启电脑，通过下面命令查看显卡信息： 1nvidia-settings 配置NVIDIA环境变量使用 gedit 命令打开配置文件： 1sudo gedit ~/.bashrc 打开后在文件最后加入以下两行内容： 12export LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATHexport LD_LIBRARY_PATH=/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH 保存并退出，运行以下内容使环境变量生效： 1source ~/.bashrc 查看NVIDIA驱动版本1cat /proc/driver/nvidia/version 或者 1nvidia-smi 安装CUDA安装CUDA步骤推荐下载安装.run格式文件。 安装CUDA9.0以及之前版本 安装完显卡驱动后，CUDA Toolkit和samples可单独安装，直接在终端运行安装，无需进入文本模式： 1sudo sh cuda_9.0.176_384.81_linux.run --no-opengl-libs 执行此命令约1分钟后会出现安装协议要你看，刚开始是0%，此时长按回车键让此百分比增长，直到100%，然后按照提示操作即可，先输入 accept ，是否安装显卡驱动选择no: 12Install NVIDIA Accelerated Graphics Driver for Linux-x86_64 387.26?(y)es/(n)o/(q)uit: n 其余的一律按默认或者y进行安装即可。 安装结束以后在/usr/local/目录下查看，可以看到不但生成对应版本的cuda-9.0文件夹，还生成一个相应软连接文件夹cuda: 安装CUDA10.1 按照前面安装NVIDIA驱动方法安装NVIDIA-418驱动 12chmod 777 cuda_10.1.105_418.39_linux.runsudo sh ./cuda_10.1.105_418.39_linux.run 输入accept进入安装界面: 不要安装CUDA自带的NVIDIA驱动，将光标移动到Driver选项上，按下空格键取消选择安装NVIDIA驱动，移动光标再到Install上然后按回车。 若已经安装旧版本的CUDA版本，会出现以下提示，输入yes继续安装即可: 安装成功后提示: 1234567891011121314151617181920============ Summary ============Driver: Not SelectedToolkit: Installed in /usr/local/cuda-10.1/Samples: Installed in /home/andy/, but missing recommended librariesPlease make sure that- PATH includes /usr/local/cuda-10.1/bin- LD_LIBRARY_PATH includes /usr/local/cuda-10.1/lib64, or, add /usr/local/cuda-10.1/lib64 to /etc/ld.so.conf and run ldconfig as rootTo uninstall the CUDA Toolkit, run cuda-uninstaller in /usr/local/cuda-10.1/binPlease see CUDA_Installation_Guide_Linux.pdf in /usr/local/cuda-10.1/doc/pdf for detailed information on setting up CUDA.***WARNING: Incomplete installation! This installation did not install the CUDA Driver. A driver of version at least 418.00 is required for CUDA 10.1 functionality to work.To install the driver using this installer, run the following command, replacing &lt;CudaInstaller&gt; with the name of this run file: sudo &lt;CudaInstaller&gt;.run --silent --driverLogfile is /var/log/cuda-installer.log 安装成功以后在/usr/local/目录下查看，可以看到不但生成对应版本的cuda-10.1文件夹，还生成一个相应软连接文件夹cuda或者将之前cuda9.0生成的cuda软连接重新指向cuda10.1文件夹: 修改配置文件安装完成后配置CUDA环境变量，使用vim配置文件： 1vim ~/.bashrc 在该文件最后加入以下两行并保存： 123# CUDAexport PATH=/usr/local/cuda/bin:$PATH #/usr/local/cuda和/usr/local/cuda-10.1是同一个文件夹，两者通过软连接相连export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH 使该配置生效： 1source ~/.bashrc 检验CUDA 是否安装成功，输入： 123cd /usr/local/cuda/samples/1_Utilities/deviceQuerysudo make./deviceQuery CUDA 9.0 PASS: CUDA 10.1 PASS: 查看CUDA版本1cat /usr/local/cuda/version.txt CUDA 9.0 CUDA 10.1 卸载CUDA的方法1234567cd /usr/local/cuda/bin# CUDA 9.0sudo ./uninstall_cuda_9.0.pl# CUDA 10.1sudo ./cuda-uninstaller 卸载完成后如果显示：Not removing directory, it is not empty: /usr/local/cuda-9.0 ，假如需要重装CUDA 9.0的话就把这个文件夹删除。在/usr/local/路径下输入： 12345# CUDA 9.0sudo rm -rf cuda-9.0# CUDA 10.1sudo rm -rf cuda-10.1 安装CUDA过程中遇到的问题CUDA 10.1提示安装失败:查看vim /var/log/cuda-installer.log显示:ERROR: You appear to be running an X server; please exit X，是在安装CUDA的时候选择的安装CUDA自带的NVIDIA显卡驱动导致的，解决方法是:(1)在安装CUDA的时候不要选择安装CUDA自带的NVIDIA驱动；(2)若要用CUDA自带的NVIDIA显卡驱动，则Ctrl + Alt + F1在终端命令行进行安装: 1234sudo service lightdm stopbash # Switch from zsh environment to bash environmentsudo apt-get purge nvidia*sudo sh ./cuda_10.1.105_418.39_linux.run 若是在终端命令行下安装的CUDA，则需要安装成功后运行: 1sudo service lightdm start 然后再按通过Ctrl + Alt + F7可返回图形化模式。 安装cuDNN下载安装cuDNNcuDNN要根据CUDA选择相应平台版本，在Ubuntu16.04下(Ubuntu其他版本类似)到cuDNN官网推荐下载安装.tgz格式的文件, 不推荐下载安装.deb格式，若误装了.deb格式的cuDNN请用以下命令进行卸载: 123456789101112131415dpkg -l |grep -i libcudnn* # 查看.deb安装的cudnnsudo apt-get purge libcudnn×``` 下面以安装**cuDNN v7.5.0**为例安装，其他版本类似，只需要将版本号改一下即可: ![cuDNN Download](cudnn.png) 解压`cudnn-10.1-linux-x64-v7.5.0.56.tgz`到当前文件夹，得到一个`cuda`文件夹，该文件夹下有`include`和 `lib64`两个文件夹: ![cuDNN folder](cuDNN-folder.png) **若安装了多个`CUDA`版本，要特别注意`/usr/local/cuda`软连接到了哪个版本的`CUDA`。** 命令行进入其中的`include`文件夹路径下，然后进行以下操作：```shellcd ~/Download/cuda/include/sudo cp cudnn.h /usr/local/cuda/include/ #复制头文件 然后命令行进入cuda/lib64文件夹路径下(其实cuda/lib64文件夹下通过Beyond Compare查看，libcudnn.so、libcudnn.so.7和libcudnn.so.7.5.0是同一个文件的不同扩展名)，运行以下命令： 1234567cd ~/Download/cuda/lib64/sudo cp lib* /usr/local/cuda/lib64/ #复制动态链接库sudo chmod a+r /usr/local/cuda/include/cudnn.h /usr/local/cuda/lib64/libcudnn*cd /usr/local/cuda/lib64/sudo rm -rf libcudnn.so libcudnn.so.7 #删除原有动态文件sudo ln -s libcudnn.so.7.5.0 libcudnn.so.7 #生成软链接sudo ln -s libcudnn.so.7 libcudnn.so #生成软链接 随后需要将路径/usr/local/cuda/lib64添加到动态库，分两步：1）安装vim, 输入： 1sudo apt-get install vim-gtk 2）配置，输入： 1sudo vim /etc/ld.so.conf.d/cuda.conf 编辑状态下，输入： 1/usr/local/cuda/lib64 保存退出，输入下面代码使其生效： 1sudo ldconfig 安装完成后可用nvcc -V命令验证是否安装成功，若出现以下信息则表示安装成功： 1234nvcc: NVIDIA (R) Cuda compiler driverCopyright (c) 2005-2019 NVIDIA CorporationBuilt on Fri_Feb__8_19:08:17_PST_2019Cuda compilation tools, release 10.1, V10.1.105 查看cuDNN版本: 1cat /usr/local/cuda/include/cudnn.h | grep CUDNN_MAJOR -A 2 cuDNN常见问题123Error : Failed to get convolution algorithm. This is probably because cuDNN failed to initialize, so try looking to see if a warning log message was printed above. 出现上述问题是安装的cuDNN版本跟CUDA和TensorFlow相兼容的版本不符合，重新安装指定版本的cuDNN即可。 参考资料 cuDNN官方安装指导 CUDA多版本问题在实验的时候有些算法跟当前生效(安装)的CUDA和cuDNN版本不一致，所以需要同时安装多个版本，这里就是解决同时管理多个CUDA版本问题. 首先按照上述介绍的安装CUDA和对应版本的安装cuDNN，安装实验环境依赖的版本； 默认/usr/local/cuda是软连接到最新安装的CUDA文件夹上的: 删除已经软连接的/usr/local/cuda，将需要的CUDA-X.0安装文件夹软连接到/usr/local/cuda上, 例如需要CUDA 9.0这个版本: 123456789 cd /usr/local/ sudo rm cuda sudo ln -s /usr/local/cuda-9.0 /usr/local/cuda ``` ![cuda3](cuda9-cuda10.1.png) 4. 由于在安装`CUDA`的时候已经将`cuda`加入了环境变量，所以不用再加入了。 5. 查看`CUDA`版本 ```shell cat /usr/local/cuda/version.txt Anaconda安装Anaconda下载Anaconda的sh文件Anaconda3-5.2.0-Linux-x86_64.sh，然后运行以下代码： 12chmod a+x ./Anaconda3-5.2.0-Linux-x86_64.sh #chmod 777 ./Anaconda3-5.2.0-Linux-x86_64.shbash Anaconda3-5.2.0-Linux-x86_64.sh 或者 12chmod 777 Anaconda3-5.3.1-Linux-x86_64.shbash Anaconda3-5.3.1-Linux-x86_64.sh conda install -c menpo opencv3命令有时候会显示权限不够permission issue。这是因为你安装anaconda时用的是sudo，这时候需要修改anaconda3文件夹权限: 1sudo chown -R 你的用户名 /home/你的用户名/anaconda3 屏蔽Anaconda1vim ~/.bashrc 然后屏蔽后的结果如下： 1234# added by Anaconda3 5.3.1 installer#export PATH="/home/andy/anaconda3/bin:$PATH"#export LD_LIBRARY_PATH=~/anaconda3/lib:$LD_LIBRARY_PATH#export CPLUS_INCLUDE_PATH=~/anaconda3/include/python3.6m 其实这里涉及到linux可执行程序搜索路径的问题，上述PATH=&quot;/home/andy/anaconda3/bin:$PATH&quot;将/home/andy/anaconda3/bin放在了原始的$PATH前面，这样系统在执行的时候首先检查要可执行文件是否在/home/andy/anaconda3/bin中，然后再从$PATH中搜索，理解了这个关系，上述代码可以改为，这样改了以后将不需要重建Anaconda软连接这一步操作了: 1234# added by Anaconda3 5.3.1 installerexport PATH="$PATH：/home/andy/anaconda3/bin"export LD_LIBRARY_PATH=$LD_LIBRARY_PATH：~/anaconda3/libexport CPLUS_INCLUDE_PATH=~/anaconda3/include/python3.6m Anaconda最新版屏蔽如下 12345678910111213141516# added by Anaconda3 5.3.1 installer# &gt;&gt;&gt; conda init &gt;&gt;&gt;# !! Contents within this block are managed by 'conda init' !!#__conda_setup="$(CONDA_REPORT_ERRORS=false '/home/andy/anaconda3/bin/conda' shell.bash hook 2&gt; /dev/null)"#if [ $? -eq 0 ]; then# \eval "$__conda_setup"#else# if [ -f "/home/andy/anaconda3/etc/profile.d/conda.sh" ]; then# . "/home/andy/anaconda3/etc/profile.d/conda.sh"# CONDA_CHANGEPS1=false conda activate base# else# \export PATH="/home/andy/anaconda3/bin:$PATH"# fi#fi#unset __conda_setup# &lt;&lt;&lt; conda init &lt;&lt;&lt; 最后命令行输入以下命令： 1source ~/.bashrc 必须重启电脑 重建Anaconda软连接重建原理由于linux系统默认搜索可执行文件的顺序为/bin -&gt; /usr/bin -&gt; /usr/local/bin ，而前两个为系统的可执行文件存放的地方，/usr/local/bin为用户自定义的可执行文件存放区，所以只需要将Anaconda的~/anaconda3/bin/可执行文件软连接到/usr/local/bin即可。 当需要重新使用Anaconda的时候，只需要将Anaconda的执行文件软连接到/usr/local/bin里，注意这里要用绝对路径，否则不起作用，如： 123sudo ln -s /home/andy/anaconda3/bin/conda /usr/local/bin/condasudo ln -s /home/andy/anaconda3/bin/activate /usr/local/bin/activatesudo ln -s /home/andy/anaconda3/bin/deactivate /usr/local/bin/deactivate 首先注意usr 指 Unix System Resource，而不是User, /usr/bin下面的都是系统预装的可执行程序，会随着系统升级而改变 /usr/local/bin目录是给用户放置自己的可执行程序的地方，推荐放在这里，不会被系统升级而覆盖同名文件 软连接后使用时：首先用以下命令查看anaconda环境(自带为base): 1conda env list 激活环境用： 123conda activate [env name]# orsource activate [env name] 注意: 上面[env name]用具体的环境名代替，如conda activate base. 取消激活环境用： 123conda deactivate# orsource deactivate Anaconda虚拟环境创建新的虚拟环境： 1conda create -n venv python=3.6 # select python version 激活虚拟环境: 1source activate venv 删除虚拟环境: 1conda env remove -n venv 安装opencv下载OpenCV进入官网 : http://opencv.org/releases.html 或者 https://github.com/opencv/opencv/releases, 选择 需要的 x.x.x.zip版本, 下载 opencv-x.x.x.zip : 1234cdwget https://github.com/opencv/opencv/archive/x.x.x.zipchmod 777 x.x.x.zipunzip x.x.x.zip 编译OpenCV随后解压到你要安装的位置，命令行进入已解压的文件夹 opencv-x.x.x 目录下，执行： 12345cd opencv-x.x.xmkdir build # 创建编译的文件目录cd buildcmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=/usr/local -DBUILD_JPEG=ON -DBUILD_TIFF=ON -DBUILD_PNG=ON ..make -j8 #编译 遇到一下报错信息有两种可能： 在编译opencv3.4.0源码的时候，会下载诸如ippicv_2017u3_lnx_intel64_20170822.tgz的压缩包，如果下载失败，请下载离线包，解压该文件，会得到.cache文件夹，用此文件夹覆盖opencv源码文件夹下的.cache文件夹，再重新编译即可。.cahce文件夹为隐藏文件，可用ctrl+h查看。 若本机里安装了Anaconda，推荐屏蔽Anaconda，否则需要在~/.bashrc 或 ~/.zshrc中加入： 12345# added by Anaconda3 installerexport PATH="/home/andy/anaconda3/bin:$PATH"export LD_LIBRARY_PATH=~/anaconda3/lib:$LD_LIBRARY_PATHexport CPLUS_INCLUDE_PATH=~/anaconda3/include/python3.6mexport PATH="$PATH:$HOME/bin" 在98%的时候会等很久很久，属于正常现象。 安装OpenCV编译成功后安装： 1sudo make install #安装 运行以下命令刷新opencv动态链接库： 1sudo ldconfig 安装完成后通过查看 opencv 版本验证是否安装成功： 1pkg-config --modversion opencv 若运行以上命令提示一下错误：临时解决方法 1234567export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig``` **彻底解决方法** 接下来要给系统加入`opencv`库的环境变量: 用`gedit`打开`/etc/ld.so.conf`，注意要用sudo打开获得权限，不然无法修改， 如：```shellsudo gedit /etc/ld.so.conf 在文件中加上一行: 1/usr/local/lib /user/local是opencv安装路径 就是makefile中指定的安装路径。 再运行: 1sudo ldconfig bash 所有用户修改/etc/bash.bashrc文件: 1sudo vim /etc/bash.bashrc 在文件末尾加入： 12PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/local/lib/pkgconfig export PKG_CONFIG_PATH 运行source /etc/bash.bashrc使其生效。 当前用户修改~/.bashrc文件: 1vim ~/.bashrc 在文件末尾加入： 12PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/local/lib/pkgconfig export PKG_CONFIG_PATH 运行source ~/.bashrc使其生效。 zsh 所有用户 1vim /etc/zsh/zprofile 然后加入以下内容: 12PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/local/lib/pkgconfig export PKG_CONFIG_PATH 运行source /etc/zsh/zprofile使其生效。 当前用户 1vim ~/.zshrc 然后加入以下内容: 12PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/local/lib/pkgconfig export PKG_CONFIG_PATH 运行source ~/.zshrc使其生效。 卸载OpenCV进入OpenCV解压文件夹中的buid文件夹： 1cd $HOME/opencv-x.x.x/build 运行： 1sudo make uninstall 然后把整个opencv-x.x.x文件夹都删掉。随后再运行： 1234sudo rm -r /usr/local/include/opencv2 /usr/local/include/opencv \/usr/include/opencv /usr/include/opencv2 /usr/local/share/opencv \/usr/local/share/OpenCV /usr/share/opencv /usr/share/OpenCV \/usr/local/bin/opencv* /usr/local/lib/libopencv 把一些残余的动态链接文件和空文件夹删掉。有些文件夹已经被删掉了所以会找不到路径。 TensorRT安装TensorRT TensorRT官方安装指南 TensorRT环境变量设置首先下载tar版本的安装包，需要登陆NVIDIA账号。安装TensorRT前需要安装Cuda和安装cudnn，安装步骤可以参考上方。打开下载的TensorRT所在路径，解压下载的tar文件： 12chmod 777 TensorRT-XXX.tar.gztar -xzvf TensorRT-XXX.tar.gz 将加压后的TensorRT-XXX文件夹移动到HOME目录下，并创建软连接，这样可以安装多个版本的TensorRT-XXX，在切换的时候只需要将用到的TensorRT-XXX版本软连接到TensorRT上就可以了: 1234567891011mv TensorRT-XXX ~/TensorRT-XXXcd# Create Symbol Linkln -s ~/TensorRT-XXX TensorRT# TensorRT 3sudo ln -s ~/TensorRT/bin/giexec /usr/local/bin/# TensorRT &gt;= 4sudo ln -s ~/TensorRT/bin/trtexec /usr/local/bin/ 然后设置环境变量： 12345# bashvim ~/.bashrc # 打开环境变量文件# zshvim ~/.zshrc # 打开环境变量文件 1234# 将下面三个环境变量写入环境变量文件并保存export LD_LIBRARY_PATH=~/TensorRT/lib:$LD_LIBRARY_PATHexport CUDA_INSTALL_DIR=/usr/local/cudaexport CUDNN_INSTALL_DIR=/usr/local/cuda 12345# bashsource ~/.bashrc # 使刚刚修改的环境变量文件生效# zshsource ~/.zshrc 安装Python的TensorRT包进到解压后的TensorRT的Python文件下： 非虚拟环境下1234567cd ~/TensorRT/python/# 对于python2sudo pip2 install tensorrt-XXX-cp27-cp27mu-linux_x86_64.whl# 对于python3sudo pip3 install tensorrt-XXX-cp35-cp35m-linux_x86_64.whl 或者： 1234567cd TensorRT/python/# 对于python2pip2 install tensorrt-XXX-cp27-cp27mu-linux_x86_64.whl --user# 对于python3pip3 install tensorrt-XXX-cp35-cp35m-linux_x86_64.whl --user 虚拟环境下12345678source activate venvcd TensorRT/python/# 对于python2pip install tensorrt-XXX-cp27-cp27mu-linux_x86_64.whl# 对于python3pip install tensorrt-XXX-cp35-cp35m-linux_x86_64.whl 如安装失败请参考安装过程中遇到的问题以及解决方法。 安装uff转到uff目录下安装uff文件夹下安装： 非虚拟环境下1234567cd ~/TensorRT/uff/# 对于python2sudo pip2 install uff-XXX-py2.py3-none-any.whl# 对于python3sudo pip3 install uff-XXX-py2.py3-none-any.whl 或者： 1234567cd TensorRT/uff/# 对于python2pip2 install uff-XXX-py2.py3-none-any --user# 对于python3pip3 install uff-XXX-py2.py3-none-any --user 虚拟环境下12345678source activate venvcd TensorRT/uff/# 对于python2pip install uff-XXX-py2.py3-none-any.whl# 对于python3pip install uff-XXX-py2.py3-none-any.whl 验证TensorRT是否安装成功测试TensorRT是否安装成功： 1which tensorrt 会输出TensorRT的安装路径: 1/usr/local/bin/tensorrt 测试uff是否安装成功： 1which convert-to-uff 会输出uff的安装路径: 1/usr/local/bin/convert-to-uff 拷贝lenet5.uff到python相关目录进行验证： 123456sudo cp TensorRT/data/mnist/lenet5.uff TensorRT/python/data/mnist/lenet5.uffcd TensorRT/samples/sampleMNISTmake cleanmakecd /TensorRT/bin（转到bin目录下面，make后的可执行文件在此目录下）./sample_mnist 命令执行顺利即安装成功。 TensorRT安装过程中遇到的问题以及解决方法在安装Python的TensorRT包时可能出现的错误1234In file included from src/cpp/cuda.cpp:1:0:src/cpp/cuda.hpp:14:18: fatal error: cuda.h: No such file or directorycompilation terminated.error: command 'x86_64-linux-gnu-gcc' failed with exit status 1 原因显示是找不到cuda.h，根据网上分析是因为用了sudo之后环境变量用的是root的环境变量。 解决方案将cuda的安装路径添加到root的环境变量中，在root角色下安装Python的TensorRT包: 123456sudo gedit /etc/profile.d/cuda.sh``` 添加： ```shellexport PATH=/usr/local/cuda/bin:$PATH 1234567sudo su -# 对于python2pip2 install tensorrt-XXX-cp27-cp27mu-linux_x86_64.whl# 对于python3pip3 install tensorrt-XXX-cp35-cp35m-linux_x86_64.whlexit Python导入tensorrt或者tensorflow的时候提示ImportError: numpy.core.multiarray failed to import解决方法: 1pip install -U numpy TensorRT生成EngineCaffe模型用TensorRT生成Engine12345~/TensorRT/bin/giexec \--deploy=path_to_prototxt/intputdeploy.prototxt \--output=prob \--model=path_to_caffemodel/caffeModelName.caffemodel \--engine=path_to_output_engine/outputEngineName.engine Tensorflow模型用TensorRT生成Engine源码文件在src/tensorrt/tools中。 首先将TensorFlow模型生成uff文件，然后再将uff文件转为engine: 将TensorFlow模型生成UFF文件123456789101112131415161718192021222324252627282930313233343536373839# -*- coding: utf-8 -*-# Author : Andy Liu# Last modified: 2019-03-15# This script is used to convert tensorflow model file to uff file# Using: # python tf_to_uff.pyimport uffimport tensorflow as tfimport tensorrt as trtimport osos.environ['CUDA_VISIBLE_DEVICES'] = '0'ckpt_path = "model/model.ckpt"forzen_model_path = "model/frozen_graphs/frozen_graph.pb"uff_path = "model/uff/model.uff"frozen_input_name = "input"net_input_shape = (3, 32, 32)frozen_output_names = ["fc_3/frozen"]def getChatBotModel(ckpt_path): with tf.Session() as sess: sess.run(tf.global_variables_initializer()) saver = tf.train.import_meta_graph(ckpt_path+'.meta') saver.restore(sess, ckpt_path) graph = tf.get_default_graph().as_graph_def() #graph = tf.get_default_graph() #print('graph list:', graph.get_operations()) frozen_graph = tf.graph_util.convert_variables_to_constants(sess, graph, frozen_output_names) return tf.graph_util.remove_training_nodes(frozen_graph)tf_model = getChatBotModel(ckpt_path)with tf.gfile.FastGFile(forzen_model_path, mode='wb') as f: f.write(tf_model.SerializeToString())#uff_model = uff.from_tensorflow(tf_model, output_nodes=frozen_output_names, output_filename=uff_path, text=True)uff_model = uff.from_tensorflow_frozen_model(forzen_model_path, output_nodes=frozen_output_names, output_filename=uff_path, text=True)print('Success! UFF file is in ', os.path.abspath(uff_path)) 将UFF文件转为Engine12345678910111213141516171819202122232425262728293031323334353637383940414243# -*- coding: utf-8 -*-# Author : Andy Liu# Last modified: 2019-03-15# This script is used to convert .uff file to .engine for TX2/PX2 or other NVIDIA Platform# Using: # python uff_to_engine.pyimport os# import tensorflow as tfimport tensorrt as trtfrom tensorrt.parsers import uffparserimport uffprint("TensorRT version = ", trt.__version__)os.environ['CUDA_VISIBLE_DEVICES'] = '0'frozen_input_name = "input"net_input_shape = (3, 32, 32)frozen_output_name = "fc_3/frozen"uff_path = 'model.uff'engine_path = "model.engine"def uff2engine(frozen_input_name, net_input_shape,frozen_output_name,uff_path,engine_path): with open(uff_path, 'rb') as f: uff_model = f.read() G_LOGGER = trt.infer.ConsoleLogger(trt.infer.LogSeverity.ERROR) parser = uffparser.create_uff_parser() parser.register_input(frozen_input_name, net_input_shape, 0) # parser.register_input("input", (3, 128, 128), 0) parser.register_output(frozen_output_name) engine = trt.utils.uff_to_trt_engine(G_LOGGER, uff_model, parser, 1, 1&lt;&lt;20 ) parser.destroy() trt.utils.write_engine_to_file(engine_path, engine.serialize())if __name__ == '__main__': engine_dir = os.path.dirname(engine_path) if not os.path.exists(engine_dir) and not engine_dir == '.' and not engine_dir =='': print("Warning !!! %s is not exists, now has create "%engine_dir) os.makedirs(engine_dir) uff2engine(frozen_input_name, net_input_shape,frozen_output_name,uff_path,engine_path) print("Success! Engine file has saved in ", os.path.abspath(engine_path)) 调用Engine进行推理12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061import os# import tensorflow as tfimport tensorrt as trtfrom tensorrt.parsers import uffparserimport pycuda.driver as cuda# import ufffrom PIL import Imageimport numpy as npIMG_PATH = "./img/1.png"LABEL = 1ENGINE_PATH = "./model/engine/model.engine"NET_INPUT_SHAPE = (32, 32)NET_OUTPUT_SHAPE = 5def normalize_img(img): """ Normalize image data to [-1,+1] Arguments: img: source image """ return (img-128.)/128.# Load Imagedef load_image(img_path, net_input_shape): img = Image.open(img_path) img = img.resize(net_input_shape) return np.asarray(img, dtype=np.float32)img = load_image(IMG_PATH, NET_INPUT_SHAPE)img = normalize_img(img)# Load Engine fileG_LOGGER = trt.infer.ConsoleLogger(trt.infer.LogSeverity.ERROR)engine = trt.utils.load_engine(G_LOGGER, ENGINE_PATH)context = engine.create_execution_context()runtime = trt.infer.create_infer_runtime(G_LOGGER)output = np.empty(5, dtype = np.float32)# Alocate device memoryd_input = cuda.mem_alloc(1 * img.nbytes)d_output = cuda.mem_alloc(NET_OUTPUT_SHAPE * output.nbytes)bindings = [int(d_input), int(d_output)]stream = cuda.Stream()# Transfer input data to devicecuda.memcpy_htod_async(d_input, img, stream)# Execute model context.enqueue(1, bindings, stream.handle, None)# Transfer predictions backcuda.memcpy_dtoh_async(output, d_output, stream)# Syncronize threadsstream.synchronize()print("Test Case: " + str(LABEL))print ("Prediction: " + str(np.argmax(output))) TensorRT官方实例资料在本仓库src/tensorrt目录下: TensorRT Caffe Engine TensorRT Tensorflow Engine Manually Construct Tensorrt Engine 参考资料 TensorRT官方安装指南 安装caffePython2下安装Cafe安装依赖库12345678910sudo apt-get updatesudo apt-get upgradesudo apt-get install -y build-essential cmake git pkg-configsudo apt-get install -y libprotobuf-dev libleveldb-dev libsnappy-dev protobuf-compilersudo apt-get install -y libatlas-base-devsudo apt-get install -y --no-install-recommends libboost-all-devsudo apt-get install -y libgflags-dev libgoogle-glog-dev liblmdb-devsudo apt-get -y install build-essential cmake git libgtk2.0-dev pkg-config python-dev python-numpy libdc1394-22 libdc1394-22-dev libjpeg-dev libpng12-dev libtiff5-dev libjasper-dev libavcodec-dev libavformat-dev libswscale-dev libxine2-dev libgstreamer0.10-dev libgstreamer-plugins-base0.10-dev libv4l-dev libtbb-dev libqt4-dev libfaac-dev libmp3lame-dev libopencore-amrnb-dev libopencore-amrwb-dev libtheora-dev libvorbis-dev libxvidcore-dev x264 v4l-utils unzip 配置CUDA 及 CUDNN添加 CUDA 环境变量 12345vim ~/.bashrc# CUDAexport PATH=/usr/local/cuda/bin:$PATH # cuda -&gt; /usr/local/cuda-9.0export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH 安装OpenCV，方法同: 安装OpenCV然后按照前面的方法屏蔽Anaconda配置Caffe首先cd 到你要安装的路径下运行： 1git clone https://github.com/BVLC/caffe.git 这时候会出现一个 caffe 文件夹。命令行进入此文件夹，运行： 12345678910111213cp Makefile.config.example Makefile.config# 若无法拷贝则运行以下命令# chmod 777 Makefile.config.example# cp Makefile.config.example Makefile.config``` 此命令是将 `Makefile.config.example` 文件复制一份并更名为 `Makefile.config` ，复制一份的原因是编译 `caffe` 时需要的是 `Makefile.config` 文件，而Makefile.config.example 只是 `caffe` 给出的配置文件例子，不能用来编译 `caffe`。 **然后修改 Makefile.config 文件**，在 `caffe` 目录下打开该文件：```shellvim Makefile.config# 或者用右键选择gedit/vscode打开该文件 修改 Makefile.config 文件内容 应用 cudnn将：#USE_CUDNN := 1修改为：USE_CUDNN := 1 应用 opencv 3 版本将：#OPENCV_VERSION := 3修改为：OPENCV_VERSION := 3 使用 python 接口将： #WITH_PYTHON_LAYER := 1修改为WITH_PYTHON_LAYER := 1 修改 python 路径将： 12INCLUDE_DIRS := $(PYTHON_INCLUDE) /usr/local/includeLIBRARY_DIRS := $(PYTHON_LIB) /usr/local/lib /usr/lib 修改为： 12INCLUDE_DIRS := $(PYTHON_INCLUDE) /usr/local/include /usr/include/hdf5/serialLIBRARY_DIRS := $(PYTHON_LIB) /usr/local/lib /usr/lib /usr/lib/x86_64-linux-gnu /usr/lib/x86_64-linux-gnu/hdf5/serial 此python路径为系统自带python的路径，假如想使用Anaconda的python的话需要在其他地方修改。 去掉compute_20找到 12345678910111213# CUDA architecture setting: going with all of them.# For CUDA &lt; 6.0, comment the *_50 through *_61 lines for compatibility.# For CUDA &lt; 8.0, comment the *_60 and *_61 lines for compatibility.# For CUDA &gt;= 9.0, comment the *_20 and *_21 lines for compatibility.CUDA_ARCH := -gencode arch=compute_20,code=sm_20 \ -gencode arch=compute_20,code=sm_21 \ -gencode arch=compute_30,code=sm_30 \ -gencode arch=compute_35,code=sm_35 \ -gencode arch=compute_50,code=sm_50 \ -gencode arch=compute_52,code=sm_52 \ -gencode arch=compute_60,code=sm_60 \ -gencode arch=compute_61,code=sm_61 \ -gencode arch=compute_61,code=compute_61 改为： 1234567891011# CUDA architecture setting: going with all of them.# For CUDA &lt; 6.0, comment the *_50 through *_61 lines for compatibility.# For CUDA &lt; 8.0, comment the *_60 and *_61 lines for compatibility.# For CUDA &gt;= 9.0, comment the *_20 and *_21 lines for compatibility.CUDA_ARCH := -gencode arch=compute_30,code=sm_30 \ -gencode arch=compute_35,code=sm_35 \ -gencode arch=compute_50,code=sm_50 \ -gencode arch=compute_52,code=sm_52 \ -gencode arch=compute_60,code=sm_60 \ -gencode arch=compute_61,code=sm_61 \ -gencode arch=compute_61,code=compute_61 由于CUDA 9.x +并不支持compute_20，此处不修改的话编译caffe时会报错： 1nvcc fatal : Unsupported gpu architecture 'compute_20' 配置好的完整的Makefile.config文件在caffe源码目录中修改后的完整Makefile.config文件，内容如下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119## Refer to http://caffe.berkeleyvision.org/installation.html# Contributions simplifying and improving our build system are welcome!# cuDNN acceleration switch (uncomment to build with cuDNN).USE_CUDNN := 1# CPU-only switch (uncomment to build without GPU support).# CPU_ONLY := 1# uncomment to disable IO dependencies and corresponding data layers# USE_OPENCV := 0# USE_LEVELDB := 0# USE_LMDB := 0# uncomment to allow MDB_NOLOCK when reading LMDB files (only if necessary)# You should not set this flag if you will be reading LMDBs with any# possibility of simultaneous read and write# ALLOW_LMDB_NOLOCK := 1# Uncomment if you're using OpenCV 3OPENCV_VERSION := 3# To customize your choice of compiler, uncomment and set the following.# N.B. the default for Linux is g++ and the default for OSX is clang++CUSTOM_CXX := g++# CUDA directory contains bin/ and lib/ directories that we need.CUDA_DIR := /usr/local/cuda# On Ubuntu 14.04, if cuda tools are installed via# "sudo apt-get install nvidia-cuda-toolkit" then use this instead:# CUDA_DIR := /usr# CUDA architecture setting: going with all of them.# For CUDA &lt; 6.0, comment the *_50 through *_61 lines for compatibility.# For CUDA &lt; 8.0, comment the *_60 and *_61 lines for compatibility.# For CUDA &gt;= 9.0, comment the *_20 and *_21 lines for compatibility.CUDA_ARCH := -gencode arch=compute_30,code=sm_30 \ -gencode arch=compute_35,code=sm_35 \ -gencode arch=compute_50,code=sm_50 \ -gencode arch=compute_52,code=sm_52 \ -gencode arch=compute_60,code=sm_60 \ -gencode arch=compute_61,code=sm_61 \ -gencode arch=compute_61,code=compute_61# BLAS choice:# atlas for ATLAS (default)# mkl for MKL# open for OpenBlasBLAS := atlas# Custom (MKL/ATLAS/OpenBLAS) include and lib directories.# Leave commented to accept the defaults for your choice of BLAS# (which should work)!# BLAS_INCLUDE := /path/to/your/blas# BLAS_LIB := /path/to/your/blas# Homebrew puts openblas in a directory that is not on the standard search path# BLAS_INCLUDE := $(shell brew --prefix openblas)/include# BLAS_LIB := $(shell brew --prefix openblas)/lib# This is required only if you will compile the matlab interface.# MATLAB directory should contain the mex binary in /bin.# MATLAB_DIR := /usr/local# MATLAB_DIR := /Applications/MATLAB_R2012b.app# NOTE: this is required only if you will compile the python interface.# We need to be able to find Python.h and numpy/arrayobject.h.PYTHON_INCLUDE := /usr/include/python2.7 \ /usr/lib/python2.7/dist-packages/numpy/core/include# Anaconda Python distribution is quite popular. Include path:# Verify anaconda location, sometimes it's in root.# ANACONDA_HOME := $(HOME)/anaconda# PYTHON_INCLUDE := $(ANACONDA_HOME)/include \ # $(ANACONDA_HOME)/include/python2.7 \ # $(ANACONDA_HOME)/lib/python2.7/site-packages/numpy/core/include# Uncomment to use Python 3 (default is Python 2)# PYTHON_LIBRARIES := boost_python3 python3.5m# PYTHON_INCLUDE := /usr/include/python3.5m \# /usr/lib/python3.5/dist-packages/numpy/core/include# We need to be able to find libpythonX.X.so or .dylib.PYTHON_LIB := /usr/lib# PYTHON_LIB := $(ANACONDA_HOME)/lib# Homebrew installs numpy in a non standard path (keg only)# PYTHON_INCLUDE += $(dir $(shell python -c 'import numpy.core; print(numpy.core.__file__)'))/include# PYTHON_LIB += $(shell brew --prefix numpy)/lib# Uncomment to support layers written in Python (will link against Python libs)WITH_PYTHON_LAYER := 1# Whatever else you find you need goes here.INCLUDE_DIRS := $(PYTHON_INCLUDE) /usr/local/include /usr/include/hdf5/serial/LIBRARY_DIRS := $(PYTHON_LIB) /usr/local/lib /usr/lib /usr/lib/x86_64-linux-gnu /usr/lib/x86_64-linux-gnu/hdf5/serial# If Homebrew is installed at a non standard location (for example your home directory) and you use it for general dependencies# INCLUDE_DIRS += $(shell brew --prefix)/include# LIBRARY_DIRS += $(shell brew --prefix)/lib# NCCL acceleration switch (uncomment to build with NCCL)# https://github.com/NVIDIA/nccl (last tested version: v1.2.3-1+cuda8.0)# USE_NCCL := 1# Uncomment to use `pkg-config` to specify OpenCV library paths.# (Usually not necessary -- OpenCV libraries are normally installed in one of the above $LIBRARY_DIRS.)# USE_PKG_CONFIG := 1# N.B. both build and distribute dirs are cleared on `make clean`BUILD_DIR := buildDISTRIBUTE_DIR := distribute# Uncomment for debugging. Does not work on OSX due to https://github.com/BVLC/caffe/issues/171# DEBUG := 1# The ID of the GPU that 'make runtest' will use to run unit tests.TEST_GPUID := 0# enable pretty build (comment to see full commands)Q ?= @ 修改caffe 目录下的Makefile文件修改的地方找起来比较困难的话可以复制到word里查找将： 1NVCCFLAGS +=-ccbin=$(CXX) -Xcompiler-fPIC $(COMMON_FLAGS) 替换为： 1NVCCFLAGS += -D_FORCE_INLINES -ccbin=$(CXX) -Xcompiler -fPIC $(COMMON_FLAGS) 将： 1LIBRARIES += glog gflags protobuf boost_system boost_filesystem m hdf5_hl hdf5 改为： 1LIBRARIES += glog gflags protobuf boost_system boost_filesystem m hdf5_serial_hl hdf5_serial 至此caffe配置文件修改完毕，可以开始编译了。假如显卡不是feimi架构的可以输入如下命令防止出现Unsupported gpu architecture &#39;compute_20&#39;的问题： 1cmake -D CMAKE_BUILD_TYPE=RELEASE -D CUDA_GENERATION=Kepler .. 编译安装Caffe在 caffe 目录下执行： 12345cd caffemake all -j $(($(nproc) + 1))make test -j $(($(nproc) + 1))make runtest -j $(($(nproc) + 1))make pycaffe -j $(($(nproc) + 1)) runtest之后成功成功的界面如下: 添加Caffe环境变量 12vim ~/.bashrcexport PYTHONPATH=~/caffe/python:$PYTHONPATH 常见问题常见问题 1在caffe源码目录中修改Makefile文件中这一行如下： 1LIBRARIES += glog gflags protobuf boost_system boost_filesystem m hdf5_serial_hl hdf5_serial 上述中Makefile.config和Makefile文件都要添加hdf5相关选项，否则会提示以下错误： 常见问题 2在python中导入caffe库的时候会提示以下信息： 12/usr/local/lib/python2.7/dist-packages/scipy/sparse/lil.py:19: RuntimeWarning: numpy.dtype size changed, may indicate binary incompatibility. Expected 96, got 88 解决方法将numpy降版本： 12pip uninstall numpypip install numpy==1.14.5 常见问题 3导入caffe的时候还有一个错误:原因是我在ubutnu下用的linuxbrew安装的Python2设为默认Python了，然后caffe编译配置文件里用的是系统的Python2路径，导致系统自带的Python与linuxbrew安装的Python环境混乱。解决方法是屏蔽掉linuxbrew环境。只用系统自带的Python，将~/.profile文件中的eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)这一行屏蔽: 12# linuxbrew#eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv) 然后重启电脑. 常见问题 4导致上述原因是pip2同时存在于/usr/bin/pip2和/usr/local/bin/pip2两个地方: 12345678# 查看pip2位于哪里$ where pip2/usr/local/bin/pip2/usr/bin/pip2# 查看当前用到的pip2是哪一个$ which pip/usr/local/bin/pip 解决方法是用/usr/local/bin/pip2安装protobuf: 1/usr/local/bin/pip2 install protobuf Importing caffe results in ImportError: “No module named google.protobuf.internal” This is probably because you have two python environments in your machine, the one provided by your linux distribution(pip) and the other by the anaconda environment (/home/username/anaconda2/bin/pip).Try installing protobuf for both environments to be surepip install protobuf/home/username/anaconda2/bin/pip install protobuf Python3下安装Cafe切换系统Python版本到Python3将系统Python切换到Python3版本: 1234which python3which pythonsudo rm /usr/bin/python # 删掉Python软连接sudo ln -s /usr/bin/python3 /usr/bin/python # 将Python3软连接到Python 装依赖库 同Python2.7安装依赖库 配置CUDA 及 CUDNN 同Python2.7配置CUDA以及CUDNN pip 安装依赖模块12pip install opencv-python==3.4.0.12 # OpenCV的Python版本要跟opencv源码安装的版本对应起来pip install protobuf 安装OpenCV，方法同: 安装OpenCV然后按照前面的方法屏蔽Anaconda配置Caffe首先cd 到你要安装的路径下运行： 1git clone https://github.com/BVLC/caffe.git 这时候会出现一个 caffe 文件夹。命令行进入此文件夹，运行： 1234567891011121314cp Makefile.config.example Makefile.config# 若无法拷贝则运行以下命令# chmod 777 Makefile.config.example# cp Makefile.config.example Makefile.config``` 此命令是将 `Makefile.config.example` 文件复制一份并更名为 `Makefile.config` ，复制一份的原因是编译 `caffe` 时需要的是 `Makefile.config` 文件，而Makefile.config.example 只是 `caffe` 给出的配置文件例子，不能用来编译 `caffe`。 ##### 然后修改 Makefile.config 文件**，在 `caffe` 目录下打开该文件```shellvim Makefile.config# 或者用右键选择gedit/vscode打开该文件 在caffe源码目录中修改Makefile.config内容如下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127## Refer to http://caffe.berkeleyvision.org/installation.html# Contributions simplifying and improving our build system are welcome!# cuDNN acceleration switch (uncomment to build with cuDNN).USE_CUDNN := 1# CPU-only switch (uncomment to build without GPU support).# CPU_ONLY := 1# uncomment to disable IO dependencies and corresponding data layers# USE_OPENCV := 0# USE_LEVELDB := 0# USE_LMDB := 0# uncomment to allow MDB_NOLOCK when reading LMDB files (only if necessary)# You should not set this flag if you will be reading LMDBs with any# possibility of simultaneous read and write# ALLOW_LMDB_NOLOCK := 1# Uncomment if you're using OpenCV 3OPENCV_VERSION := 3# To customize your choice of compiler, uncomment and set the following.# N.B. the default for Linux is g++ and the default for OSX is clang++CUSTOM_CXX := g++# CUDA directory contains bin/ and lib/ directories that we need.CUDA_DIR := /usr/local/cuda# On Ubuntu 14.04, if cuda tools are installed via# "sudo apt-get install nvidia-cuda-toolkit" then use this instead:# CUDA_DIR := /usr# CUDA architecture setting: going with all of them.# For CUDA &lt; 6.0, comment the *_50 through *_61 lines for compatibility.# For CUDA &lt; 8.0, comment the *_60 and *_61 lines for compatibility.# For CUDA &gt;= 9.0, comment the *_20 and *_21 lines for compatibility.CUDA_ARCH := -gencode arch=compute_30,code=sm_30 \ -gencode arch=compute_35,code=sm_35 \ -gencode arch=compute_50,code=sm_50 \ -gencode arch=compute_52,code=sm_52 \ -gencode arch=compute_60,code=sm_60 \ -gencode arch=compute_61,code=sm_61 \ -gencode arch=compute_61,code=compute_61# BLAS choice:# atlas for ATLAS (default)# mkl for MKL# open for OpenBlasBLAS := atlas# Custom (MKL/ATLAS/OpenBLAS) include and lib directories.# Leave commented to accept the defaults for your choice of BLAS# (which should work)!# BLAS_INCLUDE := /path/to/your/blas# BLAS_LIB := /path/to/your/blas# Homebrew puts openblas in a directory that is not on the standard search path# BLAS_INCLUDE := $(shell brew --prefix openblas)/include# BLAS_LIB := $(shell brew --prefix openblas)/lib# This is required only if you will compile the matlab interface.# MATLAB directory should contain the mex binary in /bin.# MATLAB_DIR := /usr/local# MATLAB_DIR := /Applications/MATLAB_R2012b.app# NOTE: this is required only if you will compile the python interface.# We need to be able to find Python.h and numpy/arrayobject.h.# PYTHON_INCLUDE := /usr/include/python2.7 \# /usr/lib/python2.7/dist-packages/numpy/core/include# Anaconda Python distribution is quite popular. Include path:# Verify anaconda location, sometimes it's in root.# ANACONDA_HOME := $(HOME)/anaconda# PYTHON_INCLUDE := $(ANACONDA_HOME)/include \ # $(ANACONDA_HOME)/include/python2.7 \ # $(ANACONDA_HOME)/lib/python2.7/site-packages/numpy/core/include# Uncomment to use Python 3 (default is Python 2)PYTHON_LIBRARIES := boost_python3 python3.5mPYTHON_INCLUDE := /usr/include/python3.5m \ /usr/lib/python3.5/dist-packages/numpy/core/include# We need to be able to find libpythonX.X.so or .dylib.PYTHON_LIB := /usr/lib# PYTHON_LIB := $(ANACONDA_HOME)/lib# Homebrew installs numpy in a non standard path (keg only)# PYTHON_INCLUDE += $(dir $(shell python -c 'import numpy.core; print(numpy.core.__file__)'))/include# PYTHON_LIB += $(shell brew --prefix numpy)/lib# Uncomment to support layers written in Python (will link against Python libs)WITH_PYTHON_LAYER := 1# Whatever else you find you need goes here.INCLUDE_DIRS := $(PYTHON_INCLUDE) /usr/local/include /usr/include/hdf5/serial/LIBRARY_DIRS := $(PYTHON_LIB) /usr/local/lib /usr/lib /usr/lib/x86_64-linux-gnu /usr/lib/x86_64-linux-gnu/hdf5/serial# If Homebrew is installed at a non standard location (for example your home directory) and you use it for general dependencies# INCLUDE_DIRS += $(shell brew --prefix)/include# LIBRARY_DIRS += $(shell brew --prefix)/lib# NCCL acceleration switch (uncomment to build with NCCL)# https://github.com/NVIDIA/nccl (last tested version: v1.2.3-1+cuda8.0)# USE_NCCL := 1# Uncomment to use `pkg-config` to specify OpenCV library paths.# (Usually not necessary -- OpenCV libraries are normally installed in one of the above $LIBRARY_DIRS.)# USE_PKG_CONFIG := 1# N.B. both build and distribute dirs are cleared on `make clean`BUILD_DIR := buildDISTRIBUTE_DIR := distribute# Uncomment for debugging. Does not work on OSX due to https://github.com/BVLC/caffe/issues/171# DEBUG := 1# The ID of the GPU that 'make runtest' will use to run unit tests.TEST_GPUID := 0# enable pretty build (comment to see full commands)Q ?= @``` ##### 修改` caffe 目录`下的` Makefile `文件*修改的地方找起来比较困难的话可以复制到word里查找* 将： ```shellNVCCFLAGS +=-ccbin=$(CXX) -Xcompiler-fPIC $(COMMON_FLAGS) 替换为： 1NVCCFLAGS += -D_FORCE_INLINES -ccbin=$(CXX) -Xcompiler -fPIC $(COMMON_FLAGS) 将： 1LIBRARIES += glog gflags protobuf boost_system boost_filesystem m hdf5_hl hdf5 改为： 1LIBRARIES += glog gflags protobuf boost_system boost_filesystem m hdf5_serial_hl hdf5_serial 至此caffe配置文件修改完毕，可以开始编译了。假如显卡不是feimi架构的可以输入如下命令防止出现Unsupported gpu architecture &#39;compute_20&#39;的问题： 1cmake -D CMAKE_BUILD_TYPE=RELEASE -D CUDA_GENERATION=Kepler .. 编译安装Caffe12345cd caffemake all -j $(($(nproc) + 1))make test -j $(($(nproc) + 1))make runtest -j $(($(nproc) + 1))make pycaffe -j $(($(nproc) + 1)) 添加Caffe环境变量 12vim ~/.bashrcexport PYTHONPATH=~/caffe/python:$PYTHONPATH 常见问题常见问题 1解决方法 1234567891011121314git clone https://github.com/madler/zlibcd path/to/zlib./configuremakemake install # you may add 'sudo'``` **常见问题 2** &lt;table&gt;&lt;tr&gt;&lt;td bgcolor=Violet&gt;protoc: error while loading shared libraries: libprotoc.so.10: cannot open shared object file: No such file or directory&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;**解决：**```shellexport LD_LIBRARY_PATH=/usr/local/lib 常见问题 3 /sbin/ldconfig.real: /usr/local/cuda-9.0/lib64/libcudnn.so.5 不是符号连接 解决：在sudo ldconfig时遇到usr/local/cuda-9.0/lib64/libcudnn.so.5不是符号连接的问题，解决办法也很简单，重新建立链接并删除原链接 首先找到usr/local/cuda-8.0/lib64/目录，搜索libcudnn然后发现两个文件libcudnn.so.5和libcudnn.so.5.0.5理论上只有一个libcudnn.so.5.0.5 终端执行: 1ln -sf /usr/local/cuda-9.0/lib64/libcudnn.so.5.0.5 /usr/local/cuda-9.0/lib64/libcudnn.so.5 再sudo ldconfig时就可以了，这时候会发现usr/local/cuda-9.0/lib64/目录下只有libcudnn.so.5.0.5文件了，libcudnn.so.5消失了。 常见问题 4 .build_release/tools/caffe: error while loading shared libraries: libhdf5.so.10: cannot open shared object file: No such file or directory 解决： 1echo "export LD_LIBRARY_PATH=/home/abc/anaconda2/lib:$LD_LIBRARY_PATH" &gt;&gt;~/.bashrc 常见问题 5 错误：python/caffe/_caffe.cpp:1:52:致命错误：Python.h：没有那个文件或目录 编译中断。 make:*** [python/caffe/_caffe.so]错误1 解决：执行：sudo find / -name &#39;Python.h&#39;找到他的路径，在Makefile.config的PYTHON_INCLUDE加上/home/abc/anaconda2/include/python2.7（路径是自己的） 常见问题 6 错误：import caffe时：ImportError:No module named skimage.io 解决：可能是我们没有安装所谓的skimage.io模块，所以可以用以下的命令来安装： 1pip install scikit-image # you may need use sudo 常见问题 7 import caffe Traceback(most recent call last): File"", line 1, in ImportError:No module named caffe 解决： 12echo'export PATH="/home/andy/caffe/python:$PATH"' &gt;&gt;~/.bashrcsource~/.bashrc 关掉终端，重新进入。 安装protobufprotobuf是什么protobuf（Protocol Buffer）它是google提供的一个开源库，是一种语言无关、平台无关、扩展性好的用于通信协议、数据存储的结构化数据串行化方法。有如XML，不过它更小、更快、也更简单。你可以定义自己的数据结构，然后使用代码生成器生成的代码来读写这个数据结构。 protobuf-c 是什么由于Protocol Buffer原生没有对C的支持，只能使用protobuf-c这个第三方库，它提供了支持C语言的API接口。 下面先安装protobuf，然后安装protobuf-c 。 安装protocbuf下载源码安装包https://developers.google.com/protocol-buffers/ 在release下可以找到所有的版本，我这里用的是2.4.1版本，复制protobuf-2.4.1.tar.gz的链接然后用wget命令下载。 1wget https://github.com/google/protobuf/releases/download/v2.4.1/protobuf-2.4.1.tar.gz 解压1tar -zxvf protobuf-2.4.1.tar.gz 编译/安装1cd protobuf-2.4.1 （可以参考README思路来做。） 1234./configuremakemake check #(check结果可能会有错误，但不用管她，因为暂时那些功能用不到)make install （完了之后会在 /usr/local/bin 目录下生成一个可执行文件 protoc） 检查安装是否成功1protoc --version 如果成功，则会输出版本号信息。如果有问题，则会输出错误内容。 错误及解决方法1protoc: error while loading shared libraries: libprotoc.so.8: cannot open shared 错误原因：protobuf的默认安装路径是/usr/local/lib，而/usr/local/lib 不在Ubuntu体系默认的 LD_LIBRARY_PATH 里，所以就找不到该lib解决方法：1). 创建文件sudo gedit /etc/ld.so.conf.d/libprotobuf.conf，在该文件中输入如下内容： 1/usr/local/lib 2). 执行命令 1sudo ldconfig 这时，再运行protoc –version 就可以正常看到版本号了 安装protobuf-c（这里使用的是protobuf-c-0.15版本，较高版本的安装类似） 进入下面的链接https://code.google.com/p/protobuf-c/进入Downloads界面 不知怎地，wget无法下载途中的protobuf-c-0.15.tar.gz文件。 怎么办呢，我们可以点击上图中的Export to GitHub，将代码导入到GitHub（当然你得有并登录自己的github账号），不过只有源码，没有release版。我们先wget下载源码，解包。由于是源码，所以没有configure文件，但是可以通过执行autogen.sh来生成configure文件，之后的操作就和安装protobuf类似了，这里就不细说了。安装完成后会在/usr/local/bin目录下便会生成一个可执行文件 protoc-c 在安装完protobuf-c后，我们来检验一下protobuf-c是否安装成功。到 protobuf-c-0.15/src/test 目录下，执行如下命令： 1protoc-c --c_out=. test.proto （c_out 标志是用来指定编译后所生成文件的输出路径，这里c_out指定的是当前目录。）如果在c_out指定目录下能够生成 test.pb-c.c 和 test.pb-c.h 这两个文件则说明安装成功了。 Protobuf的使用示例1touch person.proto 输入如下内容： 1234message Person &#123; required string name = 1; required int32 id = 2;&#125; 编译.proto文件 1protoc-c --c_out=. person.proto 1touch main.c 输入如下代码： 123456789101112131415161718192021222324252627282930#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include "person.pb-c.h" void main()&#123; // 定义一个Person元素，并往其中存入数据 Person person = PERSON__INIT; person.id = 1314; person.name = "lily"; // 字符串 lily 位于常量区 printf("id = %d\n", person.id); printf("name = %s\n", person.name); // 打包 int len = person__get_packed_size(&amp;person); //printf("len = %d\n", len); void *sendpack = malloc(len); person__pack(&amp;person, sendpack); // sendpack是打好的包，可以通过socket通讯将其发送出去。 //（这里主要讲protobuf，就不发送了） // 接收端解包 Person *recvbuf = person__unpack(NULL, len, sendpack); printf("id = %d\n", recvbuf-&gt;id); printf("name = %s\n", recvbuf-&gt;name); // 包用完了要释放 person__free_unpacked(recvbuf, NULL); free(sendpack);&#125; 编译 1gcc person.pb-c.c main.c -lprotobuf-c 执行./a.out，输出结果如下： 1234id = 1314name = lilyid = 1314name = lily Linux MATLAB安装安装前准备工作下载MATLAB for Linux文件, 这里用到的是@晨曦月下提供的百度网盘链接下载: 链接: https://pan.baidu.com/s/1W6jWkaXEMpMUEmIl8qmRwg密码: igx6 进入下载后的文件夹(假如下载后的文件放在了/home/Download/, 解压破解文件Matlab2018aLinux64Crack.tar.gz文件, 创建一个文件夹Crack来放置解压后的文件: 12cd ~/Downloadsudo mkdir Crack 解压文件: 12cd ~/Downloadtar -xvf Matlab2018aLinux64Crack.tar.gz -C Crack 在/mnt中创建一个文件夹用来挂载R2018a_glnxa64_dvd1.iso和R2018a_glnxa64_dvd2.iso: 12cd /mntsudo mkdir iso 先挂载R2018a_glnxa64_dvd1.iso: 12cd ~sudo mount -t auto -o loop R2018a_glnxa64_dvd1.iso /mnt/iso 如果这个时候提示/mnt/iso: WARNING:device write-protected, mounted read-only,那就修改下/mnt的权限: 12cd /sudo chmod 755 mnt Matlab安装过程安装开始，从挂载的文件夹iso中: 12cd ~sudo ./mnt/iso/install 选择 Use a File Installation Key: 选择Yes,同意条约: 选择默认安装目录,默认放在/usr/local中 选择I have the File Installation Key for my license,输入: 09806-07443-53955-64350-21751-41297 安装到某个进度会提示插入iso2,这个时候挂载R2018a_glnxa64_dvd2.iso 12cd ~sudo mount -t auto -o loop R2018a_glnxa64_dvd2.iso /mnt/iso 最后安装完成选择finsh 激活 复制破解文件Crack中license_standalone.lic到安装目录中 12cd ~/Cracksudo cp license_standalone.lic /usr/loca/MATLAB/R2018a/licenses 复制Crack中的R2018a到安装目录 12cd ~/Cracksudo cp -r R2018a /usr/local/MATLAB 至此激活完成! 收拾残局, 取消挂载,删除文件: 123sudo umunt /mnt/isocd /mntsudo rmdir iso Matlab设置创建命令方便在任何终端都可以打开matlab,采用软链接的方式在/usr/local/bin中创建启动命令matlab: 12cd /usr/lcoal/binsudo ln -s /usr/local/MATLAB/R2018a/bin/matlab matlab 参考资料 linux安装MATLAB R2018a步骤]]></content>
      <categories>
        <category>AI</category>
      </categories>
      <tags>
        <tag>AI</tag>
        <tag>Ubuntu</tag>
        <tag>NVIDIA</tag>
      </tags>
  </entry>
</search>
